- en: Appendix
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录
- en: 1\. Introduction to MongoDB
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1. MongoDB介绍
- en: 'Activity 1.01: Setting Up a Movies Database'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动1.01：设置电影数据库
- en: '**Solution:**'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: 'The following steps will help you complete this activity:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将帮助您完成此活动：
- en: 'First, connect to your MongoDB cluster that was set up as part of *Exercise
    1.04*, *Setting Up Your First Free MongoDB Cluster on Atlas*. It should look something
    like this:'
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，连接到作为*Exercise 1.04*的一部分设置的MongoDB集群，*在Atlas上设置您的第一个免费MongoDB集群*。它应该看起来像这样：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Enter the preceding command on your command prompt and provide the password
    when prompted. Upon successful login, you should see a shell prompt with your
    cluster name, something like this:'
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令提示符上输入前面的命令，并在提示时提供密码。成功登录后，您应该看到带有您的集群名称的shell提示，类似于这样：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, create the movies database and call it `moviesDB`. Utilize the `use` command:'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，创建电影数据库并将其命名为`moviesDB`。利用`use`命令：
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Create the `movies` collection with a few relevant attributes. Create the collection
    by inserting the documents into a non-existent collection. You are encouraged
    to think and implement collections with attributes that you find most suitable:'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个带有几个相关属性的`movies`集合。通过将文档插入不存在的集合来创建集合。鼓励您考虑并实现您认为最合适的集合和属性：
- en: '[PRE3]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This should result in the following output:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该导致以下输出：
- en: '[PRE4]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Use the `find` command to fetch the documents you inserted in the previous
    step, that is, `db.movies.find().pretty()`. It should return the following output:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`find`命令获取您在上一步中插入的文档，即`db.movies.find().pretty()`。它应该返回以下输出：
- en: '[PRE5]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You may also like to store awards information in your movies database. Create
    an `awards` collection with a few records. You are encouraged to think and come
    up with your own collection name and attributes. Here are the commands to insert
    a few sample documents in your `awards` collection:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可能还想在您的电影数据库中存储奖项信息。创建一个带有几条记录的`awards`集合。鼓励您考虑并提出自己的集合名称和属性。以下是在`awards`集合中插入几个示例文档的命令：
- en: '[PRE6]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Each of these commands should generate an output like the following:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令中的每个都应该生成以下类似的输出：
- en: '[PRE7]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Each of these commands should generate an output like the following:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令中的每个都应该生成以下类似的输出：
- en: '[PRE8]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The inserted ID is the unique ID for the document that is inserted, so it will
    not be the same for you as mentioned in the preceding output.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 插入的ID是插入的文档的唯一ID，因此它与前面的输出中提到的不同。
- en: 'Run the `find` command to get the documents from the `awards` collection. The
    lines starting with `//` (a double slash) are comments, which are only for the
    purpose of description; the database does not execute them as commands:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`find`命令以从`awards`集合获取文档。以`//`（双斜杠）开头的行是注释，仅用于描述目的；数据库不会将其作为命令执行：
- en: '[PRE9]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Here is the output of the preceding command:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前述命令的输出：
- en: '![Figure 1.39: Documents from the awards collection'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '![图1.39：来自奖项集合的文档'
- en: '](img/B15507_01_39.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_01_39.jpg)'
- en: 'Figure 1.39: Documents from the awards collection'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.39：来自奖项集合的文档
- en: Note
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This exercise was for you to add as many collections/documents as you think
    are required to store the movie data effectively and efficiently. Feel free to
    add any more relevant collections and documents.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这个练习是让您添加尽可能多的集合/文档，以便有效和高效地存储电影数据。随时添加任何其他相关的集合和文档。
- en: In this activity, you have found a relevant database solution for the movies
    database. You have also created a database on MongoDB Atlas for storing collections
    and documents.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个活动中，您为电影数据库找到了一个相关的数据库解决方案。您还在MongoDB Atlas上创建了一个用于存储集合和文档的数据库。
- en: In the next chapter, you will be provided with steps to import another sample
    dataset about movies. It is advisable that you think realistically about what
    other collections or attributes in the collections are required for a movies database.
    You will also see in the next chapter how your dataset is different from the sample
    provided.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将获得有关电影的另一个样本数据集的导入步骤。建议您实际考虑电影数据库所需的其他集合或集合中的属性。您还将在下一章中看到您的数据集与提供的样本有何不同。
- en: 2\. Documents and Data Types
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2. 文档和数据类型
- en: 'Activity 2.01: Modeling a Tweet into a JSON Document'
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动2.01：将推文建模为JSON文档
- en: '**Solution:**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: 'Perform the following steps to complete the activity:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以完成活动：
- en: 'Identify and list the following fields from the tweet that can be included
    in the JSON document:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 识别并列出可以包含在JSON文档中的推文中的以下字段：
- en: '[PRE10]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Group the related fields such that they can be placed as embedded objects or
    arrays. Since a tweet can have multiple hashtags and mentions, it can be represented
    as an array. The modified list appears as follows:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将相关字段分组，以便它们可以作为嵌入对象或数组放置。由于推文可以有多个标签和提及，因此可以表示为数组。修改后的列表如下所示：
- en: '[PRE11]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Prepare the user object and add the values from the tweet:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备用户对象并从推文中添加值：
- en: '[PRE12]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'List all the hashtags as an array:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有标签列为数组：
- en: '[PRE13]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Include all the mentions as an array:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将所有提及包括为数组：
- en: '[PRE14]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Once you combine all the documents with the rest of the fields, the final output
    will appear as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦将所有文档与其余字段组合，最终输出将如下所示：
- en: '[PRE15]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Click on `Validate JSON` to validate the code from any text editor as follows:![Figure
    2.21: Validated JSON document'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`验证JSON`以验证来自任何文本编辑器的代码：![图2.21：经过验证的JSON文档
- en: '](img/B15507_02_21.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_02_21.jpg)'
- en: 'Figure 2.21: Validated JSON document'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.21：经过验证的JSON文档
- en: In this activity, you modeled data from a tweet into a valid JSON document.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个活动中，您将数据从推文模型化为有效的JSON文档。
- en: 3\. Servers and Clients
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3. 服务器和客户端
- en: 'Activity 3.01: Managing Your Database Users'
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动3.01：管理您的数据库用户
- en: '**Solution:**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: 'The following are the detailed steps for the activity:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是该活动的详细步骤：
- en: Go to http://cloud.mongodb.com to connect to the Atlas console.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到http://cloud.mongodb.com连接到Atlas控制台。
- en: 'Log on to your new MongoDB Atlas web interface using your username and password,
    which was created when you registered for the Atlas Cloud:![Figure 3.40: MongoDB
    Atlas login page'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您的用户名和密码登录到新的MongoDB Atlas网络界面，该用户名和密码是在注册Atlas Cloud时创建的：![图3.40：MongoDB
    Atlas登录页面
- en: '](img/B15507_03_40.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_40.jpg)'
- en: 'Figure 3.40: MongoDB Atlas login page'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.40：MongoDB Atlas登录页面
- en: 'Create a new database called `dev_mflix` and, on the Atlas clusters page, click
    the `COLLECTIONS` button:![Figure 3.41: MongoDB Atlas Clusters Page'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`dev_mflix`的新数据库，在Atlas集群页面上，点击`COLLECTIONS`按钮：![图3.41：MongoDB Atlas集群页面
- en: '](img/B15507_03_41.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_41.jpg)'
- en: 'Figure 3.41: MongoDB Atlas Clusters Page'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.41：MongoDB Atlas集群页面
- en: 'A window with all the collections will appear, as shown in *Figure 3.42*:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 一个包含所有集合的窗口将出现，如*图3.42*所示：
- en: '![Figure 3.42: MongoDB Atlas data explorer'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.42：MongoDB Atlas数据浏览器'
- en: '](img/B15507_03_42.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_42.jpg)'
- en: 'Figure 3.42: MongoDB Atlas data explorer'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.42：MongoDB Atlas数据浏览器
- en: 'Next, click the `+Create Database` button, at the top of the database list.
    The following window will appear:![Figure 3.43: MongoDB Create Database window'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击数据库列表顶部的`+Create Database`按钮。将出现以下窗口：![图3.43：MongoDB创建数据库窗口
- en: '](img/B15507_03_43.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_43.jpg)'
- en: 'Figure 3.43: MongoDB Create Database window'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.43：MongoDB创建数据库窗口
- en: Set `DATABASE NAME` to `dev_mflix` and `COLLECTION NAME` to `dev_data01`, and
    then click the `CREATE` button.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`DATABASE NAME`设置为`dev_mflix`，将`COLLECTION NAME`设置为`dev_data01`，然后点击`CREATE`按钮。
- en: Create a custom role called `Developers`. Click on `Database Access` (on the
    left side). On the `Database Access` page, click on the `Custom Role` tab.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`Developers`的自定义角色。点击左侧的`Database Access`。在`Database Access`页面上，点击`Custom
    Role`选项卡。
- en: 'Click on the `Add Custom Role` button. The `Add Custom Role` window will appear,
    as in the following screenshot:![Figure 3.44: The Add Custom Role window'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`Add Custom Role`按钮。`Add Custom Role`窗口将出现，如下截图所示：![图3.44：Add Custom Role窗口
- en: '](img/B15507_03_44.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_44.jpg)'
- en: 'Figure 3.44: The Add Custom Role window'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.44：Add Custom Role窗口
- en: 'Within new `Developers` role, add the `readWrite` role on `dev_mflix` database.
    Then, add the `read` role on `sample_mflix` database and click on the `Add Custom
    Role` button. The new `Developers` role will appear in the list:![Figure 3.45:
    Database Access – Custom Roles'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新的`Developers`角色中，在`dev_mflix`数据库上添加`readWrite`角色。然后，在`sample_mflix`数据库上添加`read`角色，然后点击`Add
    Custom Role`按钮。新的`Developers`角色将出现在列表中：![图3.45：数据库访问-自定义角色
- en: '](img/B15507_03_45.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_45.jpg)'
- en: 'Figure 3.45: Database Access – Custom Roles'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.45：数据库访问-自定义角色
- en: 'Create the new Atlas user, `Mark`. In the `Database Access` menu, click the
    `+Add New Database User` button. The `Add New Database User` window will appear
    as follows:![Figure 3.46: Adding a new user called Mark'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建新的Atlas用户`Mark`。在`Database Access`菜单中，点击`+Add New Database User`按钮。`Add New
    Database User`窗口将如下图所示出现：![图3.46：添加名为Mark的新用户
- en: '](img/B15507_03_46.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_46.jpg)'
- en: 'Figure 3.46: Adding a new user called Mark'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.46：添加名为Mark的新用户
- en: 'Fill in the details as follows:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写如下细节：
- en: 'Username: `Mark`'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 用户名：`Mark`
- en: 'Authentication Method: `SCRAM`'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 认证方法：`SCRAM`
- en: 'Pre-defined Custom Role: `Developers`'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 预定义的自定义角色：`Developers`
- en: 'Now, a new user named `Mark` should appear in the Atlas user list:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在Atlas用户列表中应该出现一个名为`Mark`的新用户：
- en: '![Figure 3.47: Atlas database users'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.47：Atlas数据库用户'
- en: '](img/B15507_03_47.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_47.jpg)'
- en: 'Figure 3.47: Atlas database users'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.47：Atlas数据库用户
- en: 'Connect to the MongoDB cloud database as user `Mark` and run the `db.getUser()`
    shell function. The expected shell output is shown in the following screenshot:![Figure
    3.48: Shell output (example)'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以`Mark`用户身份连接到MongoDB云数据库，并运行`db.getUser()` shell函数。预期的shell输出如下截图所示：![图3.48：Shell输出（示例）
- en: '](img/B15507_03_48.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_48.jpg)'
- en: 'Figure 3.48: Shell output (example)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.48：Shell输出（示例）
- en: This concludes the activity. A new developer called Mark has been added to the
    Atlas system and the appropriate access permissions have been granted.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这就结束了这个活动。一个名为Mark的新开发人员已经被添加到Atlas系统，并且已经被授予适当的访问权限。
- en: 4\. Querying Documents
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4. 查询文档
- en: 'Activity 4.01: Finding Movies by Genre and Paginating Results'
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动4.01：按类型查找电影并分页显示结果
- en: '**Solution:**'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: 'The most important part of the `findMoviesByGenre` function is the underlying
    MongoDB query. You will take a step-by-step approach to solving the problem, starting
    with creating the query on a mongo shell. Once the query has been prepared, you
    will wrap it into a function:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`findMoviesByGenre`函数最重要的部分是底层的MongoDB查询。您将采用逐步方法来解决问题，首先在mongo shell上创建查询。一旦查询准备好，您将把它封装到一个函数中：'
- en: 'Create a query to filter results by `genre`. For this activity, we are using
    the `Action` genre:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个按`genre`过滤结果的查询。在这个活动中，我们使用`Action`类型的`genre`：
- en: '[PRE16]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The requirement is to return only the titles of the movies. For this, add a
    projection to project only the `title` field and exclude the rest, including `_id`:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要求仅返回电影的标题。为此，添加一个投影，仅投影`title`字段并排除其余部分，包括`_id`：
- en: '[PRE17]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Now, sort the results in descending order of IMDb ratings. Add a `sort()` function
    to the query:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，按照IMDb评分的降序对结果进行排序。在查询中添加一个`sort()`函数：
- en: '[PRE18]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Add the `skip` function and, for now, provide any value you want (`3`, in this
    case):'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加`skip`函数，现在提供任何您想要的值（在本例中为`3`）：
- en: '[PRE19]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Next, add a `limit` to the query, as follows. The limit value indicates the
    page size:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在查询中添加一个`limit`，如下所示。限制值表示页面大小：
- en: '[PRE20]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Finally, convert our resulting cursor into an array by using the `toArray()` function:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，通过使用`toArray()`函数将结果游标转换为数组：
- en: '[PRE21]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Now that the query has been written, open a text editor and write an empty
    function that accepts a genre, a page number, and a page size, as follows:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在查询已经编写完成，打开文本编辑器并编写一个空函数，接受`genre`、页码和页大小，如下所示：
- en: '[PRE22]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Copy and paste the query inside the function, assigning it to a variable, as follows:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制并粘贴查询到函数中，并将其赋值给一个变量，如下所示：
- en: '[PRE23]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The result you will get is an array. Write the logic needed to iterate through
    the elements and print the `title` fields, as follows:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将得到的结果是一个数组。编写需要迭代元素并打印`title`字段的逻辑，如下所示：
- en: '[PRE24]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The query still has hardcoded values that need to be replaced with the variables
    that are received as function arguments, so put the `genre` and `pageSize` variables
    in the correct places:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查询仍然具有硬编码的值，需要用作函数参数接收的变量替换这些值，因此将`genre`和`pageSize`变量放在正确的位置：
- en: '[PRE25]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now, you need to derive the skip value based on the page number and page size.
    When the user is on the first page, the skip value should be zero. On the second
    page, the skip value should be the page size. Similarly, if the user is on the
    third page, the skip value should be page size multiplied by 2\. Write this logic
    as follows:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您需要根据页码和页面大小来确定跳过值。当用户在第一页时，跳过值应为零。在第二页时，跳过值应为页面大小。同样，如果用户在第三页，跳过值应为页面大小乘以2。将此逻辑写成如下：
- en: '[PRE26]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Now, use the newly calculated skip value in the limit function. This makes the
    function complete.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在limit函数中使用新计算的skip值。这使函数完成。
- en: 'Copy and paste the function into the mongo shell and execute it. You should
    see the following result:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制并粘贴该函数到mongo shell中并执行。您应该看到以下结果：
- en: '![Figure 4.46: Final output'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '![图4.46：最终输出'
- en: '](img/B15507_04_46.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_04_46.jpg)'
- en: 'Figure 4.46: Final output'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.46：最终输出
- en: In this activity, by using the `sort()`, `skip()`, and `limit()` functions,
    you implemented pagination for your movie service, vastly improving the user experience.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`sort()`、`skip()`和`limit()`函数，在此活动中，您为电影服务实现了分页，大大改善了用户体验。
- en: 5\. Inserting, Updating, and Deleting Documents
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5. 插入、更新和删除文档
- en: 'Activity 5.01: Updating Comments for Movies'
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动5.01：更新电影评论
- en: '**Solution:**'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案：
- en: 'Perform the following steps to complete the activity:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤完成活动：
- en: 'First, update the `movie_id` field in all three comments. As we need to apply
    the same update to all three comments, we will use the `findOneAndUpdate()` function
    along with the `$set` operator to change the value of the field:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，更新所有三条评论中的`movie_id`字段。由于我们需要对所有三条评论应用相同的更新，因此我们将使用`findOneAndUpdate()`函数以及`$set`运算符来更改字段的值：
- en: '[PRE27]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Using the update command, we find three movies by their `_id`, providing their
    primary keys using the `$in` operator. Then, we use `$set` to update the value
    of the field `movie_id`.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 使用更新命令，我们通过其`_id`找到了三部电影，使用`$in`运算符提供它们的主键。然后，我们使用`$set`来更新字段`movie_id`的值。
- en: 'Connect to the MongoDB Atlas cluster, use the database `sample_mflix`, and
    then execute the command in the previous step. The output should be as follows:![Figure
    5.30: Assigning the correct movie to the comments'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到MongoDB Atlas集群，使用数据库`sample_mflix`，然后执行上一步中的命令。输出应该如下：![图5.30：将正确的电影分配给评论
- en: '](img/B15507_05_30.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_05_30.jpg)'
- en: 'Figure 5.30: Assigning the correct movie to the comments'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.30：将正确的电影分配给评论
- en: The output confirms that all three comments are updated correctly.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 输出确认所有三条评论都已正确更新。
- en: 'Find the movie `Sherlock Holmes` by `_id` and reduce the count of comments
    by `3`:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过`_id`找到电影`Sherlock Holmes`，并将评论数量减少`3`：
- en: '[PRE28]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The update command here finds the movie by `_id` and uses `$inc` with a negative
    number to reduce the `num_mflix_comments` count by 3\. It returns the modified
    document containing the fields `title` and `num_mflix_comments`.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 此更新命令通过`_id`找到电影并使用负数的`$inc`来减少`num_mflix_comments`计数3。它返回包含`title`和`num_mflix_comments`字段的修改后的文档。
- en: 'Execute the command on the same mongo shell, as follows:![Figure 5.31: Incrementing
    the count of comments on Sherlock Holmes'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在同一个mongo shell上执行以下命令：![图5.31：增加Sherlock Holmes的评论计数
- en: '](img/B15507_05_31.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_05_31.jpg)'
- en: 'Figure 5.31: Incrementing the count of comments on Sherlock Holmes'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.31：增加Sherlock Holmes的评论计数
- en: The output shows that the number of comments is correctly reduced by `3`.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示评论数量正确减少了`3`。
- en: 'Finally, prepare a similar command on `50 First Dates` and increase the number
    of comments by `3`. The following command should be used for this:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在`50 First Dates`上准备一个类似的命令，并将评论数量增加`3`。应使用以下命令：
- en: '[PRE29]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: In this update operation, we are finding the movie by its `_id` and using `$inc`
    with a positive value of 3 to increase the number of comments. It also returns
    the updated document and returns only the fields `title` and `num_mflix_comments`.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在此更新操作中，我们通过`_id`找到电影，并使用`$inc`以正值3增加评论数量。它还返回更新后的文档，并仅返回`title`和`num_mflix_comments`字段。
- en: 'Now, execute the command on the mongo shell:![Figure 5.32: Decrementing the
    count of comments on 50 First Dates'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在mongo shell上执行以下命令：![图5.32：减少50 First Dates的评论计数
- en: '](img/B15507_05_32.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_05_32.jpg)'
- en: 'Figure 5.32: Decrementing the count of comments on 50 First Dates'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.32：减少50 First Dates的评论计数
- en: The output shows that the number of comments has been increased correctly. In
    this activity, we have practiced modifying the fields of different collections
    and incrementing and decrementing values of numeric fields during the update operations.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示评论数量已经正确增加。在此活动中，我们练习了修改不同集合的字段，并在更新操作期间增加和减少数值字段的值。
- en: 6\. Updating with Aggregation Pipelines and Arrays
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6. 使用聚合管道和数组进行更新
- en: 'Activity 6.01: Adding an Actor''s Name to the Cast'
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动6.01：将演员姓名添加到演员表中
- en: '**Solution:**'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: 'Perform the following steps to complete the activity:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤完成活动：
- en: 'Since only one movie document must be updated, use the `findOneAndUpdate()`
    command. Open a text editor and type the following command:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于只有一个电影文档需要更新，因此使用`findOneAndUpdate()`命令。打开文本编辑器并输入以下命令：
- en: '[PRE30]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: This query uses a query expression based on the movie title.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 此查询使用基于电影标题的查询表达式。
- en: 'Prepare an update expression to insert an element into the array. As the cast
    array must be unique, use `$addToSet`, as follows:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备一个更新表达式来将元素插入数组中。由于演员表必须是唯一的，因此使用`$addToSet`，如下所示：
- en: '[PRE31]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: This query inserts `Nick Robinson` into `cast` and also ensures that no duplicates
    are inserted.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 此查询将`Nick Robinson`插入`cast`，并确保不插入重复项。
- en: 'Next, you need to sort the array. Since sets are unordered collections, you
    cannot use `$sort` in an `$addToSet` expression. Instead, first add the element
    to the set and then sort it. Open the mongo shell and connect to the `sample_mflix`
    database:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，您需要对数组进行排序。由于集合是无序的，您不能在`$addToSet`表达式中使用`$sort`。相反，首先将元素添加到集合，然后对其进行排序。打开mongo
    shell并连接到`sample_mflix`数据库：
- en: '[PRE32]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'In this command, the `returnNewDocument` flag has been set to `true` and only
    the `title` and `cast` fields have been projected. Execute the query in the `sample_mflix`
    database:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在此命令中，`returnNewDocument`标志已设置为`true`，并且只投影了`title`和`cast`字段。在`sample_mflix`数据库中执行查询：
- en: '![Figure 6.23: Adding the missing cast member''s name'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '![图6.23：添加缺失的演员名字'
- en: '](img/B15507_06_23.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_06_23.jpg)'
- en: 'Figure 6.23: Adding the missing cast member''s name'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.23：添加缺失的演员名字
- en: The screenshot confirms that the element `Nick Robinson` has been correctly
    added to the end of the array.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 截图确认元素`Nick Robinson`已正确添加到数组的末尾。
- en: 'Open a text editor and write a basic update command, along with the same query
    expression:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开文本编辑器，编写基本的更新命令，以及相同的查询表达式：
- en: '[PRE33]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Modify the command, add a `$push` expression to the array, and provide the
    `$sort` option:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改命令，向数组添加`$push`表达式，并提供`$sort`选项：
- en: '[PRE34]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: As no new element needs to be pushed, an empty array has been passed to the
    `$each` operator.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 由于不需要推送新元素，因此已将空数组传递给`$each`运算符。
- en: 'Add the `returnNewDocument` flag, add the projection to the `title` and `cast`
    fields, and execute the command, as follows:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加`returnNewDocument`标志，将投影添加到`title`和`cast`字段，并执行命令，如下所示：
- en: '[PRE35]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Open the mongo shell, connect to the `sample_mflix` database, and execute the
    command:![Figure 6.24: Sorting the missing cast'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开mongo shell，连接到`sample_mflix`数据库，并执行命令：![图6.24：对缺失的演员进行排序
- en: '](img/B15507_06_24.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_06_24.jpg)'
- en: 'Figure 6.24: Sorting the missing cast'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.24：对缺失的演员进行排序
- en: The output confirms that the `cast` array is now alphabetically sorted in the
    ascending order of the elements.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 输出确认`cast`数组现在按元素的升序字母顺序排序。
- en: 7\. Data Aggregation
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 7\. 数据聚合
- en: 'Activity 7.01: Putting Aggregations into Practice'
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动7.01：将聚合实践
- en: '**Solution:**'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: 'Perform the following steps to complete the activity:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤完成活动：
- en: 'First, create the scaffold code:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，创建脚手架代码：
- en: '[PRE36]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Add the first match for documents older than 2001:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加对2001年之前文档的第一个匹配项：
- en: '[PRE37]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Add a second match condition for movies with at least one award win:'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为至少获得一项奖项的电影添加第二个匹配条件：
- en: '[PRE38]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Add a `sort` condition for award nominations. This is to ensure that the `$first`
    operator in our `$group` statement fetches the highest nominated film for each genre:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为奖项提名添加一个`sort`条件。这是为了确保我们`$group`语句中的`$first`运算符为每个类型获取了最高提名的电影：
- en: '[PRE39]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Add the `$group` stage. Create groups based on the first genre and output the
    `$first` film in each group, along with the sum of award wins for that genre:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加`$group`阶段。根据第一个类型创建组，并输出每个组中的`$first`电影，以及该类型的奖项获奖总数：
- en: '[PRE40]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Perform a join on the `comments` collection to retrieve comments for the film
    in each group. This joins our computed `film_id` field with the `movie_id` comments
    field. Call this new array `comments`:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在`comments`集合上执行连接，以检索每个组中电影的评论。这将我们计算的`film_id`字段与`movie_id`评论字段进行连接。将这个新数组命名为`comments`：
- en: '[PRE41]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Project just the first comment from your new array, as well as any fields you
    want to output at the end. Use the `$slice` operator to return only the first
    entry in the `comments` array. Remember also to add the trailers to the film runtime:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅从新数组中投影第一个评论，以及您想要在最后输出的任何字段。使用`$slice`运算符仅返回`comments`数组中的第一个条目。还记得将预告片添加到电影的运行时间中：
- en: '[PRE42]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Finally, sort by `genre_award_wins` and limit to three documents:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，按`genre_award_wins`排序，并限制为三个文档：
- en: '[PRE43]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Your final pipeline should now look like this:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 您的最终管道现在应该是这样的：
- en: '[PRE44]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Your output will be as follows:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 您的输出将如下所示：
- en: '![Figure 7.24: Final output after running the pipeline (truncated for brevity)'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.24：运行管道后的最终输出（为简洁起见截断）'
- en: '](img/B15507_07_24.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_07_24.jpg)'
- en: 'Figure 7.24: Final output after running the pipeline (truncated for brevity)'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.24：运行管道后的最终输出（为简洁起见截断）
- en: In this activity, we have put together all the different aspects of aggregation
    pipelines to query, transform, and join data across collections. By combining
    the methods learned in this chapter, you will now be able to confidently design
    and write efficient aggregation pipelines to solve complex business problems.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个活动中，我们将聚合管道的不同方面组合在一起，以查询、转换和连接集合中的数据。通过结合本章学到的方法，您现在将能够自信地设计和编写高效的聚合管道，解决复杂的业务问题。
- en: 8\. Coding JavaScript in MongoDB
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 8\. 在MongoDB中编写JavaScript代码
- en: 'Activity 8.01: Creating a Simple Node.js Application'
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动8.01：创建一个简单的Node.js应用程序
- en: '**Solution:**'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: 'Perform the following steps to complete the activity:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤完成活动：
- en: 'Import the `readline` and MongoDB libraries:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入`readline`和MongoDB库：
- en: '[PRE45]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Create your `readline` interface:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建您的`readline`接口：
- en: '[PRE46]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Declare any variables you will need:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 声明您需要的任何变量：
- en: '[PRE47]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Create a function called `list` that will fetch the top five films for a given
    genre, returning their `title`, `favourite`, and `ID` fields. *You will need to
    ask for the category in this function. Look at the* `login` *method in Exercise
    7.05*, *Handling Inputs in Node.js, for more information. Combine this with the*
    `find` *code from our earlier exercises*:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`list`的函数，该函数将获取给定类型的前五部电影，返回它们的`title`、`favourite`和`ID`字段。*您需要在此函数中请求类别。查看第7.05练习中的*
    `login` *方法，了解更多信息。将此与我们之前练习中的* `find` *代码结合起来*：
- en: '[PRE48]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Create a function called `favourite` that will update a document by title,
    and add a key called `favourite` with a value of `true` to the document. You will
    need to ask for the title in this function using the same method you used for
    your `list` function. Combine this with the updated code from our earlier exercises:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`favourite`的函数，它将通过标题更新一个文档，并向文档添加一个名为`favourite`的键，值为`true`。在这个函数中，你需要使用与`list`函数相同的方法来询问标题。将这个与我们之前练习的更新代码结合起来：
- en: '[PRE49]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Create an interactive `while` loop based on the user''s input. If you''re unsure
    how to do this, refer to the `prompt` function from *Exercise 8.05*, *Handling
    Inputs in Node.js*:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基于用户输入创建一个交互式的`while`循环。如果你不确定如何做到这一点，请参考*Exercise 8.05*中的`prompt`函数，*在Node.js中处理输入*：
- en: '[PRE50]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Create the MongoDB connection and database, calling your `prompt` function
    if the database creates successfully:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建MongoDB连接和数据库，如果数据库创建成功，则调用你的`prompt`函数：
- en: '[PRE51]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Remember, you will need to pass the `database` and `client` objects through
    to each of your functions, including any time you call the `prompt` function.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，你需要通过每个函数传递`database`和`client`对象，包括每次调用`prompt`函数时。
- en: 'Run your code using `node Activity8.01.js`.![Figure 8.9: Final output (truncated
    for brevity)'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`node Activity8.01.js`运行你的代码。![图8.9：最终输出（为简洁起见进行了截断）
- en: '](img/B15507_08_09.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_08_09.jpg)'
- en: 'Figure 8.9: Final output (truncated for brevity)'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.9：最终输出（为简洁起见进行了截断）
- en: In this activity, you created an application with an interactive input loop
    and implemented error handling to handle invalid input types entered by the user.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个活动中，你创建了一个带有交互式输入循环的应用程序，并实现了错误处理来处理用户输入的无效类型。
- en: 9\. Performance
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 9\. 性能
- en: 'Activity 9.01: Optimizing a Query'
  id: totrans-232
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动9.01：优化查询
- en: '**Solution:**'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: 'Perform the following steps to complete the activity:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤完成活动：
- en: 'Open your mongo shell and connect to the `sample_supplies` database on the
    Atlas cluster. First, you need to find how many records the query returns. The
    following snippet shows a `count` query, which gives the number of backpacks sold
    at the Denver store:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的mongo shell并连接到Atlas集群上的`sample_supplies`数据库。首先，你需要找出查询返回了多少条记录。以下片段显示了一个`count`查询，给出了在Denver店销售的背包数量：
- en: '[PRE52]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: The query returns a count of `711` records.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查询返回了`711`条记录。
- en: 'Next, analyze the query given by the analytics team using the `explain()` function,
    and print the execution stats, as follows:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用`explain()`函数分析分析团队给出的查询，并打印执行统计数据，如下所示：
- en: '[PRE53]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'The query invokes the `explain()` function by passing `executionStats` as an
    argument. The following snippet shows the `executionStats` section of the output:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 通过传递`executionStats`作为参数，查询调用了`explain()`函数。以下片段显示了输出的`executionStats`部分：
- en: '[PRE54]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: The output indicates that to return `711` records, all `5000` records were scanned.
    It also indicates the execution started with the `COLLSCAN` stage, which means
    no index was initially present to support the fields in the query.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 输出表明，为了返回`711`条记录，扫描了所有`5000`条记录。它还表明执行从`COLLSCAN`阶段开始，这意味着最初没有索引支持查询中的字段。
- en: To improve the query performance, you can create an index on the collection.
    As the query uses two fields in the filter criteria, use both fields in the index.
    However, the query also has a sort specification and as denoted by the execution
    stat, the sort is performed in memory. To avoid the in-memory scan, include the
    sort field in the index.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高查询性能，可以在集合上创建一个索引。由于查询在筛选条件中使用了两个字段，因此在索引中使用这两个字段。然而，查询还有一个排序规范，根据执行统计，排序是在内存中执行的。为了避免在内存中扫描，将排序字段包含在索引中。
- en: 'Create a compound index on the collection and include `items.name`, `storeLocation`,
    and `customer.age` fields. The following query creates a compound index on the
    `sales` collection:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在集合上创建一个复合索引，并包括`items.name`、`storeLocation`和`customer.age`字段。以下查询在`sales`集合上创建了一个复合索引：
- en: '[PRE55]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'The output indicates that the index is created correctly, as follows:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 输出表明索引已正确创建，如下所示：
- en: '[PRE56]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Execute the `explain()` query executed in *step 2* again. The following snippet
    shows the `executionStats` section of the output:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 再次执行*步骤2*中执行的`explain()`查询。以下片段显示了输出的`executionStats`部分：
- en: '[PRE57]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: From the output, it is evident that the first stage of the execution is `IXSCAN`,
    which means that the correct indexes were used. Also notice that there is no sorting
    phase. This means that no further sorting is required because of the correct index
    on the `customer.age` field. The top-level execution stats show that only `711`
    records were scanned, and the same number of records were returned. This proves
    that the query is correctly optimized.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 从输出结果可以明显看出，执行的第一个阶段是`IXSCAN`，这意味着使用了正确的索引。还要注意到没有排序阶段。这意味着由于`customer.age`字段上的正确索引，不需要进一步排序。顶层执行统计数据显示只扫描了`711`条记录，并且返回了相同数量的记录。这证明了查询被正确优化了。
- en: In this activity, you analyzed the performance stats of a query, identified
    problems, and created the correct index to solve the performance problems.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个活动中，你分析了查询的性能统计数据，识别了问题，并创建了正确的索引来解决性能问题。
- en: 10\. Replication
  id: totrans-252
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 10\. 复制
- en: 'Activity 10.01: Testing a Disaster Recovery Procedure for a MongoDB Database'
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动10.01：测试MongoDB数据库的灾难恢复过程
- en: '**Solution:**'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: 'Perform the following steps to complete the activity:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤完成活动：
- en: 'Create the directories as follows: `C:\sale\sale-prod`, `C:\sale\sale-dr`,
    `C:\sale\sale-ab`, and `C:\sale\log`.'
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下目录：`C:\sale\sale-prod`，`C:\sale\sale-dr`，`C:\sale\sale-ab`和`C:\sale\log`。
- en: Note
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For Linux and macOS, the directory names would be like `/data/sales/sale-prod`,
    `/data/sales/sale-dr…`
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Linux和macOS，目录名称将类似于`/data/sales/sale-prod`，`/data/sales/sale-dr…`
- en: 'Start the cluster nodes as follows:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动集群节点如下：
- en: '[PRE58]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Connect with mongo shell:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接mongo shell：
- en: '[PRE59]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Create and activate the cluster configuration:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建并激活集群配置：
- en: '[PRE60]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Note
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You should be able to see `PRIMARY` on the shell prompt following a successful
    cluster election.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在成功的集群选举后，你应该能够在shell提示符上看到`PRIMARY`。
- en: 'Insert `100` documents into the `sample_mflix` database. Use the following
    script on the primary to create a `sales_data` collection and insert `100` documents:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`sample_mflix`数据库中插入`100`个文档。在主服务器上使用以下脚本创建`sales_data`集合并插入`100`个文档：
- en: '[PRE61]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Shut down the primary by adding the following command:'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过添加以下命令关闭主服务器：
- en: '[PRE62]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Check that the primary is the DR instance by adding the following command (first
    disconnect and then connect again)
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过添加以下命令检查主服务器是否为DR实例（首先断开连接，然后重新连接）
- en: '[PRE63]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: The result should show `sales_dr`.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 结果应显示`sales_dr`。
- en: 'Use the following script to insert an additional 10 documents on the new primary
    instance (`sales_dr`):'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下脚本在新的主实例（`sales_dr`）上插入额外的10个文档：
- en: '[PRE64]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'Shut down the DR database and arbiter with the following command:'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令关闭DR数据库和仲裁者：
- en: '[PRE65]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'After you have made sure that both are shut down, restart the former primary
    as follows:'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保两者都关闭后，重新启动以前的主服务器：
- en: '[PRE66]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Restart the arbiter as follows:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下步骤重新启动仲裁者：
- en: '[PRE67]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Connect to the cluster. You should not be able to see the 10 documents that
    were inserted on `sales_dr`, and `db.new_sales_data.count()` should rerun only
    100.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到集群。您应该能够看到在`sales_dr`上插入的10个文档，并且`db.new_sales_data.count()`应该只重新运行100次。
- en: 'After 5 minutes, restart the DR database as follows:'
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 5分钟后，按以下方式重新启动DR数据库：
- en: '[PRE68]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'Verify the steps in the `sales_dr log` file after a restart. In the DR logs,
    you should be able to see a message like this:'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在重新启动后，验证`sales_dr日志`文件中的步骤。在DR日志中，您应该能够看到如下消息：
- en: '[PRE69]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 11\. Backup and Restore in MongoDB
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 11. MongoDB中的备份和还原
- en: 'Activity 11.01: Backup and Restore in MongoDB'
  id: totrans-288
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动11.01：MongoDB中的备份和还原
- en: '**Solution:**'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: 'Perform the following steps to complete the activity:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以完成活动：
- en: Start with `mongoexport`. Remove the `--db` option, since you are providing
    it in the URI.
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`mongoexport`开始。删除`--db`选项，因为您在URI中提供了它。
- en: '[PRE70]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Add the fields option to the `mongoexport` command
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将字段选项添加到`mongoexport`命令
- en: '[PRE71]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: Add the necessary CSV options to the import command, that is, `type`, `ignoreBlanks`,
    and `headerline`.
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将必要的CSV选项添加到导入命令，即`type`，`ignoreBlanks`和`headerline`。
- en: '[PRE72]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: Fix the `gzip` option for the `dump` command.
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修复`dump`命令的`gzip`选项。
- en: '[PRE73]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'Change `nsExclude` to `excludeCollection`:'
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`nsExclude`更改为`excludeCollection`：
- en: '[PRE74]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'In the `mongorestore` command, fix the names of the options:'
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`mongorestore`命令中，修复选项的名称：
- en: '[PRE75]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'Also in `mongorestore`, add the `gzip` option as your dump was a `gzip`:'
  id: totrans-303
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样在`mongorestore`中，添加`gzip`选项，因为您的转储文件是`gzip`格式：
- en: '[PRE76]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: 'Finally, make sure your namespace uses the wildcard for proper name migration:'
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，请确保您的命名空间使用通配符进行正确的名称迁移：
- en: '[PRE77]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'The final `mongoexport` command should look as follows:'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最终的`mongoexport`命令应如下所示：
- en: '[PRE78]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'The final `mongoimport` command should look as follows:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最终的`mongoimport`命令应如下所示：
- en: '[PRE79]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: 'The final `mongodump` command should look as follows:'
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最终的`mongodump`命令应如下所示：
- en: '[PRE80]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'The final `mongorestore` command should look as follows:'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最终的`mongorestore`命令应如下所示：
- en: '[PRE81]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: Note
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: It is important to note that because `mongoimport` and `mongorestore` will both
    create new documents in the database, you will have to execute these commands
    using credentials with write access.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要注意，因为`mongoimport`和`mongorestore`都将在数据库中创建新文档，所以您必须使用具有写访问权限的凭据执行这些命令。
- en: 12\. Data Visualization
  id: totrans-317
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 12.数据可视化
- en: 'Activity 12.01: Creating a Sales Presentation Dashboard'
  id: totrans-318
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动12.01：创建销售演示仪表板
- en: '**Solution:**'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '**解决方案：**'
- en: 'Perform the following steps to complete the activity:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以完成活动：
- en: 'Before you can start building the charts for this new presentation, you must
    define the appropriate data source in the application. Follow the steps from *Exercise
    12.01*, *Working with Data Sources*, to create a new sales data source on the
    sales collection from the `sample_supplies` database, as shown in the following
    figure:![Figure 12.52: Creating a new sales data source'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您可以开始为这个新演示构建图表之前，您必须在应用程序中定义适当的数据来源。按照*练习12.01*，*使用数据来源*中的步骤，在`sample_supplies`数据库的销售集合上创建一个新的销售数据来源，如下图所示：![图12.52：创建新的销售数据来源
- en: '](img/B15507_12_52.jpg)'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_12_52.jpg)'
- en: 'Figure 12.52: Creating a new sales data source'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.52：创建新的销售数据来源
- en: 'Click `Finish` to save. The new data source will appear in the list as can
    be seen in the following figure:![Figure 12.53: Sales Data Sources'
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“完成”以保存。新的数据来源将显示在列表中，如下图所示：![图12.53：销售数据来源
- en: '](img/B15507_12_53.jpg)'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_12_53.jpg)'
- en: 'Figure 12.53: Sales Data Sources'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.53：销售数据来源
- en: 'From the dashboard, click on the `ADD CHART` button as shown in the following screenshot:![Figure
    12.54: Clicking on ADD CHART in the User''s Dashboard'
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从仪表板中，单击“添加图表”按钮，如下截图所示：![图12.54：在用户仪表板上单击“添加图表”
- en: '](img/B15507_12_54.jpg)'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_12_54.jpg)'
- en: 'Figure 12.54: Clicking on ADD CHART in the User''s Dashboard'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.54：在用户仪表板上单击“添加图表”
- en: 'In the `Chart Builder`, choose the sales data source, that was created in *step
    2* (that is, `sample_supplies.sales`) and then select the `Circular` chart type
    and the `Donut` chart sub-type, as can be seen in the following screenshot:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 在“图表生成器”中，选择在*步骤2*中创建的销售数据来源（即`sample_supplies.sales`），然后选择`Circular`图表类型和`Donut`图表子类型，如下截图所示：
- en: '![Figure 12.55: Selecting the Circular chart type and the Donut chart sub-type'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.55：选择圆形图表类型和甜甜圈图表子类型'
- en: '](img/B15507_12_55.jpg)'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_12_55.jpg)'
- en: 'Figure 12.55: Selecting the Circular chart type and the Donut chart sub-type'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.55：选择圆形图表类型和甜甜圈图表子类型
- en: 'Unwind the `items` array. This step is important because the sales data is
    in an array format inside the JSON database. So, the `unwind` function will create
    a virtual document for each item in the array. To do so, add the following JSON
    code to the `Query` bar:'
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 展开`items`数组。这一步很重要，因为销售数据以数组格式存在于JSON数据库中。因此，`unwind`函数将为数组中的每个项目创建一个虚拟文档。为此，请将以下JSON代码添加到“查询”栏：
- en: '[PRE82]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: 'Then click the `Apply` button, as shown in the following screenshot:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 然后单击“应用”按钮，如下截图所示：
- en: '![Figure 12.56: Writing the unwind function in the Query bar'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '![图12.56：在查询栏中编写展开函数'
- en: '](img/B15507_12_56.jpg)'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_12_56.jpg)'
- en: 'Figure 12.56: Writing the unwind function in the Query bar'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.56：在查询栏中编写展开函数
- en: 'The next step is to add a new calculated field—that is, `items.value`. To do
    this, click on the `+ Add Field` button and add the new field as `items.value
    = items.price * items.quantity`, as can be seen in the following screenshot:![Figure
    12.57: Ading the items.value field'
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是添加一个新的计算字段，即“items.value”。要做到这一点，点击“+添加字段”按钮，并将新字段添加为“items.value = items.price
    * items.quantity”，如下所示：![图12.57：添加items.value字段
- en: '](img/B15507_12_57.jpg)'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_12_57.jpg)'
- en: 'Figure 12.57: Ading the items.value field'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.57：添加items.value字段
- en: 'Add a filter so that only items from stores in `Denver` are considered for
    the chart. From the `Filter` tab, define the new filter for the store location
    by checking only the `Denver` location checkbox:![Figure 12.58: Selecting only
    Denver from the list of locations'
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个过滤器，以便仅考虑来自“丹佛”的商店的商品。从“过滤器”选项卡中，通过仅勾选“丹佛”位置复选框来定义商店位置的新过滤器：![图12.58：仅从位置列表中选择丹佛
- en: '](img/B15507_12_58.jpg)'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_12_58.jpg)'
- en: 'Figure 12.58: Selecting only Denver from the list of locations'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.58：仅从位置列表中选择丹佛
- en: 'Add channels in the `Encode` tab. As can be seen from the following figure,
    drag the field `items.name` into the `Label` channel. Select `VALUE` from the
    `SORT BY` dropdown and limit it to `10` results. That will split our donut into
    10 slices. Similarly, drag `items.value` (the new calculated field) into the `Arc`
    channel, and choose the `SUM` function from the `AGGREGATE` dropdown:![Figure
    12.59: Dragging items.value into the Arc channel and choosing the SUM function'
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“编码”选项卡中添加通道。如下图所示，将字段“items.name”拖入“标签”通道。从“排序方式”下拉菜单中选择“VALUE”，并将结果限制为“10”个。这将把我们的圆环图分成10个部分。类似地，将“items.value”（新计算字段）拖入“弧”通道，并从“聚合”下拉菜单中选择“SUM”函数：![图12.59：将items.value拖入弧道并选择SUM函数
- en: '](img/B15507_12_59.jpg)'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_12_59.jpg)'
- en: 'Figure 12.59: Dragging items.value into the Arc channel and choosing the SUM
    function'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.59：将items.value拖入弧道并选择SUM函数
- en: 'The chart should appear on the right side of the screen as follows:![Figure
    12.60: Final chart'
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 图表应该出现在屏幕的右侧，如下所示：![图12.60：最终图表
- en: '](img/B15507_12_60.jpg)'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_12_60.jpg)'
- en: 'Figure 12.60: Final chart'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.60：最终图表
- en: 'Edit the chart name to `Denver Sales (million $)` as follows:![Figure 12.61:
    Editing the chart title'
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将图表名称编辑为“丹佛销售（百万美元）”，如下所示：![图12.61：编辑图表标题
- en: '](img/B15507_12_61.jpg)'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_12_61.jpg)'
- en: 'Figure 12.61: Editing the chart title'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.61：编辑图表标题
- en: 'Edit the chart labels. From the `Customize` tab, click to enable `Data Value
    Labels`, as follows:![Figure 12.62: Customizing the data labels'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑图表标签。从“自定义”选项卡，点击启用“数据值标签”，如下所示：![图12.62：自定义数据标签
- en: '](img/B15507_12_62.jpg)'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_12_62.jpg)'
- en: 'Figure 12.62: Customizing the data labels'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.62：自定义数据标签
- en: 'Next, from the `Number Formatting` dropdown, choose `CUSTOM` with a maximum
    of `2` decimals, as follows:![Figure 12.63: Customizing the chart formatting'
  id: totrans-358
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，从“数字格式”下拉菜单中选择“自定义”，最多保留“2”位小数，如下所示：![图12.63：自定义图表格式
- en: '](img/B15507_12_63.jpg)'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_12_63.jpg)'
- en: 'Figure 12.63: Customizing the chart formatting'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.63：自定义图表格式
- en: 'The chart will appear with the right title and label formatting, as can be
    seen in the following figure:![Figure 12.64: Final Denver Sales chart'
  id: totrans-361
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 图表将显示正确的标题和标签格式，如下图所示：![图12.64：最终丹佛销售图表
- en: '](img/B15507_12_64.jpg)'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_12_64.jpg)'
- en: 'Figure 12.64: Final Denver Sales chart'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.64：最终丹佛销售图表
- en: The results are quite self-explanatory. As expected, the laptop sales value
    of almost 2 million dollars tops the sales and is by far the most valuable item
    in the sales report. The next item by sales is backpacks, with only a $250,000
    value.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 结果相当不言自明。如预期的那样，笔记本电脑的销售价值接近200万美元，居销售榜首，并且是销售报告中价值最高的商品。销售额排名第二的商品是背包，价值仅25万美元。
- en: The activity is now complete. In only 10 simple steps, you were able to create
    a top sales report for items from stores in Denver, Colorado. Your chart build
    is now finished and the chart can be saved on your dashboard. Lessons learned
    here could be applied by students and professionals alike, to make presentations
    using real data.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 活动现在已经完成。在仅10个简单的步骤中，您已经能够为科罗拉多州丹佛市商店的商品创建一份销售报告。您的图表构建现在已经完成，可以保存在您的仪表板上。在这里学到的经验可以被学生和专业人士应用，以使用真实数据进行演示。
