- en: Chapter 7. Importing Structure and Data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章。导入结构和数据
- en: In this chapter, we will learn how to import data that we may have exported
    for backup or transfer purposes. Exported data may also come from authors of other
    applications, and could contain the whole foundation structure of these applications,
    along with some sample data.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何导入我们可能为备份或传输目的而导出的数据。导出的数据也可能来自其他应用程序的作者，并且可能包含这些应用程序的整个基础结构以及一些示例数据。
- en: 'The current phpMyAdmin version (3.4) can import the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当前的phpMyAdmin版本（3.4）可以导入以下内容：
- en: Files containing MySQL statements (usually having a `.sql` suffix, but not necessarily
    so)
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含MySQL语句的文件（通常具有`.sql`后缀，但不一定如此）
- en: CSV files (comma-separated values, although the separator is not necessarily
    a comma); these files can be imported by phpMyAdmin itself or via the MySQL `LOAD
    DATA INFILE` statement which enables the MySQL server to handle the data directly
    rather than having phpMyAdmin parse it first
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSV文件（逗号分隔值，尽管分隔符不一定是逗号）；这些文件可以由phpMyAdmin本身导入，也可以通过MySQL的`LOAD DATA INFILE`语句导入，该语句使MySQL服务器能够直接处理数据，而不是首先由phpMyAdmin解析数据
- en: Open Document Spreadsheet files
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打开文档电子表格文件
- en: XML files (generated by phpMyAdmin)
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: XML文件（由phpMyAdmin生成）
- en: The binary column upload covered in [Chapter 5](ch05.html "Chapter 5. Changing
    Data and Structure") can be said to belong to the import family.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第5章](ch05.html "第5章。更改数据和结构")中涵盖的二进制列上传可以说属于导入系列。
- en: Note
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Importing and uploading are synonyms in this context.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，导入和上传是同义词。
- en: In general, an exported file can be imported to the same database it came from
    or to any other database; the XML format is an exception to this and a workaround
    is given in the XML section later in the chapter. Also, a file generated from
    an older phpMyAdmin version should have no problem being imported by the current
    version, but the difference between the MySQL version at time of export and the
    one at time of import might play a bigger role regarding compatibility. It's difficult
    to evaluate how future MySQL releases will change the language's syntax, bringing
    import challenges.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，导出文件可以导入到它来自的同一数据库或任何其他数据库；XML格式是一个例外，本章后面的XML部分中给出了一个解决方法。此外，从旧的phpMyAdmin版本生成的文件应该没有问题被当前版本导入，但是导出时的MySQL版本与导入时的版本之间的差异可能在兼容性方面起到更大的作用。很难评估未来MySQL版本将如何改变语言的语法，带来导入挑战。
- en: 'The import feature can be accessed from several panels:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 可以从几个面板访问导入功能：
- en: The **Import** menu available from the home page, the `Database` view, or the
    `Table` view
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导入**菜单可从主页、`Database`视图或`Table`视图中访问'
- en: The **Import files** menu offered inside the Query window (as explained in [Chapter
    11)](ch11.html "Chapter 11. Entering SQL Statements")
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导入文件**菜单在查询窗口内提供（如[第11章](ch11.html "第11章。输入SQL语句")中所述）'
- en: The default values for the `Import` interface are defined in `$cfg['Import']`.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`Import`界面的默认值在`$cfg[''Import'']`中定义。'
- en: Before examining the actual import dialog, let us discuss some limits issues.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在检查实际导入对话框之前，让我们讨论一些限制问题。
- en: Limits for the transfer
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 传输限制
- en: When we import, the source file is usually on our client machine and, therefore,
    must travel to the server via HTTP. This transfer takes time and uses resources
    that may be limited in the web server's PHP configuration.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们导入时，源文件通常位于我们的客户端机器上，因此必须通过HTTP传输到服务器。这种传输需要时间并使用资源，这些资源可能在Web服务器的PHP配置中受到限制。
- en: Instead of using HTTP, we can upload our file to the server using a protocol
    such as FTP, as described in the *Reading files from a web server upload directory*
    section. This method circumvents the web server's PHP upload limits.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用FTP等协议将文件上传到服务器，而不是使用HTTP，如“从Web服务器上传目录读取文件”部分所述。这种方法绕过了Web服务器的PHP上传限制。
- en: Time limits
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 时间限制
- en: First, let us consider the time limit. In `config.inc.php`, the `$cfg['ExecTimeLimit']`
    configuration directive assigns, by default, a maximum execution time of 300 seconds
    (five minutes) for any phpMyAdmin script, including the scripts that process data
    after the file has been uploaded. A value of `0` removes the limit, and in theory,
    gives us infinite time to complete the import operation. If the PHP server is
    running in safe mode, modifying `$cfg['ExecTimeLimit']` will have no effect. This
    is because the limits set in `php.ini` or in user-related web server configuration
    files (such as `.htaccess` or virtual host configuration files), take precedence
    over this parameter.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们考虑时间限制。在`config.inc.php`中，`$cfg['ExecTimeLimit']`配置指令默认分配了任何phpMyAdmin脚本的最大执行时间为300秒（五分钟），包括文件上传后处理数据的脚本。值为`0`会移除限制，并在理论上给我们无限的时间来完成导入操作。如果PHP服务器运行在安全模式下，修改`$cfg['ExecTimeLimit']`将不会生效。这是因为在`php.ini`或用户相关的Web服务器配置文件（如`.htaccess`或虚拟主机配置文件）中设置的限制优先于此参数。
- en: 'Of course, the time it effectively takes depends on two key factors:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，实际花费的时间取决于两个关键因素：
- en: Web server load
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web服务器负载
- en: MySQL server load
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL服务器负载
- en: Note
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The time taken by the file, as it travels between the client and the server,
    does not count as execution time as the PHP script only starts to execute after
    the file has been received on the server. Therefore, the `$cfg['ExecTimeLimit']`
    parameter has an impact only on the time used to process data (such as decompression
    or sending it to the MySQL server).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 文件在客户端和服务器之间传输所花费的时间不计为执行时间，因为PHP脚本只有在服务器接收到文件后才开始执行。因此，`$cfg['ExecTimeLimit']`参数只对处理数据的时间（如解压缩或将数据发送到MySQL服务器）产生影响。
- en: Other limits
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他限制
- en: The system administrator can use the `php.ini` file or the web server's virtual
    host configuration file to control uploads on the server.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 系统管理员可以使用`php.ini`文件或Web服务器的虚拟主机配置文件来控制服务器上的上传。
- en: The `upload_max_filesize` parameter specifies the upper limit or maximum file
    size that can be uploaded via HTTP. This one is obvious, but another less obvious
    parameter is `post_max_size`. As HTTP uploading is done via the POST method, this
    parameter may limit our transfers. For more details about the POST method, please
    refer to [http://en.wikipedia.org/wiki/Http#Request_methods](http://en.wikipedia.org/wiki/Http#Request_methods).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`upload_max_filesize`参数指定了可以通过HTTP上传的文件的上限或最大文件大小。这个很明显，但另一个不太明显的参数是`post_max_size`。由于HTTP上传是通过POST方法完成的，这个参数可能会限制我们的传输。有关POST方法的更多详细信息，请参考[http://en.wikipedia.org/wiki/Http#Request_methods](http://en.wikipedia.org/wiki/Http#Request_methods)。'
- en: The `memory_limit` parameter is provided to prevent web server child processes
    from grabbing too much of the server's memory—phpMyAdmin runs inside a child process.
    Thus, the handling of normal file uploads, especially compressed dumps, can be
    compromised by giving this parameter a small value. Here, no preferred value can
    be recommended; the value depends on the size of uploaded data we want to handle
    and on the size of the physical memory. The memory limit can also be tuned via
    the `$cfg['MemoryLimit']` parameter in `config.inc.php`, as seen in [Chapter 6](ch06.html
    "Chapter 6. Exporting Structure and Data (Backup)").
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`memory_limit`参数用于防止Web服务器子进程占用过多服务器内存——phpMyAdmin在子进程中运行。因此，给这个参数一个较小的值可能会影响正常文件上传的处理，特别是压缩的转储文件。在这里，无法推荐任何首选值；这个值取决于我们想要处理的上传数据的大小和物理内存的大小。内存限制也可以通过`config.inc.php`中的`$cfg[''MemoryLimit'']`参数进行调整，如[第6章](ch06.html
    "第6章。导出结构和数据（备份）")所示。'
- en: Finally, file uploads must be allowed by setting `file_uploads` to `On`; otherwise,
    phpMyAdmin won't even show a dialog to choose a file. It would be useless to display
    this dialog as the connection would be refused later by the PHP component of the
    web server.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，通过将`file_uploads`设置为`On`来允许文件上传；否则，phpMyAdmin甚至不会显示选择文件的对话框。显示这个对话框是没有意义的，因为后来Web服务器的PHP组件会拒绝连接。
- en: Handling big export files
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理大型导出文件
- en: If the file is too big, there are ways in which we can resolve the situation.
    If the original data is still accessible via phpMyAdmin, we could use phpMyAdmin
    to generate smaller export files, choosing the **Dump some row(s)** dialog. If
    this were not possible, we could use a spreadsheet program or a text editor to
    split the file into smaller sections. Another possibility is to use the **upload
    directory mechanism**, which accesses the directory defined in `$cfg['UploadDir']`.
    This feature is explained later in this chapter.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果文件太大，我们可以通过多种方式解决这个问题。如果原始数据仍然可以通过phpMyAdmin访问，我们可以使用phpMyAdmin生成较小的导出文件，选择**Dump
    some row(s)**对话框。如果这不可能，我们可以使用电子表格程序或文本编辑器将文件分割成较小的部分。另一种可能性是使用**上传目录机制**，它访问`$cfg['UploadDir']`中定义的目录。这个功能在本章的后面会有详细解释。
- en: In recent phpMyAdmin versions, the **Partial import** feature can also solve
    this file size problem. By selecting the **Allow the interruption…** checkbox,
    the import process will interrupt itself if it detects that it is close to the
    time limit. We can also specify a number of queries to skip from the start, in
    case we successfully import a number of rows and wish to continue from that point.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在最近的phpMyAdmin版本中，**部分导入**功能也可以解决这个文件大小的问题。通过选择**允许中断...**复选框，如果检测到接近时间限制，导入过程将自行中断。我们还可以指定要从头部跳过的查询数量，以防我们成功导入一些行并希望从那个点继续。
- en: Uploading into a temporary directory
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 上传到临时目录
- en: On a server, a PHP security feature called `open_basedir` (which limits the
    files that can be opened by PHP to the specified directory tree) can impede the
    upload mechanism. In this case, or for any other reason, when uploads are problematic,
    the `$cfg['TempDir']` parameter can be set with the value of a temporary directory.
    This is probably a sub-directory of phpMyAdmin's main directory, into which the
    web server is allowed to put the uploaded file.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在服务器上，一个名为`open_basedir`的PHP安全功能（将PHP可以打开的文件限制为指定的目录树）可能会阻碍上传机制。在这种情况下，或者出于其他任何原因，当上传出现问题时，可以使用`$cfg['TempDir']`参数设置临时目录的值。这可能是phpMyAdmin主目录的子目录，Web服务器允许将上传文件放入其中。
- en: Importing SQL files
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入SQL文件
- en: Any file containing MySQL statements can be imported via this mechanism. This
    format is the more commonly used for backup/restore purposes. The dialog is available
    in the `Server` view, `Database` view, or the `Table` view, via the **Import**
    page, or in the Query window.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 任何包含MySQL语句的文件都可以通过这种机制导入。这种格式更常用于备份/恢复目的。对话框可在`服务器`视图、`数据库`视图或`表`视图中，通过**导入**页面或查询窗口中使用。
- en: '![Importing SQL files](img/7782_07_01.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![导入SQL文件](img/7782_07_01.jpg)'
- en: Note
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: There is no relation between the currently selected table (here **author)**
    and the actual contents of the SQL file that will be imported. All the contents
    of the SQL file will be imported, and it is those contents that determine which
    tables or databases are affected. However, if the imported file does not contain
    any SQL statements to select a database, all statements in the imported file will
    be executed on the currently selected database.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当前选择的表（这里是**author**）与将要导入的SQL文件的实际内容之间没有关系。SQL文件的所有内容都将被导入，决定受影响的表或数据库的是这些内容。但是，如果导入的文件不包含任何选择数据库的SQL语句，那么导入文件中的所有语句都将在当前选择的数据库上执行。
- en: Let us try an import exercise. First, we make sure that we have a current SQL
    export file of the `book` table (as explained in [Chapter 6)](ch06.html "Chapter 6. Exporting
    Structure and Data (Backup)"). This export file must contain the structure and
    the data. Then we drop the `book` table—yes, really! We could also simply rename
    it. (Refer to [Chapter 9](ch09.html "Chapter 9. Performing Table and Database
    Operations") for the procedure.)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试一个导入练习。首先，确保我们有一个`book`表的当前SQL导出文件（如[第6章](ch06.html "第6章。导出结构和数据（备份）")中所述）。这个导出文件必须包含结构和数据。然后我们删除`book`表——是的，真的！我们也可以简单地重命名它。（有关该过程，请参阅[第9章](ch09.html
    "第9章。执行表和数据库操作")。）
- en: Now it is time to import the file back to the current database (the file could
    be imported for testing in a different database or even on another MySQL server).
    We should be on the **Import** page, where we can see the **File to import** dialog.
    We just have to hit the **Browse** button and choose our file.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候将文件导入到当前数据库中了（文件可以在不同的数据库中进行测试导入，甚至可以在另一个MySQL服务器上进行）。我们应该在**导入**页面上，可以看到**要导入的文件**对话框。我们只需要点击**浏览**按钮并选择我们的文件。
- en: phpMyAdmin is able to detect which compression method (if any) has been applied
    to the file. Depending on the phpMyAdmin version, and the extensions that are
    available in the PHP component of the web server, there is variation in the formats
    that the program can decompress.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: phpMyAdmin能够检测文件应用了哪种压缩方法（如果有的话）。根据phpMyAdmin版本和Web服务器的PHP组件中可用的扩展，程序可以解压缩的格式有所不同。
- en: However, to import successfully, phpMyAdmin must be informed of the character
    set of the file to be imported. The default value is **utf-8**. However, if we
    know that the import file was created with another character set, we should specify
    it here.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，要成功导入，phpMyAdmin必须知道要导入的文件的字符集。默认值是**utf-8**。但是，如果我们知道导入文件是用另一种字符集创建的，我们应该在这里指定它。
- en: A **SQL compatibility mode** selector is available at import time. This mode
    should be adjusted to match the actual data that we are about to import, according
    to the type of server where the data was previously exported.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在导入时，可以选择**SQL兼容模式**选择器。这种模式应该根据之前导出数据的服务器类型来调整，以匹配我们即将导入的实际数据。
- en: Another option, **Do not use AUTO_INCREMENT for zero values**, is marked by
    default. If we have a value of zero in a primary key and we want it to stay zero
    instead of being auto-incremented, we should use this option.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个选项**不要对零值使用AUTO_INCREMENT**默认标记。如果我们在主键中有一个零值，并且希望它保持为零而不是自动递增，我们应该使用这个选项。
- en: 'To start the import, we click on **Go**. The import procedure continues and
    we receive a message: **Import has been successfully finished, 2 queries executed**.
    We can browse our newly-created tables to confirm the success of the import operation.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始导入，我们点击**Go**。导入过程继续，我们收到一条消息：**导入已成功完成，执行了2个查询**。我们可以浏览我们新创建的表来确认导入操作的成功。
- en: An import file may contain the `DELIMITER` keyword. This enables phpMyAdmin
    to mimic the `mysql` command-line interpreter. The `DELIMITER` separator is used
    to delineate the part of the file containing a stored procedure, as these procedures
    can themselves contain semicolons.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 导入文件可能包含`DELIMITER`关键字。这使得phpMyAdmin能够模仿`mysql`命令行解释器。`DELIMITER`分隔符用于界定包含存储过程的文件部分，因为这些过程本身可能包含分号。
- en: Importing CSV files
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入CSV文件
- en: In this section, we will examine how to import CSV files. There are two possible
    methods—**CSV** and **CSV using LOAD DATA**. The first method is implemented internally
    by phpMyAdmin and is the recommended one for its simplicity. With the second method,
    phpMyAdmin receives the file to be loaded, and passes it to MySQL. In theory,
    this method should be faster. However, it has more requirements due to MySQL itself
    (refer to the *Requirements* sub-section of the *CSV using LOAD DATA* section).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将研究如何导入CSV文件。有两种可能的方法——**CSV**和**使用LOAD DATA的CSV**。第一种方法是由phpMyAdmin内部实现的，因为它的简单性而被推荐。使用第二种方法，phpMyAdmin接收要加载的文件，并将其传递给MySQL。理论上，这种方法应该更快。然而，由于MySQL本身的要求更多（请参阅*CSV使用LOAD
    DATA*部分的*要求*子部分）。
- en: Differences between SQL and CSV formats
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SQL和CSV格式之间的区别
- en: Usually, the SQL format contains both structure and data. The CSV file format
    contains data only, so if we import in `Table` view, we must already have an existing
    table in place. This table does not need to have the same structure as the original
    table (from which the data comes); the **Column names** dialog enables us to choose
    which columns are affected in the target table.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，SQL格式包含结构和数据。CSV文件格式只包含数据，因此如果我们在`表`视图中导入，我们必须已经有一个现有的表。这个表不需要与原始表（数据来自哪里）具有相同的结构；**列名**对话框使我们能够选择目标表中受影响的列。
- en: Since version 3.4, we can also import a CSV file in `Database` view. In this
    case, phpMyAdmin examines the CSV data and generates a table structure to hold
    this data (with generic column names such as `COL 1, COL 2` and a table name such
    as `TABLE 24)`.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 自3.4版本以来，我们还可以在`数据库`视图中导入CSV文件。在这种情况下，phpMyAdmin会检查CSV数据并生成一个表结构来保存这些数据（具有通用列名，如`COL
    1，COL 2`和一个表名，如`TABLE 24`）。
- en: Exporting a test file
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导出测试文件
- en: Before trying an import, let us generate an `author.csv` export file from the
    `author` table. We use the default values in the **CSV export** options. We can
    then use the **Empty** option to empty the `author` table—we should avoid dropping
    this table as we still need the table structure. The procedure to empty a table
    is covered in [Chapter 5](ch05.html "Chapter 5. Changing Data and Structure"),
    in the *Deleting all of the rows in a table* section.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在尝试导入之前，让我们从`author`表中生成一个`author.csv`导出文件。我们使用**CSV导出**选项中的默认值。然后我们可以使用**Empty**选项来清空`author`表——我们应该避免删除这个表，因为我们仍然需要表结构。清空表的过程在[第5章](ch05.html
    "第5章。更改数据和结构")中有介绍，在*删除表中的所有行*部分。
- en: CSV
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CSV
- en: From the `author` table menu, we select **Import** and then **CSV**.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 从`author`表菜单中，我们选择**导入**，然后选择**CSV**。
- en: '![CSV](img/7782_07_02.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![CSV](img/7782_07_02.jpg)'
- en: We can influence the behavior of the import in a number of ways. By default,
    importing does not modify existing data (based on primary or unique keys). However,
    the **Replace table data with file** option instructs phpMyAdmin to use `REPLACE`
    statements instead of `INSERT` statements, so that existing rows are replaced
    with the imported data.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过多种方式影响导入的行为。默认情况下，导入不会修改现有数据（基于主键或唯一键）。然而，“用文件替换表数据”选项指示phpMyAdmin使用REPLACE语句而不是INSERT语句，以便用导入的数据替换现有行。
- en: Using **Do not abort on INSERT error**, `INSERT IGNORE` statements are generated.
    These cause MySQL to ignore any duplicate key problems during insertion. A duplicate
    key from the import file does not replace existing data, and the procedure continues
    for the next line of CSV data.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 使用“在INSERT错误时不中止”，将生成INSERT IGNORE语句。这会导致MySQL在插入时忽略任何重复键的问题。导入文件中的重复键不会替换现有数据，程序会继续下一行CSV数据。
- en: We can then specify the character that terminates each column, the character
    that encloses data, and the character that escapes the enclosing character. Usually
    this is **\**.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以指定终止每一列的字符，包围数据的字符，以及转义包围字符的字符。通常是“\”。
- en: For **Lines terminated with** option, the **auto** choice should be tried first
    as it detects the end-of-line character automatically. We can also specify manually
    which characters terminate the lines. The usual choice is **\n** for UNIX-based
    systems, **\r\n** for DOS or Windows systems, and **\r** for Mac-based systems
    (up to Mac OS 9). If in doubt, we can use a hexadecimal file editor on our client
    computer (not part of phpMyAdmin) to examine the exact codes.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 对于“行终止符”选项，应首先尝试“auto”选项，因为它会自动检测行尾字符。我们还可以手动指定终止行的字符。通常UNIX系统选择“\n”，DOS或Windows系统选择“\r\n”，Mac系统选择“\r”（Mac
    OS 9及以下）。如果不确定，我们可以在客户端计算机上使用十六进制文件编辑器（不是phpMyAdmin的一部分）来检查确切的代码。
- en: 'By default, phpMyAdmin expects a CSV file with the same number of columns and
    the same column order as the target table. This can be changed by entering a comma-separated
    list of column names in **Column names**, respecting the source file format. For
    example, let us say our source file contains only the author ID and the author
    name information:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，phpMyAdmin期望CSV文件与目标表具有相同数量的列和相同的列顺序。这可以通过在“列名”中输入一个逗号分隔的列名列表来改变，以符合源文件格式。例如，假设我们的源文件只包含作者ID和作者姓名信息：
- en: '[PRE0]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We would have to put **id, name** in **Column names** to match the source file.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须在“列名”中放入“id，name”以匹配源文件。
- en: When we click on **Go**, the import is executed and we get a confirmation. We
    might also see the actual `INSERT` queries generated if the total size of the
    file is not too big.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们点击“Go”时，导入将被执行，并且我们会收到确认。如果文件的总大小不太大，我们还可能看到生成的INSERT查询。
- en: '[PRE1]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: CSV using LOAD DATA
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用LOAD DATA的CSV
- en: With this method (only available in the `Table` view), phpMyAdmin relies on
    the server's `LOAD DATA INFILE` or `LOAD DATA LOCAL INFILE` mechanisms to do the
    actual import, instead of processing the data internally. These statements are
    the fastest way for importing text in MySQL. They cause MySQL to start a read
    operation either from a file located on the MySQL server `(LOAD DATA INFILE)`
    or from another place `(LOAD DATA LOCAL INFILE)`, which in this context, is always
    the web server's file system. If the MySQL server is located on a computer other
    than the web server, we won't be able to use the `LOAD DATA INFILE` mechanism.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法（仅在“表”视图中可用），phpMyAdmin依赖服务器的LOAD DATA INFILE或LOAD DATA LOCAL INFILE机制来执行实际的导入，而不是在内部处理数据。这些语句是在MySQL中导入文本的最快方式。它们会导致MySQL开始从MySQL服务器上的文件（LOAD
    DATA INFILE）或其他地方（LOAD DATA LOCAL INFILE）进行读取操作，而在这种情况下，通常是Web服务器的文件系统。如果MySQL服务器位于与Web服务器不同的计算机上，我们将无法使用LOAD
    DATA INFILE机制。
- en: Requirements
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 要求
- en: Relying on the MySQL server has some consequences. Using `LOAD DATA INFILE`
    requires that the logged-in user possess a global `FILE` privilege. Also, the
    file itself must be readable by the MySQL server's process.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 依赖MySQL服务器会产生一些后果。使用LOAD DATA INFILE要求登录用户拥有全局的FILE权限。此外，文件本身必须可被MySQL服务器的进程读取。
- en: Note
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '[Chapter 19](ch19.html "Chapter 19. Administrating the MySQL Server") explains
    phpMyAdmin''s interface, which can be used by system administrators to manage
    privileges.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[第19章](ch19.html "第19章。管理MySQL服务器")解释了phpMyAdmin的界面，系统管理员可以使用该界面来管理权限。'
- en: Usage of the `LOCAL` modifier in `LOAD DATA LOCAL INFILE` must be allowed by
    the MySQL server and MySQL's client library used by PHP.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在PHP中使用LOAD DATA LOCAL INFILE时，必须允许MySQL服务器和MySQL的客户端库中的LOCAL修饰符。
- en: Both the `LOAD` methods are available from the phpMyAdmin `LOAD` interface,
    which tries to choose the best possible default option.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: phpMyAdmin的LOAD界面提供了两种LOAD方法，试图选择最佳的默认选项。
- en: Using the LOAD DATA interface
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用LOAD DATA界面
- en: 'We select **Import** from the `author` table menu. Choosing **CSV using LOAD
    DATA** option brings up the following dialog:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从“author”表菜单中选择导入。选择CSV using LOAD DATA选项会弹出以下对话框：
- en: '![Using the LOAD DATA interface](img/7782_07_03.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![使用LOAD DATA界面](img/7782_07_03.jpg)'
- en: Note
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The available options have already been covered in the *CSV* section.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的选项已经在CSV部分中介绍过了。
- en: In the **File to import** section, we choose our `author.csv` file.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在“要导入的文件”部分，我们选择我们的author.csv文件。
- en: Finally, we can choose the `LOAD` method, as discussed earlier, by selecting
    the **Use LOCAL keyword** option. We then click on **Go**.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以选择LOAD方法，如前面讨论的，通过选择“使用LOCAL关键字”选项。然后点击“Go”。
- en: 'If all goes well, we can see the confirmation screen as shown in the following
    screenshot:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，我们可以看到确认屏幕，如下截图所示：
- en: '![Using the LOAD DATA interface](img/7782_07_04.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![使用LOAD DATA界面](img/7782_07_04.jpg)'
- en: 'This screen shows the exact **LOAD DATA LOCAL INFILE** statement used. Here
    is what has happened:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这个屏幕显示了使用的LOAD DATA LOCAL INFILE语句。以下是发生的事情：
- en: We chose **author.csv**.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们选择了author.csv。
- en: The contents of this file were transferred over HTTP and received by the web
    server.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个文件的内容通过HTTP传输并被Web服务器接收。
- en: The PHP component inside the web server saved this file in a work directory
    (here `/opt/php-upload-tmp/)` and gave it a temporary name.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Web服务器内的PHP组件将此文件保存在工作目录（此处为`/opt/php-upload-tmp/`）并赋予临时名称。
- en: phpMyAdmin, informed of the location of this working file, built a `LOAD DATA
    LOCAL INFILE` command, and sent it to MySQL. Note that just one query was executed,
    which loaded many rows.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: phpMyAdmin知道这个工作文件的位置后，构建了一个`LOAD DATA LOCAL INFILE`命令，并将其发送到MySQL。请注意，只执行了一个查询，加载了许多行。
- en: The MySQL server read and loaded the contents of the file into our target table.
    It then returned the number of affected rows **(2)**, which phpMyAdmin displayed
    on the results page.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: MySQL服务器读取并加载了文件的内容到我们的目标表中。然后返回受影响的行数**(2)**，phpMyAdmin在结果页面上显示了这个数字。
- en: Importing other formats
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入其他格式
- en: In addition to SQL and CSV formats, phpMyAdmin can import Open Document Spreadsheet
    and XML files. However, these files need to have been exported by phpMyAdmin itself,
    or closely follow what phpMyAdmin does when exporting.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 除了SQL和CSV格式，phpMyAdmin还可以导入Open Document Spreadsheet和XML文件。但是，这些文件需要由phpMyAdmin自己导出，或者紧密遵循phpMyAdmin导出时的操作。
- en: Open Document Spreadsheet
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Open Document Spreadsheet
- en: By default, when we export via phpMyAdmin in this format, the **Put column names
    in the first row** option is not marked. This means that the exported file contains
    only data. At import time, a corresponding option **The first line of the file
    contains the table column names** is offered and should not be marked if the file
    does not contain the column names in its first line.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，当我们以这种格式通过phpMyAdmin导出时，**将列名放在第一行**选项未被标记。这意味着导出的文件只包含数据。在导入时，相应的选项**文件的第一行包含表列名**被提供，并且如果文件的第一行不包含列名，则不应该被标记。
- en: 'However, if the exported file does contain the column names, we can check this
    option. Therefore, when importing from the `Database` view, phpMyAdmin will do
    the following:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果导出的文件包含列名，我们可以检查这个选项。因此，当从`数据库`视图导入时，phpMyAdmin将执行以下操作：
- en: Create a table, using the file name `(author.ods)` as the table name `(author)`
    .
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用文件名`(author.ods)`作为表名`(author)`创建表。
- en: Use the first line's column names as column names for this table.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用第一行的列名作为此表的列名。
- en: Determine each column's type and appropriate size, based on the data itself.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据数据本身确定每个列的类型和适当的大小。
- en: Insert data into the table.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据插入表中。
- en: If we are in the `Table` view, only the data will be imported.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们处于`表`视图中，只有数据将被导入。
- en: Other import options exist to indicate what should be done with empty rows and
    with data containing percentages or currency values.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他导入选项，用于指示应该如何处理空行以及包含百分比或货币值的数据。
- en: XML
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: XML
- en: The amount of structural information that can be created by importing an XML
    file depends on the options that were chosen at export time. Indeed, if the **Tables**
    option of the **Object creation options** dialog was selected, then the exact
    `CREATE TABLE` statement is placed in the exported file. Therefore, the same table
    structure is available in the restored table.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 通过导入XML文件创建的结构信息的数量取决于导出时选择的选项。实际上，如果选择了**对象创建选项**对话框的**表**选项，那么精确的`CREATE TABLE`语句将被放置在导出文件中。因此，恢复表中将有相同的表结构。
- en: Likewise, if the **Export contents** option was marked, the whole data is there
    in the XML file ready to be imported back. There are no options available at import
    time as XML is a self-describing format; therefore, phpMyAdmin can correctly interpret
    what is in the file and react appropriately.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，如果标记了**导出内容**选项，则整个数据都在XML文件中准备好导入。在导入时没有可用选项，因为XML是一种自描述格式；因此，phpMyAdmin可以正确解释文件中的内容并做出适当的反应。
- en: 'As the original database name is part of the XML export, the current phpMyAdmin
    version only supports importing an XML file into the database from which the export
    originated. To import to a different database, we need to first use a text editor
    and change the database name inside the following line:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 由于原始数据库名称是XML导出的一部分，当前的phpMyAdmin版本只支持将XML文件导入到导出源数据库中。要导入到不同的数据库，我们需要首先使用文本编辑器并更改以下行中的数据库名称：
- en: '[PRE2]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Reading files from a web server upload directory
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从Web服务器上传目录读取文件
- en: To get around cases where uploads are completely disabled by a web server's
    PHP configuration, or where upload limits are too small, phpMyAdmin can read upload
    files from a special directory located on the web server's file system.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决Web服务器的PHP配置完全禁用上传的情况，或者上传限制太小的情况，phpMyAdmin可以从Web服务器文件系统上的特殊目录中读取上传文件。
- en: We first specify the directory name of our choice in the `$cfg['UploadDir']`
    parameter, for example,`'./upload'`. We can also use the `%u` string, as described
    in [Chapter 6](ch06.html "Chapter 6. Exporting Structure and Data (Backup)"),
    to represent the user's name.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在`$cfg['UploadDir']`参数中指定我们选择的目录名称，例如，`'./upload'`。我们还可以使用`%u`字符串，如[第6章](ch06.html
    "第6章. 导出结构和数据（备份）")中所述，来表示用户的名称。
- en: 'Now, let us go back to the **Import** page. We get an error message:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们回到**导入**页面。我们收到一个错误消息：
- en: '**The directory you set for upload work cannot be reached**.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**您设置的上传工作目录无法访问**。'
- en: This error message is expected, as the directory does not exist. It is supposed
    to have been created inside the current `phpMyAdmin` installation directory. The
    message might also indicate that the directory exists, but can't be read by the
    web server.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这个错误消息是预期的，因为该目录不存在。它应该已经在当前的`phpMyAdmin`安装目录内创建。该消息也可能表明该目录存在，但无法被Web服务器读取。
- en: Note
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In PHP safe mode, the owner of the directory and the owner of the phpMyAdmin-installed
    scripts must be the same.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在PHP安全模式下，目录的所有者和phpMyAdmin安装脚本的所有者必须相同。
- en: Using an SFTP or FTP client, we create the necessary directory, and can now
    upload a file there (for example **book.sql)** bypassing any PHP timeouts or upload
    maximum limits.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 使用SFTP或FTP客户端，我们创建必要的目录，现在可以在那里上传文件（例如**book.sql**），绕过任何PHP超时或上传最大限制。
- en: Tip
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Note that the file itself must have permissions that allow the web server to
    read it.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，文件本身必须具有允许Web服务器读取的权限。
- en: In most cases, the easiest way is to allow everyone to read the file.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，最简单的方法是允许每个人都可以读取文件。
- en: 'Refreshing the **Import** page brings up the following screenshot:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 刷新**导入**页面会出现以下截图：
- en: '![Reading files from a web server upload directory](img/7782_07_05.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: 从Web服务器上传目录读取文件的操作如下图所示：
- en: Clicking on **Go** should execute the statements located in the file.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**Go**应该执行文件中的语句。
- en: Automatic decompression is also available for the files located in the upload
    directory. The file names should have extensions such as `.bz2, .gz, .sql.bz2`,
    or `.sql.gz`.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 上传目录中的文件也可以自动解压缩。文件名应该具有`.bz2, .gz, .sql.bz2`或`.sql.gz`等扩展名。
- en: Note
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Using the double extensions `(.sql.bz2)` is a better way to indicate that a
    `.sql` file was produced and then compressed, as we see all the steps used to
    generate this file.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 使用双扩展名`(.sql.bz2)`是指示`.sql`文件已经生成并压缩的更好方式，因为我们看到了生成此文件所使用的所有步骤。
- en: Displaying an upload progress bar
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示上传进度条
- en: Especially when importing a large file, it's interesting to have a visual feedback
    on the progression of upload. Please note that the progress bar we are discussing
    here informs us only about the uploading part, which is a subset of the whole
    import operation.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是在导入大文件时，有一个视觉反馈对上传进度的进行是很有趣的。请注意，我们在这里讨论的进度条只通知我们有关上传部分的进度，这是整个导入操作的一个子集。
- en: 'Having a JavaScript-enabled browser is a requirement for this feature. Moreover,
    the web server''s PHP component must have the JSON extension and at least one
    of these extensions:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有启用JavaScript的浏览器是此功能的要求。此外，Web服务器的PHP组件必须具有JSON扩展和以下扩展中的至少一个：
- en: The well-know APC extension ([http://pecl.php.net/package/APC](http://pecl.php.net/package/APC)),
    which is highly recommended anyway for its opcode caching benefits
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 广为人知的APC扩展（[http://pecl.php.net/package/APC](http://pecl.php.net/package/APC)），无论如何都强烈推荐它的opcode缓存优势
- en: The `uploadprogress` extension ([http://pecl.php.net/package/uploadprogress](http://pecl.php.net/package/uploadprogress))
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`uploadprogress`扩展（[http://pecl.php.net/package/uploadprogress](http://pecl.php.net/package/uploadprogress)）'
- en: phpMyAdmin uses AJAX techniques to fetch progress information, then displays
    it as part of the **File to import** dialog. The number of bytes uploaded, total
    number of bytes, and percentage uploaded are displayed under the bar.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: phpMyAdmin使用AJAX技术获取进度信息，然后将其显示为**要导入的文件**对话框的一部分。上传的字节数、总字节数和上传百分比显示在条形图下方。
- en: Configuring APC
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置APC
- en: A few `php.ini` directives play an important role for upload progress. First,
    the `apc.rfc1867` directive must be set to `On` or `true`, otherwise this extension
    won't be reporting upload progress to the calling script. When set to `On`, this
    extension updates an APC user cache entry with the upload status information.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 一些`php.ini`指令对上传进度起着重要作用。首先，`apc.rfc1867`指令必须设置为`On`或`true`，否则该扩展将不会向调用脚本报告上传进度。当设置为`On`时，该扩展会使用上传状态信息更新APC用户缓存条目。
- en: Also, the frequency of the updates can be set via the `apc.rfc1867_freq` directive,
    which can take the form of a percentage of the total file size (for example, `apc.rfc1867_freq
    = "10%")`, or a size in bytes (suffixes `k` for kilobytes, `m` for megabytes,
    and `g` for gigabytes are accepted). A value of `0` here indicates us to update
    as often as possible, which looks interesting but in reality may slow down the
    upload.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，更新的频率可以通过`apc.rfc1867_freq`指令进行设置，可以采用总文件大小的百分比形式（例如，`apc.rfc1867_freq =
    "10%"`），或以字节为单位的大小（接受后缀`k`表示千字节，`m`表示兆字节，`g`表示千兆字节）。这里的值为`0`表示尽可能频繁地更新，看起来很有趣，但实际上可能会减慢上传速度。
- en: This very notion of update frequency explains why the bar progresses in chunks
    rather than continuously when using this mechanism.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 更新频率的概念解释了为什么在使用这种机制时，进度条以块状而不是连续地进行。
- en: Summary
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'This chapter covered:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了：
- en: Various options in phpMyAdmin that allow us to import data
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: phpMyAdmin中允许我们导入数据的各种选项
- en: The different mechanisms involved in importing files
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导入文件涉及的不同机制
- en: The limits that we might hit when trying a transfer, and ways to bypass these
    limits
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试传输时可能遇到的限制，以及绕过这些限制的方法
- en: The next chapter will explain how to do single-table searches (covering search
    criteria specification) and how to search in the whole database.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将解释如何进行单表搜索（涵盖搜索条件规范）以及如何在整个数据库中进行搜索。
