- en: Chapter 8. Searching Data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。搜索数据
- en: In this chapter, we present mechanisms that can be used to find the data we
    are looking for, instead of just browsing tables page-by-page and sorting them.
    In **Search** mode, application developers can look for data in ways not expected
    by the interface they are building—adjusting and sometimes repairing data. This
    chapter covers single-table searches and entire database searches. [Chapter 12](ch12.html
    "Chapter 12. Generating Multi-table Queries") is a complement to this chapter
    and presents examples of searches involving multiple tables at once.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了可用于查找我们正在寻找的数据的机制，而不仅仅是浏览表格页面并对其进行排序。在**搜索**模式下，应用程序开发人员可以以界面不期望的方式查找数据，调整并有时修复数据。本章涵盖了单表搜索和整个数据库搜索。[第12章](ch12.html
    "第12章。生成多表查询")是本章的补充，并提供了涉及同时多个表的搜索示例。
- en: Single-table searches
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单表搜索
- en: This section describes the **Search** page where a single-table search is available.
    Searching in just one table is effective only in the situation where a single
    table regroups all the data on which we want to search. If the data is scattered
    in many tables, a database search should be launched instead, and this is covered
    later in the chapter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了**搜索**页面，其中提供了单表搜索。仅在单个表中搜索仅在单个表中聚合了我们想要搜索的所有数据的情况下才有效。如果数据分散在许多表中，则应该启动数据库搜索，这将在本章后面进行介绍。
- en: Entering the search page
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 输入搜索页面
- en: 'The **Search** page can be accessed by clicking on the **Search** link in the
    `Table` view. This has been done here for the `book` table:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在`Table`视图中点击**搜索**链接来访问**搜索**页面。这在这里已经为`book`表完成了：
- en: '![Entering the search page](img/7782_08_01.jpg)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![输入搜索页面](img/7782_08_01.jpg)'
- en: The most commonly used section of the **Search** interface **(query by example)**
    is the one immediately displayed, whereas other dialogs are hidden in a slider
    that can be activated by the **Options** link (more on these dialogs later in
    this chapter).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**搜索**界面最常用的部分**（示例查询）**会立即显示，而其他对话框则隐藏在可以通过**选项**链接激活的滑块中（本章后面将更多介绍这些对话框）。'
- en: Searching criteria by column—query by example
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按列搜索条件-示例查询
- en: The main use of the **Search** panel is to enter criteria for some columns so
    as to retrieve only the data we are interested in. This is called **query by example**
    because we give an example of what we are looking for. Our first retrieval will
    concern finding the book with ISBN **1-234567-89-0**. We simply enter this value
    in the **isbn** box and set the **Operator** field to **=**.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**搜索**面板的主要用途是输入某些列的条件，以便只检索我们感兴趣的数据。这被称为**示例查询**，因为我们给出了我们要查找的内容的示例。我们的第一个检索将涉及查找具有ISBN
    **1-234567-89-0**的书。我们只需在**isbn**框中输入这个值，并将**运算符**字段设置为**=**。'
- en: '![Searching criteria by column—query by example](img/7782_08_02.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![按列搜索条件-示例查询](img/7782_08_02.jpg)'
- en: 'Clicking on **Go** gives these results (shown partially in the following screenshot):'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**Go**会给出以下结果（在下面的截图中部分显示）：
- en: '![Searching criteria by column—query by example](img/7782_08_03.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![按列搜索条件-示例查询](img/7782_08_03.jpg)'
- en: This is a standard results page. If the results ran in pages, we could navigate
    through them, and edit and delete data for the subset we have chosen during the
    process. Another feature of phpMyAdmin is that the columns used as the criteria
    are highlighted by changing the border color of the columns to better reflect
    their importance on the results page.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个标准的结果页面。如果结果分页显示，我们可以浏览它们，并在过程中编辑和删除所选择的子集的数据。phpMyAdmin的另一个特性是，用作条件的列通过更改边框颜色来突出显示，以更好地反映它们在结果页面上的重要性。
- en: It isn't necessary to specify that the **isbn** column be displayed even though
    this is the column in which we search. We could have selected only the **title**
    column for display (refer to the *Selecting the columns to be displayed* section)
    and chosen the **isbn** column as a criterion.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 并不需要指定**isbn**列被显示，即使这是我们搜索的列。我们可以仅选择**title**列进行显示（参考*选择要显示的列*部分），并选择**isbn**列作为条件。
- en: Searching for empty / non-empty values
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 搜索空/非空值
- en: Two handy operators are present in the operator's list when the column has a
    character type such as `CHAR, VARCHAR`, or `TEXT:`
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当列具有字符类型（如`CHAR，VARCHAR`或`TEXT`）时，操作符列表中会出现两个方便的操作符：
- en: '`= ''''`'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`= ''''`'
- en: '`!= ''''`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`!= ''''`'
- en: Those are the ones to use when you want to search for an empty `(= '')` or not
    empty `(!= '')` value in some column. Normally, typing nothing in a column's **Value**
    field means that this column does not participate in the search process. However,
    with one of these operators, this column is included in the generated search query.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当您想要搜索某列中的空值`(= '')`或非空值`(!= '')`时，可以使用这些。通常，在列的**值**字段中不输入任何内容意味着该列不参与搜索过程。但是，使用这些运算符之一，该列将包括在生成的搜索查询中。
- en: Note
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Please do not confuse this method with searching for a `NULL` value, which is
    quite different. Indeed, a `NULL` value (refer to [http://en.wikipedia.org/wiki/Null_(SQL)](http://en.wikipedia.org/wiki/Null_(SQL))
    for a more complete explanation) is a special value that conveys that some information
    is missing in this column.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 请不要将此方法与搜索`NULL`值混淆，这是完全不同的。实际上，`NULL`值（参考[http://en.wikipedia.org/wiki/Null_(SQL)](http://en.wikipedia.org/wiki/Null_(SQL)
    "http://en.wikipedia.org/wiki/Null_(SQL)")以获取更完整的解释）是一种特殊值，表示该列中缺少一些信息。
- en: Producing reports with Print view
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用打印视图生成报告
- en: 'We see the **Print view** and **Print view (with full texts)** links on the
    results page. These links produce a more formal report of the results (without
    the navigation interface) directly to the printer. In our case, using **Print
    view** would produce the following:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在结果页面上看到了**打印视图**和**打印视图（带有完整文本）**链接。这些链接会直接将结果（不包括导航界面）更正式地生成报告并直接发送到打印机。在我们的情况下，使用**打印视图**会产生以下结果：
- en: '![Producing reports with Print view](img/7782_08_04.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![使用打印视图生成报告](img/7782_08_04.jpg)'
- en: This report contains information about the server, database, time of generation,
    version of phpMyAdmin, version of MySQL, and generated SQL query. The other link,
    **Print view (with full texts)**, would print the contents of the `TEXT` columns
    in their entirety.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这份报告包含有关服务器、数据库、生成时间、phpMyAdmin版本、MySQL版本和生成的SQL查询的信息。另一个链接**打印视图（带有完整文本）**将打印`TEXT`列的全部内容。
- en: Searching with wildcard characters
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用通配符字符进行搜索
- en: Let us assume we are looking for something less precise—all books with "cinema"
    in their title. First, we go back to the search page. For this type of search,
    we will use SQL's **LIKE** operator. This operator accepts wildcard characters—the
    `%` character (which matches any number of characters) and the underscore (_)
    character (which matches a single character). Thus we can use **%cinema%** to
    let phpMyAdmin find any substring that matches the word "cinema". If we left out
    both wildcard characters, we would get exact matches with only that single word.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们假设我们正在寻找一些不太精确的东西——所有标题中带有“电影”一词的书籍。首先，我们回到搜索页面。对于这种类型的搜索，我们将使用SQL的**LIKE**运算符。该运算符接受通配符字符——百分号（`%`）字符（匹配任意数量的字符）和下划线（`_`）字符（匹配单个字符）。因此，我们可以使用**%cinema%**让phpMyAdmin找到任何与单词“cinema”匹配的子字符串。如果我们省略了通配符字符，我们将只得到包含该单词的精确匹配。
- en: This substring matching is easier to access, being part of the **Operator**
    drop-down list. We only have to enter the word **cinema** and use the operator
    **LIKE %...%** to perform that match. We should avoid using this form of the **LIKE**
    operator on big tables (comprising of thousands of rows), as MySQL does not use
    an index for data retrieval in this case, leading to wait times that depend on
    the server hardware and its current load. This is why this operator is not the
    default one in the drop-down list, even though this method of search is commonly
    used on smaller tables.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这种子字符串匹配更容易访问，因为它是**运算符**下拉列表的一部分。我们只需输入单词**cinema**并使用运算符**LIKE %...%**进行匹配。我们应该避免在大表上使用这种形式的**LIKE**运算符（包含数千行），因为MySQL在这种情况下不会使用索引进行数据检索，导致等待时间取决于服务器硬件及其当前负载。这就是为什么这个运算符不是下拉列表中的默认选项，即使这种搜索方法在较小的表上通常被使用。
- en: 'The following screenshot shows how we ask for a search on **cinema** with the
    **LIKE %...%** operator:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了我们如何使用**LIKE %...%**运算符要求搜索**cinema**：
- en: '![Searching with wildcard characters](img/7782_08_05.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![使用通配符字符进行搜索](img/7782_08_05.jpg)'
- en: Note
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `LIKE` operator can be used for other types of wildcard searches, for example
    `History%`, which would search for this word at the beginning of a title. As the
    expression does not start with a wildcard character, MySQL will try to use an
    index if it finds one that speeds up data retrieval. For more details about MySQL's
    use of indexes, please refer to [http://dev.mysql.com/doc/refman/5.1/en/mysql-indexes.html](http://dev.mysql.com/doc/refman/5.1/en/mysql-indexes.html).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`LIKE`运算符可以用于其他类型的通配符搜索，例如`History%`，这将在标题开头搜索这个词。由于表达式不以通配符字符开头，MySQL将尝试使用索引来加快数据检索。有关MySQL索引的更多详细信息，请参阅[http://dev.mysql.com/doc/refman/5.1/en/mysql-indexes.html](http://dev.mysql.com/doc/refman/5.1/en/mysql-indexes.html)。'
- en: 'Using either of these methods of performing the query produces the following
    results:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这两种查询方法之一会产生以下结果：
- en: '![Searching with wildcard characters](img/7782_08_06.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![使用通配符字符进行搜索](img/7782_08_06.jpg)'
- en: The `%` and `_` wildcard characters may be repeated in a search expression;
    for example, `histo__` (two underscores) would match `history` whereas `histo%`
    would match `history` and `historian`. The MySQL manual gives more examples at
    [http://dev.mysql.com/doc/refman/5.1/en/string-comparison-functions.html](http://dev.mysql.com/doc/refman/5.1/en/string-comparison-functions.html).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在搜索表达式中可以重复使用`%`和`_`通配符字符；例如，`histo__`（两个下划线）将匹配`history`，而`histo%`将匹配`history`和`historian`。MySQL手册在[http://dev.mysql.com/doc/refman/5.1/en/string-comparison-functions.html](http://dev.mysql.com/doc/refman/5.1/en/string-comparison-functions.html)中给出了更多示例。
- en: Case sensitivity and search
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 大小写敏感和搜索
- en: In the previous example, we could have replaced "cinema" with "CINEMA" and achieved
    similar results. The reason is that the collation of the **title** column is **latin1_swedish_ci**.
    This collation comes from the collation set, by default, at database creation
    unless the server's default collation has been changed (refer to [http://dev.mysql.com/doc/refman/5.1/en/charset-mysql.html)](http://dev.mysql.com/doc/refman/5.1/en/charset-mysql.html)).
    Here, **ci** means that comparisons are done in a case-insensitive way. Please
    refer to [http://dev.mysql.com/doc/refman/5.1/en/case-sensitivity.html](http://dev.mysql.com/doc/refman/5.1/en/case-sensitivity.html)
    for more details.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们可以用“CINEMA”替换“cinema”并获得类似的结果。原因是**title**列的排序规则是**latin1_swedish_ci**。这种排序规则来自于在数据库创建时默认设置的排序规则集，除非服务器的默认排序规则已更改（参见[http://dev.mysql.com/doc/refman/5.1/en/charset-mysql.html)](http://dev.mysql.com/doc/refman/5.1/en/charset-mysql.html)）。这里，**ci**表示比较是以不区分大小写的方式进行的。有关更多详细信息，请参阅[http://dev.mysql.com/doc/refman/5.1/en/case-sensitivity.html](http://dev.mysql.com/doc/refman/5.1/en/case-sensitivity.html)。
- en: Combining criteria
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组合条件
- en: 'We can use multiple criteria for the same query (for example, to find all the
    English books of more than 300 pages). There are more comparative choices in **Operator**
    because the **page_count** column is numeric, as shown in the following screenshot:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以为同一查询使用多个条件（例如，查找所有超过300页的英文书籍）。在**运算符**中有更多比较选择，因为**page_count**列是数字型的，如下面的屏幕截图所示：
- en: '![Combining criteria](img/7782_08_07.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![组合条件](img/7782_08_07.jpg)'
- en: Search options
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 搜索选项
- en: The **Options** slider reveals additional panels to further refine the search
    process.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**选项**滑块显示了额外的面板，以进一步细化搜索过程。'
- en: Selecting the columns to be displayed
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 选择要显示的列
- en: In the **Options** slider, a **Select columns** panel facilitates selection
    of the columns to be displayed in the results. All columns are selected by default,
    but we can *Ctrl* + Click on other columns to make the necessary selections. Mac
    users would use *Command* + Click to select/unselect the columns.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在“选项”滑块中，“选择列”面板方便地选择要在结果中显示的列。默认情况下会选择所有列，但我们可以使用“Ctrl”+单击其他列来进行必要的选择。Mac用户将使用“Command”+单击来选择/取消选择列。
- en: 'Following are the columns of interest in this example:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是此示例中感兴趣的列：
- en: '![Selecting the columns to be displayed](img/7782_08_08.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![选择要显示的列](img/7782_08_08.jpg)'
- en: We can also specify the number of rows per page in the textbox next to the column
    selection. The **Add search conditions** box will be explained in the *Applying
    a WHERE clause* section, which will follow shortly.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以在列选择旁边的文本框中指定每页的行数。稍后将在“应用WHERE子句”部分中解释“添加搜索条件”框。
- en: Ordering the results
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 排序结果
- en: The **Display order** dialog permits the specification of an initial sorting
    order for the results to come. In this dialog, a drop-down menu contains all the
    table's columns; it's up to us to select the one on which we want to sort. By
    default, the sorting will be in **Ascending** order, but a choice of **Descending**
    order is also available.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: “显示顺序”对话框允许指定结果的初始排序顺序。在此对话框中，下拉菜单包含所有表的列；我们可以选择要排序的列。默认情况下，排序将按升序进行，但也可以选择降序。
- en: It should be noted that on the results page, we can change the sort order using
    the techniques explained in [Chapter 4](ch04.html "Chapter 4. Creating and Browsing
    Tables").
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，在结果页面上，我们可以使用[第4章](ch04.html "第4章。创建和浏览表")中解释的技术来更改排序顺序。
- en: Applying a WHERE clause
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用WHERE子句
- en: Sometimes, we may want to enter a search condition that is not offered in the
    **Function** list of the **query by example** section. The list cannot contain
    every possible variation in the language. Let us say we want to find all the English
    or French books using the `IN` clause. To do this, we can use the **Add search
    conditions** section.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，我们可能希望输入一个在“示例查询”部分的“函数”列表中没有提供的搜索条件。该列表无法包含语言中的每种可能的变化。假设我们想要使用`IN`子句找到所有英语或法语的书。为此，我们可以使用“添加搜索条件”部分。
- en: '![Applying a WHERE clause](img/7782_08_09.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![应用WHERE子句](img/7782_08_09.jpg)'
- en: Note
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The complete search expression is generated by combining the search conditions
    and other criteria (entered in the **query by example** lines) with a logical
    `AND` operator.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将搜索条件和其他条件（在“示例查询”行中输入）与逻辑“AND”运算符组合生成完整的搜索表达式。
- en: We could have a more complex list of search conditions that would be entered
    in the same textbox, possibly with brackets and operators such as `AND` or `OR`.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以有一个更复杂的搜索条件列表，可以在同一个文本框中输入，可能包括括号和`AND`或`OR`等运算符。
- en: A **Documentation** link points to the MySQL manual where we can see a huge
    choice of available functions. (Each function is applicable to a specific column
    type.)
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: “文档”链接指向MySQL手册，我们可以在那里看到大量可用函数的选择。（每个函数适用于特定的列类型。）
- en: Avoiding repeated results
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 避免重复结果
- en: 'The normal behavior of the `SELECT` statement is to fetch all entries corresponding
    to the criteria, even if some entries are repeated. Sometimes, we may want to
    avoid getting the same results more than once. For example, if we want to know
    in which cities we have clients, displaying each city name once would be enough.
    Here, we want to know in which languages our books are written. In the **Select
    columns** dialog, we choose just the **language** column, and we check **DISTINCT**,
    as shown in the following screenshot:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: “SELECT”语句的正常行为是获取与条件相对应的所有条目，即使有些条目重复。有时，我们可能希望避免多次获取相同的结果。例如，如果我们想知道我们在哪些城市有客户，只显示每个城市的名称一次就足够了。在这里，我们想知道我们的书是用哪种语言写的。在“选择列”对话框中，我们只选择“语言”列，并勾选“DISTINCT”，如下面的屏幕截图所示：
- en: '![Avoiding repeated results](img/7782_08_10.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![避免重复结果](img/7782_08_10.jpg)'
- en: Clicking on **Go** produces a results page where we see **en** just once; without
    the **DISTINCT** option, the row containing **en** would have appeared three times.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 单击“Go”会生成一个结果页面，在那里我们只看到“en”一次；如果没有“DISTINCT”选项，包含“en”的行将出现三次。
- en: If we select more than one column (for example `author_id` and `language)` and
    mark the `DISTINCT` option, we will now see two lines in the results as there
    are two books in English (but from different authors). Results are still not repeated.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们选择了多个列（例如`author_id`和`language`）并标记了`DISTINCT`选项，那么现在我们将在结果中看到两行，因为有两本书是用英语写的（但来自不同的作者）。结果仍然不重复。
- en: Performing a complete database search
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行完整的数据库搜索
- en: In the previous examples, searching was limited to one table. This assumes knowledge
    of the exact table (and columns) where the necessary information might be stored.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，搜索被限制在一个表中。这假设我们知道可能存储所需信息的确切表（和列）。
- en: When the data is hidden somewhere in the database, or when the same data can
    be presented in various columns (for example, a **title** column or a **description**
    column), it is easier to use the database search method.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 当数据隐藏在数据库中的某个地方，或者当相同的数据可以以各种列的形式呈现（例如，“标题”列或“描述”列），使用数据库搜索方法会更容易。
- en: 'We enter the **Search** page in the `Database` view for the `marc_book` database:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在“marc_book”数据库的“数据库”视图中进入“搜索”页面：
- en: '![Performing a complete database search](img/7782_08_11.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![执行完整的数据库搜索](img/7782_08_11.jpg)'
- en: In the **Word(s) or value(s)** section, we enter what we want to find. The **%**
    wildcard character can prove useful here—but remember the performance advice about
    wildcard characters given earlier in this chapter. We enter **souvenirs**.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在“单词或值”部分，我们输入想要查找的内容。在这里，“%”通配符字符可能会很有用，但请记住本章前面提到的通配符字符的性能建议。我们输入“纪念品”。
- en: In the **Find** section, we specify how to treat the values entered. We might
    need to find **at least one of the words** entered, **all words** (in no particular
    order), or **the exact phrase** (words in the same order, somewhere in a column).
    Another choice is to use **as regular expression**, which is a more complex way
    of doing pattern matching. More details are available at [http://dev.mysql.com/doc/refman/5.1/en/regexp.html](http://dev.mysql.com/doc/refman/5.1/en/regexp.html)
    and [http://www.regular-expressions.info/](http://www.regular-expressions.info/).
    We will keep the default value—**at least one of the words**.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在**Find**部分，我们指定如何处理输入的值。我们可能需要找到**至少一个输入的单词**，**所有单词**（无特定顺序），或**确切的短语**（单词按相同顺序出现在某个列中）。另一个选择是使用**作为正则表达式**，这是一种更复杂的模式匹配方式。更多细节可在[http://dev.mysql.com/doc/refman/5.1/en/regexp.html](http://dev.mysql.com/doc/refman/5.1/en/regexp.html)和[http://www.regular-expressions.info/](http://www.regular-expressions.info/)找到。我们将保持默认值——**至少一个输入的单词**。
- en: We can choose the tables to restrict the search or select all the tables. As
    we only have two (small) tables, we select both.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以选择要限制搜索的表，或选择所有表。由于我们只有两个（小）表，我们选择了两个。
- en: Note
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: As the search will be done on each row of every table selected, we might hit
    some time limits if the number of rows or tables is too big. Thus, this feature
    can be deactivated by setting `$cfg['UseDbSearch']` to `FALSE`. (It is set to
    `TRUE` by default).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 由于搜索将在所选表的每一行上进行，如果行数或表的数量太大，我们可能会遇到一些时间限制。因此，可以通过将`$cfg['UseDbSearch']`设置为`FALSE`来停用此功能（默认设置为`TRUE`）。
- en: 'Clicking on **Go** finds the following result for us:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**Go**为我们找到以下结果：
- en: '![Performing a complete database search](img/7782_08_12.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![执行完整的数据库搜索](img/7782_08_12.jpg)'
- en: This is an overview of the number of matches and the relevant tables. We might
    get some matches in the tables in which we may not be interested. However, for
    the matches that look promising, we can click on **browse** to browse the results
    page, or we can choose **delete** to delete the unwanted rows. The **show search
    criteria** link would bring back our criteria panel.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这是匹配数量和相关表的概述。我们可能会在我们不感兴趣的表中找到一些匹配。但是，对于看起来有希望的匹配，我们可以点击**browse**来浏览结果页面，或者我们可以选择**delete**来删除不需要的行。**show
    search criteria**链接将带回我们的条件面板。
- en: Restricting search to a column
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 限制搜索到一列
- en: Sometimes, a particular column name is part of one (or many) tables, and we
    want to search only inside this column. For example, suppose that we are looking
    for "marc"; but this name could be also part of a book's title. So, we want to
    restrict the search to only the "name" column in all the chosen tables. This can
    be achieved by entering "name" in the **inside column** choice.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，特定的列名是一个（或多个）表的一部分，我们只想在这个列中进行搜索。例如，假设我们正在寻找"marc"；但这个名字也可能是书名的一部分。因此，我们只想在所有选择的表的"name"列中限制搜索。这可以通过在**inside
    column**选项中输入"name"来实现。
- en: Stopping an errant query
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 停止错误的查询
- en: 'Suppose we launch a complex search and notice that the browser is waiting for
    the results. This might happen with a database search but also with a single-table
    search. We can instruct the browser to stop but this will only tell the web server
    to cease handling our request. However, at this point the MySQL server process
    is busy, possibly doing a complex join or a full table scan. Here is a method
    to stop this errant query:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们启动了一个复杂的搜索，并注意到浏览器正在等待结果。这可能发生在数据库搜索中，也可能发生在单表搜索中。我们可以指示浏览器停止，但这只会告诉Web服务器停止处理我们的请求。然而，此时MySQL服务器进程正在忙碌，可能正在进行复杂的连接或完整的表扫描。以下是停止这个错误查询的方法：
- en: We open a different browser (for example, the errant query was launched via
    Firefox and we open Internet Explorer).
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们打开一个不同的浏览器（例如，错误的查询是通过Firefox启动的，我们打开Internet Explorer）。
- en: We log in via phpMyAdmin to MySQL with the same account.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用相同的帐户通过phpMyAdmin登录到MySQL。
- en: On the home page, we click on **Processes**.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在主页上，我们点击**Processes**。
- en: At this point, we should see a process identified by **Query** under the **Command**
    column and containing the errant query (other than `SHOW PROCESSLIST` which is
    not the one to kill).
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时，我们应该在**Command**列下看到一个由**Query**标识的进程，并包含错误的查询（而不是`SHOW PROCESSLIST`，这不是要终止的进程）。
- en: We click on **Kill** for this process.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们点击**Kill**来终止这个进程。
- en: To verify, we can immediately click again on **Processes** and the chosen process
    should now be identified as **Killed** instead of **Query**.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了验证，我们可以立即再次点击**Processes**，选择的进程现在应该被标识为**Killed**而不是**Query**。
- en: Summary
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we took an overview of single table searches with "query by
    example" criteria and additional criteria specification—selecting displayed values
    and ordering results. We also looked at wildcard searches and full database search.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们概述了带有“按示例查询”的单表搜索以及附加条件规范的概述——选择显示的值和排序结果。我们还研究了通配符搜索和完整的数据库搜索。
- en: The next chapter will explain how to perform the operations on tables, for example,
    changing a table's attributes, such as its storage engine. The subjects of repairing
    and optimizing tables are covered in this chapter as well.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将解释如何对表执行操作，例如更改表的属性，比如存储引擎。本章还涵盖了修复和优化表的主题。
