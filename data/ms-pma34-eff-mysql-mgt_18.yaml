- en: Chapter 18. Tracking Changes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第18章。跟踪变化
- en: This chapter will examine how we can use the change-tracking mechanism, in order
    to record structure and data changes done from the phpMyAdmin interface and to
    obtain reports about such changes.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将研究如何使用跟踪机制，以记录从phpMyAdmin界面进行的结构和数据更改，并获取有关此类更改的报告。
- en: Understanding the goals of the tracking system
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解跟踪系统的目标
- en: Each software application has its own idea of what changes are important to
    track for its users. This section describes tracking systems that exist in other
    applications, and compares them to the one offered by phpMyAdmin.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 每个软件应用程序都有自己的想法，对于其用户来说，跟踪哪些变化是重要的。本节描述了其他应用程序中存在的跟踪系统，并将它们与phpMyAdmin提供的系统进行了比较。
- en: Tracking in other software applications
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他软件应用程序中的跟踪
- en: Having access to historic data that displays all of the changes made to an information
    system is a feature that is taken for granted in many software products. The "undo"
    feature of any serious word-processing software is an example of being able to
    go back in time, albeit one step at the time. A more complex example would be
    the history feature of MediaWiki (the core software of Wikipedia). It enables
    us to go back to any state of a given page, to see the changes between any two
    versions, and even to mark any older version as the current one. Tracking information
    includes the author (or IP address), the date and time of change, and a comment.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 访问显示信息系统的所有更改的历史数据是许多软件产品中被视为理所当然的功能。任何严肃的文字处理软件的“撤消”功能就是能够回到过去的一个例子，尽管是一步一步的。更复杂的例子是MediaWiki的历史功能（维基百科的核心软件）。它使我们能够回到给定页面的任何状态，查看任何两个版本之间的更改，甚至将任何旧版本标记为当前版本。跟踪信息包括作者（或IP地址）、更改的日期和时间以及评论。
- en: 'In MySQL itself, the logging system `(binlog)` records all changes made to
    the database; however, in this case, the goal is two-fold:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL本身中，日志系统（`binlog`）记录对数据库所做的所有更改；但是，在这种情况下，目标是双重的：
- en: To allow master-slave synchronization
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许主从同步
- en: To enable restoration via the `mysqlbinlog` command-line utility
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过`mysqlbinlog`命令行实用程序启用恢复
- en: Tracking in phpMyAdmin
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: phpMyAdmin中的跟踪
- en: phpMyAdmin's tracking system allows the user to specify which table is going
    to be tracked, so it can be called an **opt-in system**. By default, no table
    is tracked unless a developer elects to do so; and when a developer activates
    tracking for a table, changes start to be recorded even if performed by someone
    else. Only the changes done via phpMyAdmin are recorded.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: phpMyAdmin的跟踪系统允许用户指定要跟踪的表，因此可以称为**选择加入系统**。默认情况下，除非开发人员选择这样做，否则不会跟踪任何表；当开发人员为表激活跟踪时，即使由其他人执行，更改也开始记录。只记录通过phpMyAdmin进行的更改。
- en: 'Furthermore, for a given table, we can indicate which statements we are interested
    in tracking. The list of statements is divided into two groups: data definition
    and data manipulation.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，对于给定的表，我们可以指示我们有兴趣跟踪哪些语句。语句列表分为两组：数据定义和数据操作。
- en: Suppose that a team is working on a project that involves making changes to
    the structure of tables. With tracking activated and assuming that each developer
    logs in to MySQL with his or her own account, we now have access to historic data,
    including information about which developer dropped some critical column! Of course,
    this tracking is not tamper-proof; after all, it's stored in a MySQL table so
    the security of this tracking information depends on who has access to the tracking
    table.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 假设一个团队正在进行涉及对表结构进行更改的项目。启用跟踪并假设每个开发人员都使用自己的帐户登录到MySQL，现在我们可以访问历史数据，包括有关哪个开发人员删除了一些关键列的信息！当然，这种跟踪并不是防篡改的；毕竟，它存储在MySQL表中，因此此跟踪信息的安全性取决于谁可以访问跟踪表。
- en: Prerequisites
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 先决条件
- en: The phpMyAdmin configuration storage holds all metadata for the tracking mechanism.
    If we have implemented this storage a while ago (for a previous phpMyAdmin version,
    such as 3.1 or older), we can use `scripts/create_tables.sql` from the current
    phpMyAdmin version to upgrade the configuration storage with the missing tables
    (in our case, the `pma_tracking` table). The reason for this is that the script
    creates this table in a prudent way by using the `CREATE TABLE IF NOT EXISTS `pma_tracking``
    statement, thus ensuring that it won't be created if the table is already present.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: phpMyAdmin配置存储包含跟踪机制的所有元数据。如果我们之前实现了此存储（例如，对于以前的phpMyAdmin版本，如3.1或更早版本），我们可以使用当前phpMyAdmin版本的`scripts/create_tables.sql`来升级配置存储，以添加缺少的表（在我们的情况下，`pma_tracking`表）。原因是该脚本通过使用`CREATE
    TABLE IF NOT EXISTS `pma_tracking``语句谨慎地创建此表，从而确保如果表已经存在，则不会创建该表。
- en: Note
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In phpMyAdmin 3.3.3, the type of the `data_sql` column in `pma_tracking` was
    changed from `TEXT` to `LONGTEXT` in the `create_tables.sql` script. Therefore,
    it's important to make this change manually in our own `pma_tracking` table, if
    we ran this script prior to version 3.3.3.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在phpMyAdmin 3.3.3中，`pma_tracking`中的`data_sql`列的类型从`TEXT`更改为`LONGTEXT`，在`create_tables.sql`脚本中。因此，如果我们在3.3.3版本之前运行了此脚本，重要的是在我们自己的`pma_tracking`表中手动进行此更改。
- en: Configuring a basic tracking mechanism
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置基本跟踪机制
- en: In `config.inc.php`, for a specific MySQL server's configuration, the `$cfg['Servers'][$i]['tracking']`
    should contain the name of the tracking table; the suggested name is `pma_tracking`
    to match the default value inside `scripts/create_tables.sql`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在`config.inc.php`中，对于特定MySQL服务器的配置，`$cfg['Servers'][$i]['tracking']`应包含跟踪表的名称；建议的名称是`pma_tracking`，以匹配`scripts/create_tables.sql`中的默认值。
- en: Note
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If this directive is left blank, no tracking is possible on this server (we
    won't see any **Tracking** menu).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果此指令留空，则在此服务器上无法进行跟踪（我们将看不到**跟踪**菜单）。
- en: By default, tracking must be activated per table. If we prefer that the tracking
    mechanism be switched on automatically for all future tables and views, the `$cfg['Servers'][$i]['tracking_version_auto_create']`
    can be set to `TRUE`. Please note that this is only for future tables and views—we
    still need to activate tracking for existing tables.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，跟踪必须针对每个表进行激活。如果我们希望跟踪机制自动开启所有未来的表和视图，可以将`$cfg['Servers'][$i]['tracking_version_auto_create']`设置为`TRUE`。请注意，这仅适用于未来的表和视图——我们仍然需要为现有的表激活跟踪。
- en: The advantage of using automatic creation is that we don't have to think about
    it; tracking is done from the birth of a table. An inconvenient side effect of
    this is that we don't have the possibility of choosing which statements will be
    tracked; these will be taken from the default list (refer to the *Choosing the
    statements to be tracked* section later in this chapter).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用自动创建的优势在于我们不必考虑它；跟踪是从表的诞生开始的。这种不便之处是我们无法选择要跟踪的语句；这些将从默认列表中获取（请参阅本章后面的“选择要跟踪的语句”部分）。
- en: Other configuration directives will be discussed in the section that relates
    to them.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 其他配置指令将在相关部分中讨论。
- en: Principles
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 原则
- en: 'This section defines important principles on which the tracking mechanism is
    based: versioning, snapshot, and the archiving issues of tracking information.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 本节定义了跟踪机制的重要原则：版本控制、快照和跟踪信息的归档问题。
- en: Versioning
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 版本控制
- en: Using version numbers is something we are familiar with; for example, this book
    describes phpMyAdmin version 3.4.x. However, at this point we must understand
    exactly why we use version numbers.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 使用版本号是我们熟悉的事情；例如，本书描述了phpMyAdmin版本3.4.x。然而，在这一点上，我们必须确切地理解为什么要使用版本号。
- en: A good reference on software versioning is located in Wikipedia at [http://en.wikipedia.org/wiki/Software_versioning](http://en.wikipedia.org/wiki/Software_versioning).
    This article mentions that version names can be used, but version numbers are
    more common. More importantly, it states that version numbers "correspond to new
    developments in the software".
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 关于软件版本控制的良好参考资料可以在维基百科的[http://en.wikipedia.org/wiki/Software_versioning](http://en.wikipedia.org/wiki/Software_versioning)找到。这篇文章提到可以使用版本名称，但版本号更常见。更重要的是，它指出版本号“对应于软件的新发展”。
- en: 'If we apply this principle to database development, the decision that a table
    is ripe for a new version should be made by the development team when a significant
    change is about to occur on this table. How significant the change has to be in
    order to trigger a new version is a matter of interpretation within the team.
    At least one of these decisions is easy to make: version 1 always represents the
    moment where we first switch on the tracking for a particular table.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们将这个原则应用到数据库开发中，那么当一个表即将发生重大变化时，决定是否为该表创建新版本应该由开发团队做出。触发新版本的变化有多重要是团队内部解释的问题。至少有一个决定是容易做出的：版本1始终代表我们首次为特定表启用跟踪的时刻。
- en: In the situation where data manipulation statements are tracked, we should note
    also that the change can be relative to data itself, not necessarily to the structure.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在跟踪数据操作语句的情况下，我们还应该注意到变化可能与数据本身有关，而不一定与结构有关。
- en: Note
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: phpMyAdmin's tracking system uses only positive integers as version numbers;
    it's not possible to use a decimal point as in "1.1".
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: phpMyAdmin的跟踪系统只使用正整数作为版本号；不可能使用小数点，比如"1.1"。
- en: Taking a snapshot of the current structure
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 拍摄当前结构的快照
- en: Every time we create a new version, the tracking system takes a snapshot of
    the current structure and indexes of the table, and creates a new entry in the
    tracking system. In this entry are stored the database name, table name, version
    number, date of creation, and the complete structure information.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 每次创建新版本时，跟踪系统都会拍摄表的当前结构和索引的快照，并在跟踪系统中创建一个新条目。在这个条目中存储了数据库名称、表名称、版本号、创建日期和完整的结构信息。
- en: Note
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This tracking snapshot does not contain a table's data! Therefore, the tracking
    system does not replace a backup system.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这个跟踪快照不包含表的数据！因此，跟踪系统不能替代备份系统。
- en: During the lifespan of this table after the snapshot has been taken, all tracked
    statements are stored alongside this snapshot. Therefore, a table tracking version
    consists of the snapshot in addition to all of the changes made after this snapshot
    was taken, until a new version is started.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在快照被拍摄后，表的整个生命周期中，所有被跟踪的语句都会与这个快照一起存储。因此，表的跟踪版本包括快照以及在拍摄快照后进行的所有更改，直到启动新版本。
- en: Understanding archiving issues
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解归档问题
- en: When a table is dropped, its tracking information survives, unless we decide
    to suppress it. The impact of this will be discussed later in the *Deleting tracking
    information* section.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个表被删除时，它的跟踪信息会被保留，除非我们决定将其删除。这个影响将在后面的“删除跟踪信息”部分中讨论。
- en: Initiating tracking for one table
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动单个表的跟踪
- en: 'In this section, we will use the **Tracking** menu in `Table` view to start
    collecting the changes that occur for the `author` table. So we open the `author`
    table and then click on **Tracking**, which produces the following screen:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将在“表”视图中使用“跟踪”菜单来开始收集“author”表发生的变化。因此，我们打开“author”表，然后点击“跟踪”，会出现以下屏幕：
- en: '![Initiating tracking for one table](img/7782_18_01.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![启动单个表的跟踪](img/7782_18_01.jpg)'
- en: This panel tells us that we are about to create version 1 of the table; this
    is what we expected. We are offered a choice of data definition and data manipulation
    statements; for now we will leave all of them marked, and will click on **Create
    version** button. The next section explains how we can specify which statements
    are to appear in the panel shown above.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这个面板告诉我们，我们即将创建表的版本1；这是我们预期的。我们可以选择数据定义和数据操作语句；现在我们将它们全部标记，然后点击“创建版本”按钮。下一部分将解释如何指定要在上面显示的面板中出现的语句。
- en: 'After version 1 is created, the following confirmation panel is shown:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 创建版本1后，会显示以下确认面板：
- en: '![Initiating tracking for one table](img/7782_18_02.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![为一个表启动跟踪](img/7782_18_02.jpg)'
- en: 'We notice that two distinct actions took place:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们注意到发生了两个不同的动作：
- en: The creation of version 1 itself
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本1本身的创建
- en: The activation of tracking for this table
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为这个表激活跟踪
- en: Indeed, one or many versions of a table may exist, each one containing a snapshot
    from some point in time and the changes since this snapshot; but this is independent
    of the fact that tracking is active for a table and changes are being recorded.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，一个表可能存在一个或多个版本，每个版本包含从某个时间点开始的快照和自此快照以来的更改；但这与表是否处于跟踪状态并且更改正在记录无关。
- en: In this panel, we see sub-panels that will be covered in the *Choosing the statements
    to be tracked* and *Deactivating and activating tracking* sections.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个面板中，我们看到将在*选择要跟踪的语句*和*停用和启用跟踪*部分中涵盖的子面板。
- en: Choosing the statements to be tracked
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择要跟踪的语句
- en: '`$cfg[''Servers''][$i][''tracking_default_statements'']` contains a string
    that consists of comma-separated statements. These are the ones that are offered
    in the panel where we can choose which statements we want to track. The default
    list of statements is defined as follows; please note the presence of dot characters
    that permit the concatenation of strings in PHP:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`$cfg[''Servers''][$i][''tracking_default_statements'']`包含一个由逗号分隔的字符串。这些是在我们可以选择要跟踪哪些语句的面板中提供的语句。默认语句列表定义如下；请注意PHP中允许字符串连接的点字符的存在：'
- en: '[PRE0]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Testing the tracking mechanism
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试跟踪机制
- en: We are now ready to verify that this tracking system really works! As the system
    is supposed to track `ALTER TABLE` statement, we will make a slight structure
    change and see what happens. We go to the **Structure** panel for table **author**,
    select the **name** column, and increase its size from **30** to **40** characters
    (refer to [Chapter 5](ch05.html "Chapter 5. Changing Data and Structure") for
    the detailed steps).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在准备验证这个跟踪系统是否真的有效！由于系统应该跟踪`ALTER TABLE`语句，我们将进行一个轻微的结构更改，看看会发生什么。我们转到**作者**表的**结构**面板，选择**姓名**列，并将其大小从**30**增加到**40**个字符（详细步骤请参阅[第5章](ch05.html
    "第5章。更改数据和结构")）。
- en: 'We get a message, as shown in the following screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们会收到一条消息，如下截图所示：
- en: '![Testing the tracking mechanism](img/7782_18_03.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![测试跟踪机制](img/7782_18_03.jpg)'
- en: We will perform another action, this time related to data itself—changing the
    phone number of author **John Smith** to **111-2222**.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将执行另一个动作，这次与数据本身有关——将作者**John Smith**的电话号码更改为**111-2222**。
- en: To ensure that these actions were recorded by the tracking system, let us compile
    a report.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保这些动作被跟踪系统记录下来，让我们编制一份报告。
- en: Tracking report
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 跟踪报告
- en: 'Going back to the **Tracking** panel (still in `Table` view for **author)**
    we click on **Tracking report** for version 1, which produces a report as shown
    in the following screenshot:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 回到**跟踪**面板（仍然在**作者**的`表`视图中），我们点击版本1的**跟踪报告**，生成如下截图所示的报告：
- en: '![Tracking report](img/7782_18_04.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![跟踪报告](img/7782_18_04.jpg)'
- en: In fact, the report is prefixed to the main tracking information; we could click
    on **Close** and be back to where we were previously.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，报告是附加在主要跟踪信息之前的；我们可以点击**关闭**，回到之前的位置。
- en: 'We can see that under the **Tracking report** header, a list of the statements
    that are tracked is shown. Then we have a selector to determine if we want to
    see on the report the statements corresponding to:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，在**跟踪报告**标题下，显示了被跟踪的语句列表。然后我们有一个选择器，确定我们是否要在报告中查看与之对应的语句：
- en: '**Structure and data**'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**结构和数据**'
- en: '**Structure only**'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仅结构**'
- en: '**Data only**'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仅数据**'
- en: We can also specify the range of dates and times for which we want to produce
    the report. It's also possible to indicate which users we want to report on (an
    asterisk represents all users).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以指定要生成报告的日期和时间范围。还可以指示我们要报告的用户（星号代表所有用户）。
- en: The main part of the report consists of the statements themselves; here we see
    four statements. The first statement is a `DROP TABLE` statement, which would
    be useful to create this table anew should we need to export this version and
    import it back. The second statement `(CREATE TABLE)` contains the snapshot that
    was taken when version 1 was initiated. Then we see the `ALTER TABLE` and `UPDATE`
    statements that correspond to the actions we performed as a test.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 报告的主要部分包括语句本身；这里我们看到四个语句。第一个语句是一个`DROP TABLE`语句，如果我们需要导出这个版本并将其重新导入，这将有用。第二个语句（`CREATE
    TABLE`）包含了在初始化版本1时拍摄的快照。然后我们看到对应于我们执行的操作的`ALTER TABLE`和`UPDATE`语句。
- en: How to export a structure will be covered in the *Exporting a version* section
    later in this chapter.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如何导出结构将在本章后面的*导出版本*部分中介绍。
- en: Determining tracking status
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确定跟踪状态
- en: 'Let us cover all of the places in the interface where we can ascertain the
    tracking activity for a table. First, in `Table` view, we can see a message positioned
    under the menu tabs, stating that tracking is activated for this table, as shown
    in the following screenshot:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们覆盖界面中所有可以确定表的跟踪活动的地方。首先，在`表`视图中，我们可以看到一个消息，位于菜单选项卡下方，说明对于这个表，跟踪已激活，如下截图所示：
- en: '![Determining tracking status](img/7782_18_05.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![确定跟踪状态](img/7782_18_05.jpg)'
- en: In the **Tracking** panel itself, a **Status** column tells us that tracking
    is either **active** or **not active** for the latest version. In fact, when we
    create another version for the table, we will see that only the current version
    can have an active tracking status, as previous versions now only contain historical
    data.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在**跟踪**面板本身，**状态**列告诉我们最新版本的跟踪是**激活**还是**未激活**。实际上，当我们为表创建另一个版本时，我们会发现只有当前版本可以具有激活的跟踪状态，因为以前的版本现在只包含历史数据。
- en: '![Determining tracking status](img/7782_18_06.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![确定跟踪状态](img/7782_18_06.jpg)'
- en: 'In `Database` view, each table that is tracked by the system (with an active
    or not active status) is shown with the icon of an eye either in color or grayed
    out, depending upon its status. In the following example, the eye is in color:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在`数据库`视图中，系统跟踪的每个表（具有活跃或非活跃状态）都显示为一个眼睛图标，颜色或灰色取决于其状态。在下面的示例中，眼睛是彩色的：
- en: '![Determining tracking status](img/7782_18_07.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![确定跟踪状态](img/7782_18_07.jpg)'
- en: This eye icon is clickable and brings us to the **Tracking** panel for this
    specific table.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这个眼睛图标是可点击的，可以将我们带到这个特定表的**跟踪**面板。
- en: 'Finally, in `Database` view, the **Tracking** menu provides us with an overview
    of all the tables. First the tracked tables are presented, then the untracked
    ones. For either category, we have links to see more information or to start tracking:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在`数据库`视图中，**跟踪**菜单为我们提供了所有表的概览。首先呈现被跟踪的表，然后是未被跟踪的表。对于任何一类别，我们都有链接可以查看更多信息或开始跟踪：
- en: '![Determining tracking status](img/7782_18_08.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![确定跟踪状态](img/7782_18_08.jpg)'
- en: 'For the tracked tables, the following table gives a breakdown of the information
    presented, along with the available links:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 对于被跟踪的表，以下表格提供了所呈现信息的细分，以及可用的链接：
- en: '| Title or link | Description |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| 标题或链接 | 描述 |'
- en: '| --- | --- |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| **Database** | In which database the table is located |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| **数据库** | 表位于哪个数据库 |'
- en: '| **Table** | Which table is tracked |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| **表** | 被跟踪的表 |'
- en: '| **Last version** | The latest tracked version; it''s interesting to see how
    many versions exist for this table |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| **最新版本** | 最新的被跟踪版本；看到这个表有多少版本存在很有趣 |'
- en: '| **Created** | When was this version created |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| **创建时间** | 此版本创建时间 |'
- en: '| **Updated** | When was the last tracked statement stored for this table |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| **更新时间** | 上次为此表存储的跟踪语句是什么时候 |'
- en: '| **Status** | Active or not active |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| **状态** | 活跃或非活跃 |'
- en: '| **Action** | The **Drop** link can be used to remove all tracking (refer
    to the *Deleting tracking information* section later in this chapter) |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| **操作** | **删除**链接可用于删除所有跟踪（请参阅本章后面的*删除跟踪信息*部分） |'
- en: '| **Show** &#124; **Versions** | Enters `Table` view for this table, and displays
    the tracking versions |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| **显示** &#124; **版本** | 进入此表的`表`视图，并显示跟踪版本 |'
- en: '| **Show** &#124; **Tracking report** | Enters `Table` view for this table,
    and displays the tracking report |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| **显示** &#124; **跟踪报告** | 进入此表的`表`视图，并显示跟踪报告 |'
- en: '| **Show** &#124; **Structure snapshot** | Enters `Table` view for this table,
    and displays the structure snapshot (refer to the *Structure snapshot* section
    later in this chapter) |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| **显示** &#124; **结构快照** | 进入此表的`表`视图，并显示结构快照（请参阅本章后面的*结构快照*部分） |'
- en: For the untracked tables, a **Track table** link allows us to enter `Table`
    view for this table, directly in the **Tracking** panel, hence creating version
    1 in order to start the tracking mechanism.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 对于未被跟踪的表，**跟踪表**链接允许我们直接在**跟踪**面板中进入此表的`表`视图，从而创建版本1以开始跟踪机制。
- en: Deactivating and activating tracking
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 停用和激活跟踪
- en: From the **Tracking** page of a specific table, the **Deactivate now** button
    (which acts as a toggle, and changes to **Activate now)** is the one to use if
    we wish to stop (temporarily or permanently) further storing of the tracked statements.
    Past statements that were stored remain untouched in the tracking data related
    to the current version.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 从特定表的**跟踪**页面，**立即停用**按钮（作为切换，变为**立即激活)** 是我们希望停止（暂时或永久）进一步存储跟踪语句的按钮。存储的过去语句将保持不变，与当前版本相关的跟踪数据。
- en: Structure snapshot
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结构快照
- en: In the **Tracking** panel of `Table` view, the **Structure snapshot** link displays
    the past state of the table at the time this version was created. The panel shows
    both the stored SQL code and a visual representation in the familiar phpMyAdmin
    **Structure** panel format.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在`表`视图的**跟踪**面板中，**结构快照**链接显示了在创建此版本时表的过去状态。该面板显示了存储的SQL代码以及熟悉的phpMyAdmin **结构**面板格式的可视化表示。
- en: '![Structure snapshot](img/7782_18_09.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![结构快照](img/7782_18_09.jpg)'
- en: Exporting a version
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导出版本
- en: 'As the complete SQL code at the time of creation for a specific version has
    been stored along with all of the tracked statements that occurred since that
    moment, we might want to reuse them in their executable form. At the bottom of
    the **Tracking report** panel, an **Export as** dialog is available, offering
    three variants for exporting. If we choose **SQL dump (file download)** menu option,
    then all of the statements stored for this version are transferred in a file that
    we can save to our workstation. For the `author` table, this would produce a file
    containing the following lines:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在创建特定版本时存储了完整的SQL代码以及自那时起发生的所有跟踪语句，我们可能希望以可执行形式重用它们。在**跟踪报告**面板的底部，有一个**导出为**对话框可用，提供了三种导出变体。如果我们选择**SQL转储（文件下载）**菜单选项，那么为此版本存储的所有语句将转移到一个文件中，我们可以保存到我们的工作站。对于`author`表，这将产生一个包含以下行的文件：
- en: '[PRE1]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If, instead, we pick the **SQL dump** choice, the statements appear on screen
    in a text area; from this point we could cut and paste the SQL code or click on
    **Go** to run it. As a measure of precaution, extra statements are generated on
    top of the code; these handle the creation of another database in which the table
    would be created. Of course the user must have the rights to create this database.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们选择**SQL转储**选项，语句将显示在屏幕上的文本区域中；从这一点上，我们可以剪切和粘贴SQL代码或点击**Go**来运行它。作为预防措施，额外的语句会在代码的顶部生成；这些语句处理了在其中表将被创建的另一个数据库的创建。当然，用户必须有创建此数据库的权限。
- en: Finally, the **SQL execution** choice permits to directly execute the stored
    statements in the current database. However, a warning message is issued as these
    statements might reflect an older state of the table; we might not want to revert
    to this old state. Also, the first statement is, by default, a `DROP TABLE`, which
    may or may not succeed depending on whether some foreign key constraint blocks
    the deletion of the table.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，**SQL执行**选项允许直接执行当前数据库中存储的语句。但是，由于这些语句可能反映表的旧状态，因此会发出警告消息；我们可能不想恢复到这个旧状态。此外，默认情况下，第一个语句是`DROP
    TABLE`，这取决于是否有外键约束阻止删除表。
- en: Creating a new version
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个新版本
- en: As previously discussed, we can decide to mark a new milestone for a certain
    table; in other words, we can start a new version. We will now create a new version
    as an exercise.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们可以决定为某个表标记一个新的里程碑；换句话说，我们可以开始一个新版本。现在我们将创建一个新版本作为练习。
- en: 'In the **Tracking** panel for the `author` table, we see the dialog for creating
    **version 2** (as the highest one is currently version 1):'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在`author`表的**跟踪**面板中，我们看到了创建**版本2**的对话框（因为最高的是当前版本1）：
- en: '![Creating a new version](img/7782_18_10.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![创建一个新版本](img/7782_18_10.jpg)'
- en: 'We notice that each version can track its own set of statements; versions are
    independent from each other in this matter. Here, we have decided that version
    2 will track only data-definition statements. We now see something interesting
    relative to the status of these versions, as shown in the following screenshot:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们注意到每个版本可以跟踪自己的一组语句；在这方面，版本是彼此独立的。在这里，我们决定版本2将仅跟踪数据定义语句。现在我们看到了与这些版本的状态相关的一些有趣的东西，如下面的屏幕截图所示：
- en: '![Creating a new version](img/7782_18_11.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![创建一个新版本](img/7782_18_11.jpg)'
- en: Indeed, version 1 was automatically marked as **not active**; it went into some
    kind of historical status. We can also have a look at version 2's snapshot, which
    reflects that the **name** column is a **VARCHAR(40)**.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，版本1被自动标记为**不活跃**；它进入了某种历史状态。我们还可以查看版本2的快照，其中反映了**name**列是**VARCHAR(40)**。
- en: Quickly accessing tracking information
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速访问跟踪信息
- en: When we are in the **Tracking** panel for one table, a shortcut dialog allows
    us to go directly to the **Tracking** panel of any other tracked table.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在一个表的**跟踪**面板中时，一个快捷对话框允许我们直接转到任何其他已跟踪表的**跟踪**面板。
- en: 'To explore this feature, let us now create version 1 of the `book` table. After
    this is done, we examine the drop-down list next to **Show versions** button,
    as shown in the following screenshot:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 为了探索这个功能，让我们现在创建`book`表的版本1。完成后，我们检查**显示版本**按钮旁边的下拉列表，如下面的屏幕截图所示：
- en: '![Quickly accessing tracking information](img/7782_18_12.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![快速访问跟踪信息](img/7782_18_12.jpg)'
- en: This list is similar to what we would see in the **Tracking** panel for database
    `marc_book` when looking at the **Tracked tables** portion, but without the need
    to go back to this panel.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这个列表与查看**跟踪**面板中数据库`marc_book`的**已跟踪表**部分时所看到的类似，但无需返回到此面板。
- en: Deleting tracking information
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除跟踪信息
- en: A feature of the tracking system that might not be evident is that tracking
    information for all versions of a table, and thus for its whole lifespan, is still
    kept when the corresponding table is dropped. The reason is to keep the history
    information intact should we happen to create a table with the same name later
    on.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪系统的一个特性可能不明显的是，当相应的表被删除时，表的所有版本以及其整个生命周期的跟踪信息仍然保留。原因是保持历史信息完整，以防我们以后创建具有相同名称的表。
- en: Let us do a copy of the `author` table (refer to [Chapter 9](ch09.html "Chapter 9. Performing
    Table and Database Operations") if needed), and name it `author_copy`. We then
    activate tracking on this new table. The last operation is to drop this `author_copy`
    table. Even if we no longer see it in the normal list of tables, it's different
    in the **Tracking** panel for database `marc_book`.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们复制`author`表（如果需要，请参阅[第9章](ch09.html "第9章。执行表和数据库操作")），并将其命名为`author_copy`。然后我们在这个新表上激活跟踪。最后一个操作是删除`author_copy`表。即使我们在正常的表列表中不再看到它，在数据库`marc_book`的**跟踪**面板中却不同。
- en: '![Deleting tracking information](img/7782_18_13.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![删除跟踪信息](img/7782_18_13.jpg)'
- en: At this point we can go back in time, sort of, and see the tracking report and
    snapshot for the versions of this deleted table. If we really want to remove all
    evidence of the table ever having existed, then we can use the **Drop** link to
    destroy the tracking data also (after clicking on **OK** in the subsequent confirmation
    panel).
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们可以回到过去，看看已删除表的版本的跟踪报告和快照。如果我们真的想要删除表曾经存在的所有证据，那么我们可以使用**删除**链接来销毁跟踪数据（在随后的确认面板中单击**确定**后）。
- en: Summary
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we saw an overview of the benefits given by the statements'
    tracking feature, and then we covered all of the panels involved in the creation
    and maintenance of versions for tables.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们概述了语句跟踪功能所带来的好处，然后介绍了用于创建和维护表版本的所有面板。
- en: The next chapter covers administration of a MySQL server, focusing on the management
    of user accounts and privileges.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将涵盖MySQL服务器的管理，重点是管理用户帐户和权限。
