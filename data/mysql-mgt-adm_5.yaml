- en: Chapter 5. Database Maintenance and Security Management
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章 数据库维护和安全管理
- en: MySQL is one of the most popular database platforms, very widely used for powering
    database-driven websites on the Internet and often used by web applications programmed
    in PHP. MySQL offers features, such as high performance, ease-of-use, and easy
    installation, yet a very efficient security mechanism. However, prior to Version
    5.5, the fact that the default installation of MySQL came with a user named **root**
    with no password, presents a rather worrying security vulnerability.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL是最流行的数据库平台之一，被广泛用于驱动互联网上的数据库驱动网站，并经常被用于用PHP编程的Web应用程序。MySQL提供了高性能、易用性和简单安装等功能，但是在5.5版本之前，MySQL的默认安装带有一个名为**root**的用户，没有密码，这带来了一个相当令人担忧的安全漏洞。
- en: While MySQL 5.5 and later versions require some basic configuration that includes
    certain security measures with no limitation to setting a password for the **root**
    user right after installation, a preliminary action must be taken after a fresh
    installation of MySQL 5.1, by setting a password for the **root** user as early
    as possible. Navicat does not only make it very easy to make such configurations
    easy to manage, but it also provides a few useful tools for security management
    and database maintenance.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 5.5及更高版本需要一些基本配置，包括某些安全措施，不限于在安装后立即为**root**用户设置密码，而MySQL 5.1的新安装必须在尽早的时候为**root**用户设置密码。Navicat不仅使这些配置易于管理，而且还提供了一些有用的安全管理和数据库维护工具。
- en: 'This chapter focuses on basic **database administrator** (**DBA**) functions
    regarding the security and maintenance of MySQL using Navicat. By the end of this
    chapter, you should be able to master how to do the following in Navicat, for
    MySQL:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点介绍使用Navicat进行MySQL的基本**数据库管理员**（**DBA**）功能，涉及安全和维护。通过本章结束时，您应该能够掌握在Navicat中为MySQL执行以下操作：
- en: Create and edit MySQL users
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和编辑MySQL用户
- en: Manage user privileges
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理用户权限
- en: Perform maintenance tasks, such as database analysis, optimization, and repairs
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行维护任务，如数据库分析、优化和修复
- en: User and privilege management with Navicat
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Navicat进行用户和权限管理
- en: The first topic in MySQL database security is user and privilege management.
    The second button on the toolbar with icons in Navicat's main window is the **User**
    button. Activating it will display a list of users in the object pane. All the
    users that belong to the selected MySQL server in the connections pane are on
    the left-hand side of the screen.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL数据库安全的第一个主题是用户和权限管理。在Navicat主窗口中带有图标的工具栏上的第二个按钮是**用户**按钮。激活它将在对象窗格中显示属于连接窗格中所选MySQL服务器的所有用户。所有属于屏幕左侧的选定MySQL服务器的用户都在屏幕左侧。
- en: 'Adding, editing, duplicating, and deleting users is the same as managing any
    other database object in Navicat, so have a quick look back if you find yourself
    lost. The following screenshot shows all the users that belong to the selected
    MySQL server:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 添加、编辑、复制和删除用户与在Navicat中管理任何其他数据库对象一样，所以如果您感到迷失，请快速回顾一下。以下截图显示了所有属于选定MySQL服务器的用户：
- en: '![User and privilege management with Navicat](img/7461EN_05_01.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![使用Navicat进行用户和权限管理](img/7461EN_05_01.jpg)'
- en: The secondary toolbar related to the user management context, in the Windows
    version of Navicat, explicitly showcases the utility buttons for editing an existing
    user, adding a new one, and deleting an existing one, besides which you will also
    notice a different button with a lock icon titled **Privilege Manager**. The **Privilege
    Manager** button was introduced in Navicat as of Version 10, and it is like a
    command central, where you can manage all users for all schemas, and a matrix
    of all privileges for an entire server, or for specific catalogs (databases) from
    within a single window.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 与用户管理上下文相关的次要工具栏，在Navicat的Windows版本中，明确展示了用于编辑现有用户、添加新用户和删除现有用户的实用按钮，此外，您还会注意到一个带有锁图标的不同按钮，名为**权限管理器**。**权限管理器**按钮是在Navicat的第10版中引入的，它就像一个命令中心，您可以在其中管理所有模式的所有用户，并在单个窗口内查看整个服务器的所有权限矩阵，或者特定目录（数据库）的所有权限。
- en: 'On the Mac version of Navicat, the interface is quite different as there''s
    no secondary toolbar under the main one; instead, you can use the small icons
    (with plus, minus, and pencil-shaped icons) at the bottom side of the window to
    create, edit, and delete users. As for the **Privilege Manager** button, you need
    to select the command **Set Privileges...** from either the **Connection** menu
    (when a server is selected in the connections pane) or the **Database** menu (which
    replaces the **Connection** menu when a database under a server is selected) from
    the menu bar. The following screenshot shows the list of users in the Mac platform:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在Navicat的Mac版本中，界面是完全不同的，因为主窗口下面没有次要工具栏；相反，您可以使用窗口底部的小图标（带有加号、减号和铅笔形状图标）来创建、编辑和删除用户。至于**权限管理器**按钮，您需要从菜单栏中的**连接**菜单（在连接窗格中选择服务器时）或**数据库**菜单（在选择服务器下的数据库时替换**连接**菜单）中选择**设置权限...**命令。以下截图显示了Mac平台上的用户列表：
- en: '![User and privilege management with Navicat](img/7461EN_05_02.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![使用Navicat进行用户和权限管理](img/7461EN_05_02.jpg)'
- en: The **Privilege Manager** button gives an under-the-hood view of all the connections
    to the defined servers, all the databases that they have, and all kinds of privileges
    that are defined and set for all of the users that exist in them.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**权限管理器**按钮提供了对定义的服务器的所有连接、它们拥有的所有数据库以及为它们存在的所有用户定义和设置的各种权限的底层视图。'
- en: It might seem a bit complicated at first, as it is meant to control everything
    related to a privilege from one place. However, it is not necessarily the only
    means for managing the privileges. In the later section, you will see how to set
    them up step by step for a given user. In fact, the **Privilege Manager** button
    capitulates in a single interface what you will see about editing object privileges
    in the later section.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 起初可能会显得有些复杂，因为它旨在从一个地方控制与特权相关的一切。但这并不一定是管理权限的唯一手段。在后面的部分中，您将看到如何逐步为特定用户设置它们。事实上，“特权管理器”按钮在单个界面中概括了您将在后面部分中看到的有关编辑对象权限的内容。
- en: '![User and privilege management with Navicat](img/7461EN_05_03.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![使用Navicat进行用户和权限管理](img/7461EN_05_03.jpg)'
- en: In [Chapter 1](ch01.html "Chapter 1. Getting Started"), *Getting Started*, when
    setting up your first connection to a MySQL server, you also defined the settings
    for the **root** user. The root user is always listed in the object pane when
    you switch to the **User** view (unless deleted for a specific reason of course,
    and which should be a good one, I might add). An `@` symbol is added as a suffix
    to the username, which is proceeded by the name of the server that the user is
    permitted to connect from; in this case, the server name is `localhost`. If you
    want the **root** user to connect from remote machines, then you must add another
    user with the same name; in this case the username is **root**, but specify the
    domain name or the IP address of that remote machine in the field labeled **Host
    Name**. For example, you could see `myuser@workpc`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](ch01.html "第1章. 入门")，“入门”中，当您首次连接到MySQL服务器时，还定义了**root**用户的设置。**root**用户在切换到“用户”视图时始终显示在对象窗格中（除非出于特定原因被删除，当然，这应该是一个很好的原因，我可能会补充说明）。用户名后面添加了`@`符号，该符号后面是用户被允许连接的服务器名称；在这种情况下，服务器名称是`localhost`。如果您希望**root**用户从远程机器连接，那么您必须添加另一个具有相同名称的用户；在这种情况下，用户名是**root**，但在“主机名”字段中指定该远程机器的域名或IP地址。例如，您可以看到`myuser@workpc`。
- en: How MySQL deals with access privileges
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MySQL如何处理访问权限
- en: 'The following pieces of information are supplied in Navicat''s online manual
    for MySQL:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Navicat的在线手册提供了以下关于MySQL的信息：
- en: The primary function of the MySQL privilege system is to authenticate a user
    that connects from a given host and to associate that user with privileges on
    a database, such as SELECT, INSERT, UPDATE, and DELETE.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL权限系统的主要功能是对连接到给定主机的用户进行身份验证，并将该用户与数据库上的特权（如SELECT、INSERT、UPDATE和DELETE）关联起来。
- en: Information about user privileges is stored in the **user**, **db**, **host**,
    **tables_priv**, **columns_priv**, and **procs_priv** tables in the database named
    **mysql**. The MySQL server reads the contents of these tables when it starts.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关用户权限的信息存储在名为**mysql**的数据库中的**user**、**db**、**host**、**tables_priv**、**columns_priv**和**procs_priv**表中。MySQL服务器在启动时读取这些表的内容。
- en: 'MySQL access control involves two stages when you run a client program that
    connects to the server, in this case Navicat:'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL访问控制在运行连接到服务器的客户端程序时涉及两个阶段，即Navicat：
- en: 'Stage 1: The server checks whether it should allow you to connect.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阶段1：服务器检查是否应允许您连接。
- en: 'Stage 2: Assuming that you can connect, the server checks each statement you
    issue to determine whether you have sufficient privileges to perform it. For example,
    the Create table privilege, the Drop table privilege, or the Alter table privilege.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阶段2：假设您可以连接，服务器将检查您发出的每个语句，以确定您是否具有足够的权限执行它。例如，创建表权限、删除表权限或修改表权限。
- en: The server uses the **user**, **db**, and **host** tables in the **mysql** database
    at both stages of access control.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器在访问控制的两个阶段都使用mysql数据库中的user、db和host表。
- en: Diving deep into creating and editing a user in Navicat
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 深入了解在Navicat中创建和编辑用户
- en: Navicat's user designer provides the flexibility to grant or revoke server privileges
    to and from any user, as well as adopting a selective approach, so as to manage
    privileges individually on specific databases, tables, views (even individual
    fields), functions, and procedures.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Navicat的用户设计工具提供了灵活性，可以向任何用户授予或撤销服务器权限，并采用选择性方法，以便在特定数据库、表、视图（甚至单个字段）、函数和过程上单独管理权限。
- en: As with any other object, in order to create and edit a user in Navicat, you
    can use the related toolbar buttons (described in the previous section) or right-click
    on the user list to select the necessary action, **Add User**, **Edit User**,
    or **Delete User**, from a pop-up menu.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 与任何其他对象一样，为了在Navicat中创建和编辑用户，您可以使用相关的工具栏按钮（在前一节中描述），或者右键单击用户列表以从弹出菜单中选择必要的操作，“添加用户”、“编辑用户”或“删除用户”。
- en: In the user editor window that opens, it's perhaps needless to say that you
    have to fill in the basic user properties like the **User Name**, **Host**, and
    **Password** under the **General** tab.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在打开的用户编辑窗口中，您必须在“常规”选项卡下填写基本用户属性，如“用户名”、“主机”和“密码”。
- en: When done, you can switch to the **Advanced** tab, where you can specify the
    number (limit) of queries and connections allocated to the user per hour. All
    the values are set to **0(default)**, which in this case means unlimited.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，您可以切换到“高级”选项卡，在那里您可以指定每小时为用户分配的查询和连接数量（限制）。所有值都设置为0（默认），在这种情况下意味着无限制。
- en: 'You want to check the **Use OLD_PASSWORD encryption** option to set passwords
    for any pre-4.1 clients for MySQL that need to connect to the MySQL server(s)
    of Version 4.1 or later. Otherwise, the server will generate long password hashes.
    The option does not affect authentication (MySQL 4.1 and later can still use accounts
    that have long password hashes), but it does prevent creation of a long password
    hash in the user table as the result of a password-changing operation. The following
    is the screenshot of the **Advanced** tab:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要勾选**使用OLD_PASSWORD加密**选项，以为需要连接到4.1或更高版本的MySQL服务器的任何早于4.1的客户端设置密码。否则，服务器将生成长密码哈希。该选项不影响身份验证（MySQL
    4.1及更高版本仍然可以使用具有长密码哈希的帐户），但它确实防止了在用户表中创建长密码哈希作为更改密码操作的结果。以下是**高级**选项卡的屏幕截图：
- en: '![Diving deep into creating and editing a user in Navicat](img/7461EN_05_04.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![深入了解在Navicat中创建和编辑用户](img/7461EN_05_04.jpg)'
- en: The SSL pane lets you specify SSL-related options, such as the authentication
    type and the certificate attributes. For more information on configuring SSL options,
    you can refer to the online manual of Navicat. The related section is under **Server
    Security Management** | **MySQL Security Management** | **MySQL User Designer**
    | **Setting Advanced MySQL Properties**.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: SSL窗格允许您指定与SSL相关的选项，例如身份验证类型和证书属性。有关配置SSL选项的更多信息，您可以参考Navicat的在线手册。相关部分位于**服务器安全管理**
    | **MySQL安全管理** | **MySQL用户设计** | **设置高级MySQL属性**下。
- en: The **Server Privileges** tab is where you can grant server-wide privileges
    to the user, who then applies to all the databases on that server. Once granted,
    the user will have the same defined permissions on all of the databases on the
    server. As the privileges list is in alphabetical order, all you need to do is
    to check or uncheck the tiny box corresponding to the list item in the second
    column. When you edit the **root** user, you will notice that all the privileges
    will appear as checked. To select (or unselect) all items from the list, right-click
    anywhere on the list where a pop-up menu presents the **Grant All** and **Revoke
    All** commands.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**服务器权限**选项卡是您可以向用户授予服务器范围的权限，然后应用于该服务器上的所有数据库的地方。一旦授予，用户将在服务器上的所有数据库上具有相同的定义权限。由于权限列表按字母顺序排列，您只需在第二列中的列表项对应的小框中选中或取消选中。当您编辑**root**用户时，您会注意到所有权限都将显示为已选中。要选择（或取消选择）列表中的所有项目，请右键单击列表中的任何位置，弹出菜单中显示**授予所有**和**撤销所有**命令。'
- en: 'In Mac, under the **Object Privileges** tab, you can add individual privileges
    for any selected database object, be it the entire database itself, or a specific
    table, field, view, or procedure, as shown in the following screenshot:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在Mac中，在**对象权限**选项卡下，您可以为任何选定的数据库对象（无论是整个数据库本身还是特定表、字段、视图或过程）添加单独的权限，如下屏幕截图所示：
- en: '![Diving deep into creating and editing a user in Navicat](img/7461EN_05_05.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![深入了解在Navicat中创建和编辑用户](img/7461EN_05_05.jpg)'
- en: In Windows, click on the **Privileges** tab to add privileges.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows中，单击**权限**选项卡以添加权限。
- en: 'To edit the specific object privileges of the user, click on **Add Privilege**
    to open a secondary model window, and follow these steps:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要编辑用户的特定对象权限，请单击**添加权限**以打开次要模型窗口，并按照以下步骤操作：
- en: Expand the node(s) in the tree view displaying a hierarchy starting from the
    databases to the individual objects, such as tables and fields, until you reach
    the target object on which you want to define the privilege.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 展开树视图中的节点，显示从数据库到单个对象（如表和字段）的层次结构，直到达到您想要定义权限的目标对象。
- en: Check the object to show the privilege list on the right-hand pane.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 勾选对象以在右侧窗格上显示权限列表。
- en: On the list, check the **Grant** option against the permission type listed under
    the **Privilege** column to assign it to the user. Multiple privileges can be
    granted, of course.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在列表中，针对**权限**列下列出的权限类型，选中**授予**选项以分配给用户。当然可以授予多个权限。
- en: Click the **Add** button when youre done, and then remember to press the **Save**
    button (indicated with a floppy disk icon on the main toolbar of the user editor
    window).
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后单击**添加**按钮，然后记得按下用户编辑窗口主工具栏上的**保存**按钮（用软盘图标表示）。
- en: The **SQL Preview** tab generates the SQL commands, which need to be run on
    the server to grant or revoke the privileges, since last time that the permission
    settings were saved. So, these SQL commands are executed automatically after the
    **Save** button is hit.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**SQL预览**选项卡生成SQL命令，需要在服务器上运行以授予或撤销权限，自上次保存权限设置以来。因此，这些SQL命令在单击**保存**按钮后会自动执行。'
- en: 'Here''s some example of SQL commands generated by editing the privileges:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是编辑权限生成的SQL命令的一些示例：
- en: '[PRE0]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Performing maintenance tasks with Navicat
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Navicat执行维护任务
- en: 'Navicat provides a set of graphical tools for database and table maintenance
    tasks, which are in fact native MySQL services. Toward this end, Navicat supports
    four major tasks, which can be performed on MySQL database tables:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: Navicat提供了一组用于数据库和表维护任务的图形工具，实际上是本机MySQL服务。为此，Navicat支持可以在MySQL数据库表上执行的四个主要任务：
- en: Analysis
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析
- en: Check
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查
- en: Optimization
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化
- en: Repairs
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维修
- en: 'When this book was being authored, Navicat did not have a special menu (in
    the menu bar) or a button for triggering these tasks. Basically, you need to have
    switched to **Table** or **View** in Navicat''s main window and right-clicked
    on a table or view on which you want to perform one of these tasks. Then, from
    the pop-up menu select **Maintain**, and then select the related task as the sub-menu
    item. Now, let''s take a closer look at what these tasks are and what they are
    good for, as shown in the following screenshot:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写本书时，Navicat没有专门的菜单（在菜单栏中）或按钮来触发这些任务。基本上，您需要在Navicat的主窗口中切换到**表**或**视图**，然后右键单击要执行其中一个任务的表或视图。然后，从弹出菜单中选择**维护**，然后选择相关任务作为子菜单项。现在，让我们更仔细地看看这些任务是什么，以及它们有什么用处，如下屏幕截图所示：
- en: '![Performing maintenance tasks with Navicat](img/7461EN_05_06.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![使用Navicat执行维护任务](img/7461EN_05_06.jpg)'
- en: Analyzing a MySQL table or view with Navicat
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Navicat分析MySQL表或视图
- en: The **Analyze Table** command analyzes and stores the key distribution for the
    selected table. MySQL uses the stored key distribution to decide in which order
    the tables should be joined.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**分析表**命令分析并存储所选表的关键分布。MySQL使用存储的关键分布来决定表应该以何种顺序连接。'
- en: When an analysis is started, the table is locked with a read lock if the table
    has MyISAM or BDB as the underlying database engine. In the case of InnoDB, the
    table is locked with a write lock. Currently, MySQL supports analysis only for
    MyISAM, BDB, and InnoDB tables. For MyISAM tables, this action is the equivalent
    of running the command `myisamchk --analyze`.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 当分析开始时，如果表的底层数据库引擎是MyISAM或BDB，则使用读锁定表。在InnoDB的情况下，使用写锁定表。目前，MySQL仅支持对MyISAM，BDB和InnoDB表进行分析。对于MyISAM表，此操作相当于运行命令`myisamchk
    --analyze`。
- en: Checking a table or view
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查表或视图
- en: This maintenance task checks a table for errors. When this book was being written,
    MySQL supported the checking of only MyISAM, InnoDB, and ARCHIVE tables. When
    MyISAM tables are checked, their key statistics are also updated.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 此维护任务检查表中的错误。在撰写本书时，MySQL仅支持对MyISAM，InnoDB和ARCHIVE表进行检查。检查MyISAM表时，它们的关键统计信息也会更新。
- en: 'Additional options for checking are summarized in the table below:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是检查的其他选项的摘要：
- en: '| Options | Functions |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 选项 | 功能 |'
- en: '| --- | --- |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| **Quick** | Does not scan the rows to check for incorrect links. This applies
    to InnoDB and MyISAM tables and views. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| **快速** | 不扫描行以检查不正确的链接。适用于InnoDB和MyISAM表和视图。 |'
- en: '| **Fast** | Checks only those tables that have not been closed properly. This
    applies only to MyISAM tables and views. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| **快速** | 仅检查那些未正确关闭的表。仅适用于MyISAM表和视图。 |'
- en: '| **Changed** | Checks only those tables that have been changed since the last
    check or that have not been closed properly. This applies only to MyISAM tables
    and views. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| **更改** | 仅检查自上次检查以来已更改或未正确关闭的表。仅适用于MyISAM表和视图。 |'
- en: '| **Extended** | Does a full key lookup for all the keys for each row. This
    ensures that the table is 100 percent consistent, but takes a long time. It applies
    only to MyISAM tables and views. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| **扩展** | 对每一行的所有键进行完整的键查找。这确保表是100％一致的，但需要很长时间。仅适用于MyISAM表和视图。 |'
- en: Optimization made easy
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优化变得简单
- en: The main reason for optimizing your table is to reclaim unused space and defragment
    the datafile associated with the table. You should optimize a table if you have
    deleted a considerable number of rows from that table or frequently updated a
    table with variable-length rows (tables with `varchar`, `blob`, or `text` fields).
    Thanks to the task of optimization, deleted records are maintained in a linked
    list, and subsequent `INSERT` operations reuse old row positions.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 优化表的主要原因是回收未使用的空间并整理与表相关的数据文件。如果您从表中删除了大量行或经常更新具有可变长度行的表（具有`varchar`，`blob`或`text`字段的表），则应优化表。由于优化任务，删除的记录将保留在链接列表中，并且随后的`INSERT`操作将重用旧的行位置。
- en: MySQL supported optimization only for MyISAM, InnoDB, and BDB tables when this
    book was being written.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，MySQL仅支持对MyISAM，InnoDB和BDB表进行优化。
- en: 'For MyISAM tables, table optimization works as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 对于MyISAM表，表优化的工作如下：
- en: If the table has deleted or split rows, repair the table
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果表中有已删除或拆分的行，请修复表
- en: If the index pages are not sorted, sort them
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果索引页未排序，请对其进行排序
- en: If the tables statistics are not up-to-date (and the repair could not be accomplished
    by sorting the index), update them
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果表的统计信息不是最新的（并且无法通过对索引进行排序来修复），请更新它们
- en: Repairing a table
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修复表
- en: The title means what it says. If you suspect a table is corrupt or just not
    exactly in good working order, you can do **Repair Table**, and it just solves
    all of the problems in most cases. Repairs can be performed in two modes—**Quick**
    or **Extended**. A **Quick** repair only attempts to fix the index tree of a table.
    In the extended mode, MySQL creates the index row by row, instead of creating
    one index at a time.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 标题的意思就是字面意思。如果您怀疑表格损坏或者工作状态不佳，您可以执行**修复表**，在大多数情况下它可以解决所有问题。修复可以以两种模式进行——**快速**或**扩展**。**快速**修复仅尝试修复表的索引树。在扩展模式下，MySQL逐行创建索引，而不是一次创建一个索引。
- en: Summary
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: You have just made it to the end of this chapter. By now, you should be able
    to create, edit, and delete users in Navicat, assign them server-wide privileges,
    and even define individual privileges for specific database objects and assign
    them for a given user.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经到达本章的末尾。到目前为止，您应该能够在Navicat中创建，编辑和删除用户，为他们分配服务器范围的特权，甚至为特定数据库对象定义个别特权，并为特定用户分配它们。
- en: When it comes to troubleshooting, you also now know what it takes to analyze
    and check what the error is with a MySQL table or view, and to make sure they
    are running okay. You also learned how to optimize and repair a MySQL table with
    Navicat's one-click maintenance tool.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在故障排除方面，您现在也知道如何分析和检查MySQL表或视图的错误，并确保它们正常运行。您还学会了如何使用Navicat的一键维护工具来优化和修复MySQL表。
