- en: MySQL 8 – Security
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL 8 - 安全性
- en: 'In previous chapters, we learned about the scalability of MySQL 8 and how to
    troubleshoot challenges when scaling MySQL 8\. Apart from that, we also learned
    how to make MySQL 8 highly available for use. Nowadays, security is important
    for any application, right? When we talk about security, it includes account management,
    roles, privileges, and more. Considering these aspects, we will cover all of these
    topics in this chapter. This chapter mainly focuses on MySQL 8 database security
    and its related features. The following topics are covered in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的章节中，我们学习了MySQL 8的可伸缩性以及在扩展MySQL 8时如何解决挑战。除此之外，我们还学习了如何使MySQL 8具有高可用性。现在，安全对于任何应用程序都很重要，对吧？当我们谈论安全时，它包括帐户管理、角色、权限等。考虑到这些方面，我们将在本章中涵盖所有这些主题。本章主要关注MySQL
    8数据库安全及其相关功能。本章涵盖以下主题：
- en: Overview of security for MySQL 8
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 8的安全概述
- en: Common security issues
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常见安全问题
- en: Access control in MySQL 8
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 8中的访问控制
- en: Account management in MySQL 8
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 8中的帐户管理
- en: Encryption in MySQL 8
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 8中的加密
- en: Security plugins
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全插件
- en: Overview of security for MySQL 8
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL 8的安全概述
- en: 'The term security is not bound to a specific topic; it covers a wide range
    of topics related to MySQL 8\. Before starting a detailed discussion on it, let''s
    mention some important points related to security:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 安全这个术语不局限于特定主题；它涵盖了与MySQL 8相关的各种主题。在开始对其进行详细讨论之前，让我们提到与安全相关的一些重要要点：
- en: Consider security within a database where users and their privileges related
    to various database objects need to manage.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 考虑数据库中的安全性，需要管理用户及其与各种数据库对象相关的权限。
- en: Password security for users.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户的密码安全。
- en: Security configuration during the installation process, which includes various
    types of files, such as log files, data files, and many more. These files must
    be protected for their read/write operations.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在安装过程中进行安全配置，包括各种类型的文件，如日志文件、数据文件等。这些文件必须受到保护，以防止读/写操作。
- en: To handle system level failure scenarios, you must have a backup and recovery
    plan. This includes all the required files, such as database files, configuration
    files, and many more.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为处理系统级故障场景，您必须拥有备份和恢复计划。这包括所有必需的文件，如数据库文件、配置文件等。
- en: Manage network security of the system where MySQL 8 was installed, which permits
    a limited number of hosts for the connection.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理安装了MySQL 8的系统的网络安全，允许有限数量的主机进行连接。
- en: Now your ride begins with another important and very interesting topic. Here
    we go.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您的旅程将开始另一个重要且非常有趣的主题。我们开始吧。
- en: Common security issues
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 常见安全问题
- en: Before going into detail on complex issues, you must first understand some basic
    points that will help you prevent misuse or attacks.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入讨论复杂问题之前，您必须首先了解一些基本要点，这将有助于防止滥用或攻击。
- en: General guidelines
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一般指南
- en: 'In MySQL 8, all connections, queries, and operations performed by the user
    are based on the **Access Control Lists** (**ACLs**) security. The following are
    some general guidelines related to security:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8中，用户执行的所有连接、查询和操作都基于**访问控制列表**（**ACLs**）安全。以下是与安全相关的一些一般指南：
- en: Don't allow access to the `user` table to any user except the root account.
    Manage user privileges with `GRANT` and `REVOKE` statements.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要允许任何用户访问`user`表，除了root帐户。使用`GRANT`和`REVOKE`语句管理用户权限。
- en: Use encrypted protocol, such as SSH or SSL, in the case of data transfer over
    the internet. MySQL 8 supports SSL connections for that.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在进行互联网数据传输时，使用加密协议，如SSH或SSL。MySQL 8支持SSL连接。
- en: Use proper defensive programming techniques at the time when the client is entering
    data into MySQL using an application.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在客户端使用应用程序将数据输入MySQL时，使用适当的防御性编程技术。
- en: Use a hashing function to store passwords into the MySQL 8 database; don't store
    plain text as a password. As the same way for password recovery consider some
    string as salt and use `hash(hash(password)+salt)` values.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用哈希函数将密码存储到MySQL 8数据库中；不要将明文存储为密码。对于密码恢复，考虑一些字符串作为盐，并使用`hash(hash(password)+salt)`值。
- en: Use a proper password policy to protect it from break down. This means your
    system should accept only those passwords which follow your rules/conventions.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用适当的密码策略来防止密码被破解。这意味着您的系统应该只接受符合您规则/约定的密码。
- en: Use of a firewall reduces the chance of failure by 50% and provides more protection
    to your system. Define MySQL under a demilitarized zone or behind a firewall to
    protect from distrusted hosts.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用防火墙可以减少50%的故障几率，并为您的系统提供更多保护。将MySQL定义在一个非军事区或防火墙后面，以防止来自不信任主机的攻击。
- en: 'The Linux based system provides the `tcpdump` command to perform tasks of transferring
    in a more secure way. This command works on the network layer to provide security.
    For example, using the following command, you can check whether MySQL data streams
    are encrypted or not:'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于Linux的系统提供了`tcpdump`命令，以更安全的方式执行传输任务。该命令在网络层上提供安全性。例如，使用以下命令，您可以检查MySQL数据流是否加密：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Guidelines for a secure password
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全密码的指南
- en: In this section, we describe guidelines for securing passwords with respect
    to different users and cover how to manage it during the logging process. MySQL
    8 provides the `validate_password` plugin to define the policy for acceptable
    passwords.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们描述了关于不同用户的密码安全的指南，并介绍了如何在登录过程中进行管理。MySQL 8提供了`validate_password`插件来定义可接受密码的策略。
- en: Guidelines for end users
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终用户的指南
- en: 'This section describes various methods to define your password, as an end user,
    in the safest way. It explains how to make your password more secure. The safest
    way is to define the password in a protected option file or prompt for the password
    in a client program. See the following different ways to define your password:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了定义密码的各种方法，作为最终用户，以最安全的方式。它解释了如何使您的密码更安全。最安全的方法是在受保护的选项文件中定义密码，或在客户端程序中提示输入密码。请参阅以下不同的定义密码的方式：
- en: 'Provide the password using the command line with the following options:'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用以下选项在命令行中提供密码：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In the preceding two commands, you have to specify your password in the command
    line itself, which is not preferable. MySQL 8 provides another secure way to connect
    with the command line for that. Execute the following command, which will prompt
    you for the password. Once you enter the password, MySQL shows the asterisk (`*`)
    sign for each password character:'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在前两个命令中，您必须在命令行中指定密码，这是不可取的。MySQL 8提供了另一种安全的连接方式。执行以下命令，它将提示您输入密码。一旦输入密码，MySQL会为每个密码字符显示星号（`*`）：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This is a more secure way than the previous two, where you define the password
    in the command-line argument:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这比前两种方法更安全，前两种方法中，您在命令行参数中定义密码：
- en: Use the `MYSQL_PWD` environment variable to define your password. This method
    is insecure as compared to other methods because there is a possibility that the
    environment variable is accessible by the other users.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`MYSQL_PWD`环境变量来定义您的密码。与其他方法相比，这种方法是不安全的，因为环境变量可能被其他用户访问。
- en: Define the password using the `mysql_config_editor` utility, which is a provided
    option to store the password into an encrypted login path file, named `named.mylogin.cnf`.
    MySQL 8 will use this file later to connect with the MySQL server.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`mysql_config_editor`实用程序定义密码，这是一种提供的选项，用于将密码存储到加密的登录路径文件中，命名为`named.mylogin.cnf`。
    MySQL 8稍后将使用此文件与MySQL服务器连接。
- en: 'Use the option file to store your password. When you define your credentials
    into the file, make sure this file is not accessible by any other user. For example,
    in a UNIX-based system, you define the password in the option file under the client
    section as follows:'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用选项文件存储密码。在将凭据定义到文件中时，请确保其他用户无法访问该文件。例如，在基于UNIX的系统中，您可以在客户端部分的选项文件中定义密码，如下所示：
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To make your file safe or to set an access mode on it, execute the following
    command:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要使文件安全或设置其访问模式，请执行以下命令：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Guidelines for administrators
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理员指南
- en: 'For a database administrator, the following guidelines should be followed to
    secure passwords:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数据库管理员，应遵循以下准则来保护密码：
- en: Use `validate_password` to apply the policy on accepted passwords
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`validate_password`来对接受的密码应用策略
- en: MySQL 8 uses the `mysql.user` table to store user passwords, so configure the
    system in a way that only administrative users can access this table
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 8使用`mysql.user`表来存储用户密码，因此配置系统以使只有管理员用户可以访问此表
- en: Users should be allowed to reset account passwords in the case of expired passwords
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户应该被允许在密码过期的情况下重置帐户密码
- en: Apply protection on the log file if it contains passwords
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果日志文件包含密码，请对其进行保护
- en: Manage access to the plugin directory and the `my.cnf` file, because it can
    modify capabilities provided by the plugins
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理对插件目录和`my.cnf`文件的访问，因为它可以修改插件提供的功能
- en: Password and logging
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 密码和日志记录
- en: MySQL 8 allows you to write passwords as plain text in SQL statements, such
    as `CREATE USER`, `SET PASSWORD`, and `GRANT`. If we execute these statements,
    MySQL 8 will write passwords as text in log files, and they are visible to all
    the users that have access to the log files. To overcome this problem, avoid direct
    updates on grant tables using the mentioned SQL statements.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8允许您在SQL语句中以纯文本形式编写密码，例如`CREATE USER`，`SET PASSWORD`和`GRANT`。如果我们执行这些语句，MySQL
    8将密码以文本形式写入日志文件，并且所有可以访问日志文件的用户都可以看到。为了解决这个问题，避免使用上述SQL语句直接更新授权表。
- en: Secure MYSQL 8 against attackers
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护MYSQL 8免受攻击
- en: 'To secure MySQL 8 against attackers, strongly consider the following points:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保护MySQL 8免受攻击，请强烈考虑以下几点：
- en: Set a password for all MySQL accounts. Never define an account with no password,
    because this permits access to your account by any user.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为所有MySQL帐户设置密码。永远不要定义没有密码的帐户，因为这允许任何用户访问您的帐户。
- en: To make a connection with MySQL 8, use secure protocols/channels, such as compressed
    protocols, MySQL 8 internal SSL connections, or SSH for encrypted TCP/IP connections.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与MySQL 8建立连接时，使用安全协议/通道，例如压缩协议，MySQL 8内部SSL连接或用于加密TCP/IP连接的SSH。
- en: For a Unix-based system, set read/write privileges on the data directory for
    the Unix account which is used for running `mysqld`. Don't use the root user to
    start the MySQL 8 server.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于基于Unix的系统，为运行`mysqld`的Unix帐户设置数据目录的读/写权限。不要使用root用户启动MySQL 8服务器。
- en: Use the `secure_file_priv` variable to specify the directory for read and write
    permission. Using this variable, you can restrict non-administrative users from
    accessing important directories. Use this variable to set permissions on `plugin_dir`;
    it is very important. In the same way, do not provide `FILE` privileges to all
    the users, because it permits users to write files anywhere in the system.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`secure_file_priv`变量指定读写权限的目录。使用此变量，您可以限制非管理员用户访问重要目录。使用此变量设置`plugin_dir`的权限非常重要。同样，不要向所有用户提供`FILE`权限，因为这允许用户在系统中的任何位置写文件。
- en: Use the `max_user_connections` variable to restrict the number of connections
    per account.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`max_user_connections`变量限制每个帐户的连接数。
- en: At the time of creating grant table entries, use wildcards properly. It is preferable
    to use IPs instead of DNS.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在创建授权表条目时，正确使用通配符。最好使用IP而不是DNS。
- en: Follow security guidelines during stored program and view creation.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在存储过程和视图创建期间遵循安全准则。
- en: Security options and variables provided by MySQL 8
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL 8提供的安全选项和变量
- en: 'The following `mysqld` options and variables are provided by MySQL 8 for security:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8提供了以下选项和变量以确保安全：
- en: '| **Name** | **Cmd-Line** | **Option File** | **System Var** | **Status Var**
    | **Var Scope** | **Dynamic** |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **命令行** | **选项文件** | **系统变量** | **状态变量** | **变量范围** | **动态** |'
- en: '| `allow-suspicious-udfs` | Yes | Yes |   |   |   |   |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| `allow-suspicious-udfs` | 是 | 是 |   |   |   |   |'
- en: '| `automatic_sp_privileges` |   |   | Yes |   | Global | Yes |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| `automatic_sp_privileges` |   |   | 是 |   | 全局 | 是 |'
- en: '| `chroot` | Yes | Yes |   |   |   |   |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '- `chroot` | 是 | 是 |   |   |   |   |'
- en: '| `des-key-file` | Yes | Yes |   |   |   |   |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '- `des-key-file` | 是 | 是 |   |   |   |   |'
- en: '| `local_infile` |   |   | Yes |   | Global | Yes |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '- `local_infile` |   |   | 是 |   | 全局 | 是 |'
- en: '| `old_passwords` |   |   | Yes |   | Both | Yes |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '- `old_passwords` |   |   | 是 |   | 两者 | 是 |'
- en: '| `safe-user-create` | Yes | Yes |   |   |   |   |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '- `safe-user-create` | 是 | 是 |   |   |   |   |'
- en: '| `secure-auth` | Yes | Yes |   |   | Global | Yes |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '- `secure-auth` | 是 | 是 |   |   | 全局 | 是 |'
- en: '| `- Variable: secure_auth` |   |   | Yes |   | Global | Yes |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '- `- 变量：secure_auth` |   |   | 是 |   | 全局 | 是 |'
- en: '| `secure-file-priv` | Yes | Yes |   |   | Global | No |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '- `secure-file-priv` | 是 | 是 |   |   | 全局 | 否 |'
- en: '| `- Variable: secure_file_priv` |   |   | Yes |   | Global | No |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '- `- 变量：secure_file_priv` |   |   | 是 |   | 全局 | 否 |'
- en: '| `skip-grant-tables` | Yes | Yes |   |   |   |   |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '- `skip-grant-tables` | 是 | 是 |   |   |   |   |'
- en: '| `skip-name-resolve` | Yes | Yes |   |   | Global | No |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '- `skip-name-resolve` | 是 | 是 |   |   | 全局 | 否 |'
- en: '| `- Variable: skip_name_resolve` |   |   | Yes |   | Global | No |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '- `- 变量：skip_name_resolve` |   |   | 是 |   | 全局 | 否 |'
- en: '| `skip-networking` | Yes | Yes |   |   | Global | No |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '- `skip-networking` | 是 | 是 |   |   | 全局 | 否 |'
- en: '| `- Variable: skip_networking` |   |   | Yes |   | Global | No |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '- `- 变量：skip_networking` |   |   | 是 |   | 全局 | 否 |'
- en: '| `skip-show-database` | Yes | Yes |   |   | Global | No |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '- `skip-show-database` | 是 | 是 |   |   | 全局 | 否 |'
- en: '| `- Variable: skip_show_database` |   |   | Yes |   | Global | No |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '- `- 变量：skip_show_database` |   |   | 是 |   | 全局 | 否 |'
- en: Reference: [https://dev.mysql.com/doc/refman/8.0/en/security-options.html](https://dev.mysql.com/doc/refman/8.0/en/security-options.html)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 参考：[https://dev.mysql.com/doc/refman/8.0/en/security-options.html](https://dev.mysql.com/doc/refman/8.0/en/security-options.html)
- en: Security guidelines for client programming
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户端编程的安全指南
- en: 'Don''t trust any data entered by the application user, because there is the
    possibility that the user has entered a `drop` or `delete` statement for the MySQL
    database. So, there is always the risk of security leaks and data loss. As an
    administrator of a MySQL database, the following checklist should be followed:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 不要相信应用程序用户输入的任何数据，因为用户有可能输入了针对MySQL数据库的`drop`或`delete`语句。因此，存在安全漏洞和数据丢失的风险。作为MySQL数据库的管理员，应遵循以下检查表：
- en: The size of the data must be checked before passing it to MySQL 8.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在将数据传递给MySQL 8之前，必须检查数据的大小。
- en: To make MySQL 8 more restrictive, enable the strict MySQL mode.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为使MySQL 8更加严格，启用严格的MySQL模式。
- en: For numeric fields, enter characters, special characters, and spaces instead
    of numeric itself. Change field values to their original forms by your application
    before sending them to the MySQL 8 server.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于数字字段，应输入字符、特殊字符和空格，而不是数字本身。在将字段值发送到MySQL 8服务器之前，通过应用程序将其更改为原始形式。
- en: Use two different users for application connection to the database and for database
    administration.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用两个不同的用户进行应用程序连接到数据库和数据库管理。
- en: Modify datatypes from numeric to character types by adding quotes in the case
    of dynamic URLs and web forms. Also add %22 ("), %23 (#), and %27 (') in dynamic
    URLs.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在动态URL和Web表单的情况下将数据类型从数字更改为字符类型并添加引号来修改数据类型。还在动态URL中添加%22（"）、%23（#）和%27（'）。
- en: Previously defined functionalities are available built in to all of the programming
    interfaces. For example, Java JDBC provides prepared statements with placeholders,
    and Ruby DBI provides the `quote()` method.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 先前定义的功能内置于所有编程接口中。例如，Java JDBC提供带占位符的预编译语句，Ruby DBI提供`quote()`方法。
- en: Access control in MySQL 8
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL 8中的访问控制
- en: 'Privileges are mainly used to authenticate users and will verify user credentials
    and check if a user is allowed for the requested operation or not. When we connect
    with the MySQL 8 server, it will first check the identity of the user by the provided
    host and user name. After connection, when a request comes in, the system will
    grant privileges according to the user''s identity. Based on this understanding,
    we can say that access control contains two stages when we try to connect with
    the MySQL 8 server using the client program:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 特权主要用于验证用户并验证用户凭据，检查用户是否被允许进行请求的操作。当我们连接到MySQL 8服务器时，它将首先通过提供的主机和用户名检查用户的身份。连接后，当请求到来时，系统将根据用户的身份授予特权。基于这一理解，我们可以说在使用客户端程序连接到MySQL
    8服务器时，访问控制包含两个阶段：
- en: '**Stage 1**: The MySQL server will either accept or reject the connection,
    based on the provided identity'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**阶段1**：MySQL服务器将根据提供的身份接受或拒绝连接'
- en: '**Stage 2**: After getting a connection from the MySQL server, when the user
    sends a request for performing any operation, the server will check whether sufficient
    privileges are available for the user or not'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**阶段2**：从MySQL服务器获取连接后，当用户发送执行任何操作的请求时，服务器将检查用户是否具有足够的权限'
- en: 'There are some limitations of the MySQL 8 privilege system:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8特权系统存在一些限制：
- en: User is not allowed to set a password on specific objects, such as a table or
    a routine. MySQL 8 allows it globally at the account level.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不允许用户在特定对象（如表或例程）上设置密码。MySQL 8允许在账户级别全局设置密码。
- en: As an admin user, we cannot specify privileges in a way that create/drop table
    is allowed but create/drop database of that table is not allowed.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为管理员用户，我们不能以允许创建/删除表但不允许创建/删除该表的数据库的方式指定权限。
- en: 'You are not allowed to restrict user access explicitly, which means that explicitly
    matching the user and refusing its connection is not possible. MySQL 8 manages
    the content of grant tables in memory, so in the case of `INSERT`, `UPDATE`, and
    `DELETE` statements, execution on grant tables requires the server to restart
    for effect. To avoid server restarts, MySQL has provided a command for flushing
    privileges. We can execute this command in three different ways:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 不允许显式限制用户访问，这意味着无法显式匹配用户并拒绝其连接。MySQL 8在内存中管理授予表的内容，因此在`INSERT`、`UPDATE`和`DELETE`语句的情况下，对授予表的执行需要服务器重新启动才能生效。为了避免服务器重新启动，MySQL提供了一个刷新权限的命令。我们可以以三种不同的方式执行此命令：
- en: By issuing `FLUSH PRIVILEGES`.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过发出`FLUSH PRIVILEGES`。
- en: Using `mysqladmin reload`.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`mysqladmin reload`。
- en: Using `mysqladmin flush-privileges`.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`mysqladmin flush-privileges`。
- en: 'When we reload grant tables, it will work as per the following mentioned points:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们重新加载授予表时，它将按照以下提到的要点工作：
- en: '**Table and column privileges**: Changes of these privileges will be available
    from the next client''s request'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表和列特权**：这些特权的更改将在下一个客户端请求中生效'
- en: '**Database privileges**: Changes of these privileges will be available the
    next time the client executes a `USE dbname` statement'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库特权**：这些特权的更改将在客户端执行`USE dbname`语句的下一次生效'
- en: '**Global privileges and passwords**: Changes of these privileges are unaffected
    for a connected client; it will be applicable from the subsequent connections'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全局特权和密码**：这些特权的更改对连接的客户端不受影响；它将适用于随后的连接'
- en: Privileges provided by MySQL 8
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL 8提供的特权
- en: 'Privileges define which operations are permissible to the user accounts. Based
    on the level of operation and the context in which it is applied, it will work.
    It is mainly classified as follows:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 特权定义了用户帐户可以执行哪些操作。根据操作的级别和应用的上下文，它将起作用。它主要分为以下几类：
- en: '**Database privileges**: Applied on the database, and all objects of the database
    within it. It can be granted to a single database or defined globally to apply
    on all databases.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库特权**：应用于数据库及其内的所有对象。它可以授予单个数据库，也可以全局定义以应用于所有数据库。'
- en: '**Administrative privileges**: It is defined at the global level, so not restricted
    to a single database. It enables users to manage operation of the MySQL 8 server.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理特权**：它在全局级别定义，因此不限于单个数据库。它使用户能够管理MySQL 8服务器的操作。'
- en: '**Database object''s privileges**: It is used to define privileges on the database
    objects, such as tables, views, indexes, and stored routines. It can be applied
    on a specific object of the database, can be applied on all objects of a given
    type in a database, or can be applied globally for all the objects of a given
    type in all databases.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库对象的特权**：用于定义对数据库对象（如表、视图、索引和存储例程）的特权。它可以应用于数据库的特定对象，可以应用于数据库中给定类型的所有对象，也可以全局应用于所有数据库中给定类型的所有对象。'
- en: 'MySQL 8 will store account privilege related information into grant tables
    and store the contents of these tables into memory upon server start-up for better
    performance. Privileges are further classified in terms of static and dynamic
    privileges:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8将帐户特权相关信息存储到授予表中，并在服务器启动时将这些表的内容存储到内存中，以提高性能。特权进一步分为静态和动态特权：
- en: '**Static privileges**: These are available built in with the server and cannot
    be unregistered. These privileges are always available for the user to be granted.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**静态特权**：这些特权内置于服务器中，无法注销。这些特权始终可供用户授予。'
- en: '**Dynamic privileges**: These privileges can be registered or unregistered
    at runtime. If privileges are not registered, then they are not available to be
    granted for user accounts.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**动态特权**：这些特权可以在运行时注册或注销。如果特权未注册，则不可供用户帐户授予。'
- en: Grant tables
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 授予表
- en: 'Grant tables contain information related to user accounts and granted privileges
    for that user. MySQL 8 automatically inserts data into these tables when we execute
    any account management statements in the database, such as `CREATE USER`, `GRANT`,
    and `REVOKE`. MySQL allows insert, update, or delete options on grant tables to
    the admin user, but it''s not a preferable approach. The following tables of the
    MySQL 8 database contain grant information:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 授予表包含与用户帐户和授予的特权相关的信息。当我们在数据库中执行任何帐户管理语句时，如`CREATE USER`，`GRANT`和`REVOKE`，MySQL
    8会自动将数据插入这些表中。MySQL允许管理员用户在授予表上进行插入、更新或删除操作，但这并不是一个理想的方法。MySQL 8数据库的以下表包含授予信息：
- en: '`user`: It contains details related to user accounts, global privileges, and
    other non-privilege columns'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user`：它包含与用户帐户、全局特权和其他非特权列相关的详细信息'
- en: '`password_history`: It contains history of password changes'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`password_history`：它包含密码更改的历史记录'
- en: '`columns_priv`: It contains column level privileges'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`columns_priv`：它包含列级特权'
- en: '`procs_priv`: It contains privileges related to stored procedures and functions'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`procs_priv`：它包含与存储过程和函数相关的特权'
- en: '`proxies_priv`: It contains privileges for proxy users'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`proxies_priv`：它包含代理用户的特权'
- en: '`tables_priv`: It contains table level privileges'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tables_priv`：它包含表级特权'
- en: '`global_grants`: It contains details related to dynamic global privileges assignments'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`global_grants`：它包含与动态全局特权分配相关的详细信息'
- en: '`role_edges`: It contains edges for role subgraphs'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`role_edges`：它包含角色子图的边缘'
- en: '`db`: It contains privileges at the database level'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`db`：它包含数据库级别的特权'
- en: '`default_roles`: It contains details related to default user roles'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`default_roles`：它包含与默认用户角色相关的详细信息'
- en: 'Grant tables contain scope and privilege columns:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 授予表包含范围和特权列：
- en: '**Scope column:** This column defines the scope of rows in the tables, which
    means the context under which the row applies.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**范围列**：此列定义表中行的范围，即行适用的上下文。'
- en: '**Privilege column:** This column indicates which operation is permitted to
    the user. The MySQL server combines information from the various grant tables
    to build a complete detail of a user''s privileges.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**特权列**：此列指示用户被允许执行哪些操作。MySQL服务器从各种授予表中合并信息，以构建用户特权的完整详细信息。'
- en: From MySQL 8.0 onward, grant tables use the `InnoDB` storage engine by managing
    transactional states, but before that, MySQL used the `MyISAM` engine by managing
    nontransactional states. This change enables users to manage all account management
    statements in the transactional mode, so in the case of multiple statements, either
    all of them are successfully executed or none of them are executed.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8.0开始，授予表使用`InnoDB`存储引擎管理事务状态，但在此之前，MySQL使用`MyISAM`引擎管理非事务状态。这种改变使用户能够以事务模式管理所有帐户管理语句，因此在多个语句的情况下，要么全部成功执行，要么全部不执行。
- en: Verification of access control stages
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 访问控制阶段的验证
- en: MySQL 8 performs access control checks in two different stages.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8在两个不同的阶段执行访问控制检查。
- en: Stage 1 - Connection verification
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1阶段 - 连接验证
- en: 'This is the connection verification stage, so after verification, MySQL 8 will
    either accept or reject your connection request. Verification will be performed
    with the following conditions:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这是连接验证阶段，因此在验证后，MySQL 8将接受或拒绝您的连接请求。将根据以下条件执行验证：
- en: Based on a user's identity, with its password.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基于用户的身份，以及其密码。
- en: Whether a user's account is locked or not.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户账户是否被锁定。
- en: 'The server will deny access if either of these cases fails. Here, the identity
    contains the username and hostname from which the request is coming. MySQL performs
    a locking check on the `account_locked` column of the user table and a credential
    check on the three columns of the user table scope: `Host`, `User`, and `authentication_string`.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这两种情况中的任何一种失败，服务器将拒绝访问。在这里，身份包含请求来源的用户名和主机名。MySQL对用户表的`account_locked`列进行锁定检查，并对用户表范围的三列`Host`、`User`和`authentication_string`进行凭据检查。
- en: Stage 2 - Request verification
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2阶段 - 请求验证
- en: Once a connection is established with the MySQL server, stage 2 comes into the
    picture, where the MySQL server checks which operation you want to perform and
    whether that is permissible to you or not. For this verification, MySQL uses the
    privilege columns of the grant tables; it might be coming from `user`, `db`, `tables_priv`, `columns_priv`,
    or `procs_priv` tables.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦与MySQL服务器建立连接，第2阶段就会出现，MySQL服务器会检查您要执行的操作以及您是否有权限执行。为了进行此验证，MySQL使用授权表的特权列；它可能来自`user`、`db`、`tables_priv`、`columns_priv`或`procs_priv`表。
- en: Account management in MySQL 8
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL 8中的账户管理
- en: As the name implies, this topic describes how to manage user accounts in MySQL
    8\. We will describe how to add new accounts, how to remove accounts, how to define
    usernames and passwords for the accounts, and more.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 顾名思义，本主题描述了如何在MySQL 8中管理用户账户。我们将描述如何添加新账户，如何删除账户，如何为账户定义用户名和密码，以及更多。
- en: Add and remove user accounts
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加和删除用户账户
- en: 'MySQL 8 provides two different ways to create accounts:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8提供了创建账户的两种不同方式：
- en: '**Using account management statements**: These statements are used to create
    users and set their privileges; for example, with `CREATE USER` and `GRANT` statements,
    which inform the server to perform modifications on the grant table'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用账户管理语句**：这些语句用于创建用户并设置其特权；例如，使用`CREATE USER`和`GRANT`语句，通知服务器对授权表进行修改'
- en: '**Using manipulation of grant tables**: Using `INSERT`, `UPDATE`, and `DELETE`
    statements, we can manipulate the grant table'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用授权表的操作**：使用`INSERT`、`UPDATE`和`DELETE`语句，我们可以操作授权表'
- en: 'Out of these two approaches, account management statements are preferable,
    because they are more concise and less error-prone. Now, let''s see an example
    of using the commands:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种方法中，账户管理语句更可取，因为它们更简洁，更不容易出错。现在，让我们看一个使用命令的例子：
- en: '[PRE5]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The preceding commands perform the following actions:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令执行以下操作：
- en: '`#1` command creates `''user1''` and command `#2` assigns full privileges to
    `''user1''`. But `''user1''@''localhost''` indicates that `''user1''` is allowed
    to connect with `localhost` only.'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`#1`命令创建`''user1''`，命令`#2`为`''user1''`分配了完整的特权。但是`''user1''@''localhost''`表示`''user1''`只允许与`localhost`连接。'
- en: '`#3` command creates `''user2''` and command `#4` assigns full privileges to
    `''user2''`, the same as `''user1''`. But in #4, `''user2''@''%''` is mentioned,
    which indicates that `''user2''` is allowed to connect with any host.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`#3`命令创建`''user2''`，命令`#4`为`''user2''`分配了完整的特权，与`''user1''`相同。但在#4中，提到了`''user2''@''%''`，这表示`''user2''`可以与任何主机连接。'
- en: '`#5` creates `''adminuser''` and allows it to connect with `localhost` only.
    In `#6`, we can see that only `RELOAD` and `PROCESS` privileges are provided to
    the `''adminuser''`. It allows `''adminuser''` to execute the `mysqladmin reload`, `mysqladmin
    refresh`, `mysqladmin flush-xxx` commands, and the `mysqladmin processlist` command,
    but it has no access on any database.'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`#5`创建`''adminuser''`并允许它仅与`localhost`连接。在`#6`中，我们可以看到仅为`''adminuser''`提供了`RELOAD`和`PROCESS`特权。它允许`''adminuser''`执行`mysqladmin
    reload`、`mysqladmin refresh`、`mysqladmin flush-xxx`命令和`mysqladmin processlist`命令，但它无法访问任何数据库。'
- en: '`#7` creates the `''tempuser''` account without a password and allows the user
    to connect with `localhost` only. But no grant is specified for `''tempuser''`,
    so this user is not able to access the database nor perform any administrative
    commands.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`#7`创建了没有密码的`''tempuser''`账户，并允许用户仅与`localhost`连接。但是没有为`''tempuser''`指定授权，因此此用户无法访问数据库，也无法执行任何管理命令。'
- en: '`#8` creates `''user4''` and allows the user to access the database using `''host4''`
    only. `#10` indicates `''user4''` has grant on `''db1''` for all the mention operations.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`#8`创建`''user4''`并允许用户仅使用`''host4''`访问数据库。`#10`表示`''user4''`在`''db1''`上对所有提及的操作具有授权。'
- en: 'To remove a user account, execute the `DROP USER` command as follows:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除用户账户，请执行`DROP USER`命令如下：
- en: '[PRE6]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This command will drop the `'user1'` account from the system.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将从系统中删除`'user1'`账户。
- en: Security using roles
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用角色的安全性
- en: The same as a user account role having privileges, we can also say that a role
    is a collection of privileges. As an admin user, we can grant and revoke privileges
    from the roles. MySQL 8 provides the following commands, functions, and variables
    related to role configuration.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 与用户账户角色具有特权一样，我们也可以说角色是特权的集合。作为管理员用户，我们可以向角色授予和撤销特权。MySQL 8提供了以下与角色配置相关的命令、函数和变量。
- en: SET ROLE
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置角色
- en: '`SET ROLE` changes the active roles within the current session. Refer to the
    following commands related to `SET ROLE`:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '`SET ROLE`在当前会话中更改活动角色。参考以下与`SET ROLE`相关的命令：'
- en: '[PRE7]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The first command will deactivate all roles for the user in the current session.
    You can see the effect with the `CURRENT_ROLE();` function. In the second command,
    we are setting the `'developer_read'` role as default, and then checking the current
    role using the predefined function again.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个命令将在当前会话中取消用户的所有角色。您可以使用`CURRENT_ROLE();`函数查看效果。在第二个命令中，我们将`'developer_read'`角色设置为默认角色，然后再次使用预定义函数检查当前角色。
- en: CREATE ROLE
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建角色
- en: '`CREATE ROLE` is used to create a role; refer to the following command, which
    will create a role with the name `''developer_role''`:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '`CREATE ROLE`用于创建角色；参考以下命令，它将创建一个名为`''developer_role''`的角色：'
- en: '[PRE8]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: DROP ROLE
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除角色
- en: '`DROP ROLE` is used to remove a role. Refer to the following command, which
    will remove the `''developer_role''` role:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '`DROP ROLE`用于删除角色。参考以下命令，它将删除`''developer_role''`角色：'
- en: '[PRE9]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: GRANT
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 授予权限
- en: '`GRANT` assigns privileges to roles and assigns roles to accounts. For example,
    the following command assigns all privileges to the developer role:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`GRANT`分配权限给角色，并将角色分配给帐户。例如，以下命令将所有权限分配给开发人员角色：'
- en: '[PRE10]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'In the same way, to assign roles to the user account, execute the following
    command:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，要将角色分配给用户帐户，请执行以下命令：
- en: '[PRE11]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This command assigns the `''developer_role''` role to the `developer1` account.
    MySQL 8 also provides a feature to assign `GRANT` from user to user and role to
    role. Consider the following example:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将`'developer_role'`角色分配给`developer1`帐户。MySQL 8还提供了从用户到用户和从角色到角色的`GRANT`分配功能。考虑以下示例：
- en: '[PRE12]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: In this example, `user1` and `role1` is created and `GRANT` is applied on them
    in a simple way by using the `GRANT` command. Now, for `user2` and `role2`, we
    have applied `GRANT` from the `user1` and `role1`, respectively.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，通过使用`GRANT`命令以简单的方式在`user1`和`role1`上应用了`GRANT`。现在，对于`user2`和`role2`，我们已经分别从`user1`和`role1`应用了`GRANT`。
- en: REVOKE
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 撤销
- en: '`REVOKE` is used to remove privileges from the role and remove a role assignment
    from the user account. Refer to the following commands:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`REVOKE`用于从角色中删除权限，并从用户帐户中删除角色分配。参考以下命令：'
- en: '[PRE13]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The first command is used to remove `'developer_role'` for `user1`, and the
    second command is used to remove insert and update privileges from the `'role1'`
    on `'app_db'`.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个命令用于删除`user1`的`'developer_role'`，第二个命令用于从`'app_db'`上的`'role1'`中删除插入和更新权限。
- en: SET DEFAULT ROLE
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置默认角色
- en: '`SET DEFAULT ROLE` indicates which roles are active by default, whenever user
    login default roles are available to the user. To set a default root, execute
    the following command:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '`SET DEFAULT ROLE`指示默认情况下活动的角色，每当用户登录时，默认角色对用户可用。要设置默认根角色，请执行以下命令：'
- en: '[PRE14]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: After setting the default role, restart the server and execute the `current_role()`
    function to check whether a role is assigned or not.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 设置默认角色后，重新启动服务器并执行`current_role()`函数，以检查是否分配了角色。
- en: SHOW GRANTS
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示授予权限
- en: '`SHOW GRANTS` lists down privileges and role assignments related to accounts
    and roles. For a role, execute the following command:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`SHOW GRANTS`列出与帐户和角色相关的权限和角色分配。对于一个角色，执行以下命令：'
- en: '[PRE15]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This command shows the grant available on the `''app_developer''` role. In
    the same way, to check grants on a user, execute the following command:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令显示了`'app_developer'`角色上可用的授予权限。同样，要检查用户的授予权限，请执行以下命令：
- en: '[PRE16]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The preceding command lists down all the access available with the user root:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令列出了用户root拥有的所有访问权限：
- en: '`CURRENT_ROLE ()`: This function is used to list current roles within the current
    session. As described in the default role command, it shows currently assigned
    roles of the user.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CURRENT_ROLE()`：此函数用于列出当前会话中的当前角色。如默认角色命令中所述，它显示用户当前分配的角色。'
- en: '`activate_all_roles_on_login`: This is a system variable used to automatically
    activate all granted roles at the time of user login. By default, automatic activation
    of roles is disabled.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`activate_all_roles_on_login`：这是一个系统变量，用于在用户登录时自动激活所有授予的角色。默认情况下，角色的自动激活是禁用的。'
- en: '`mandatory_roles`: This is a system variable used to define mandatory roles.
    Remember that roles which are defined as mandatory can''t be deleted using the
    `drop` command. Define your mandatory roles in the server file `my.cnf` as follows:'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mandatory_roles`：这是一个系统变量，用于定义强制角色。请记住，定义为强制角色的角色不能使用`drop`命令删除。在服务器文件`my.cnf`中定义您的强制角色如下：'
- en: '[PRE17]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'To persist and set these roles at runtime, use the following statement:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 要在运行时持久化和设置这些角色，请使用以下语句：
- en: '[PRE18]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This statement applies changes on the running MySQL 8 instance and also saves
    it for subsequent restarts. If you want to apply changes for the running instance
    and not for other restarts, then use the keyword `GLOBAL` instead of `PERSIST`.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 此语句应用于运行中的MySQL 8实例的更改，并保存以供后续重新启动。如果要应用运行实例的更改而不是其他重新启动的更改，则使用关键字`GLOBAL`而不是`PERSIST`。
- en: Password management
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 密码管理
- en: 'MySQL 8 provides the following password management related capabilities:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8提供了以下与密码管理相关的功能：
- en: '**Password expiration**: Used to define periods for password expiration so
    that users can change it periodically. MySQL 8 allows for setting password expiration
    manually for accounts, along with an expiration policy. For an expiration policy,
    the `mysql_native_password`, `sha256_password`, or `caching_sha2_password` plugins
    can be used. To set a password manually, execute the following command:'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码过期**：用于定义密码过期的时间段，以便用户可以定期更改密码。MySQL 8允许为帐户手动设置密码过期，以及设置过期策略。对于过期策略，可以使用`mysql_native_password`、`sha256_password`或`caching_sha2_password`插件。要手动设置密码，请执行以下命令：'
- en: '[PRE19]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'This will mark a password as expired for the mentioned user. For password policies,
    you have to define the duration in terms of the number of days. MySQL uses the
    system variable `default_password_lifetime`, which contains a positive integer
    number to define the number of days. We can define it in the `my.cnf` file or
    can define it at runtime using the `PERSIST` option:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 这将标记指定用户的密码已过期。对于密码策略，您必须以天数为单位定义持续时间。MySQL使用系统变量`default_password_lifetime`，其中包含一个正整数来定义天数。我们可以在`my.cnf`文件中定义它，也可以使用`PERSIST`选项在运行时定义它：
- en: '**Password reuse restrictions**: Used to prevent the use of old passwords again.
    MySQL 8 defines this restriction based on two parameters - the number of changes
    and time elapsed; they can be used separately or in combination. MySQL 8 defines `password_history` and `password_reuse_interval` system
    variables, respectively, to apply restrictions. We can define these variables
    in the `my.cnf` file, or can persist them.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码重用限制**：用于防止再次使用旧密码。MySQL 8基于两个参数定义此限制-更改次数和经过的时间；它们可以单独或结合使用。MySQL 8分别定义了`password_history`和`password_reuse_interval`系统变量来应用限制。我们可以在`my.cnf`文件中定义这些变量，也可以使其持久化。'
- en: '`password_history`: This variable indicates that new passwords cannot be set/duplicated
    from the old passwords. Here, consider the most recent old passwords as per the
    specified number.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`password_history`：此变量表示新密码不能从旧密码设置/复制。在这里，根据指定的次数考虑最近的旧密码。'
- en: '`password_reuse_interval`: This variable indicates that the password cannot
    be set/duplicated from the old password. Here, interval defines the specific period
    and MySQL 8 will check new password with all the passwords which were falls under
    that period for a user. For example, if the interval is set as 20 days, then the
    new password should not have existed in the last 20 days of changed data.'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`password_reuse_interval`: 此变量表示密码不能从旧密码设置/复制。在这里，间隔定义了特定的时间段，MySQL 8将检查用户在该时间段内所有密码与新密码是否匹配。例如，如果间隔设置为20天，则新密码在过去20天内的更改数据中不应存在。'
- en: '**Password strength assessment**: Used to define strong passwords. It is implemented
    using the `validate_password` plugin.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码强度评估**：用于定义强密码。它使用`validate_password`插件实现。'
- en: Encryption in MySQL 8
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL 8中的加密
- en: When there is a need to transfer data over the network, it is a must to use
    encryption for the connection. If you are using unencrypted data, then someone
    who has access to the network can easily watch all of your traffic and can see
    what data is transferred between the client and server. To protect your data over
    the network, use encryption. Make sure the encryption algorithm used contains
    security elements to protect your connection from known attacks, like changing
    the order of a message or replay twice on data. Based on your application requirements,
    you can choose either an encrypted or unencrypted type connection. MySQL 8 performs
    encryption per connection using **Transport Layer Security** (**TLS**) protocol.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 当需要在网络上传输数据时，必须使用加密进行连接。如果使用未加密数据，则可以轻松观察网络访问权限的人员查看客户端和服务器之间传输的所有流量，并查看传输的数据。为了保护您在网络上传输的数据，请使用加密。确保所使用的加密算法包含安全元素，以保护连接免受已知攻击，如更改消息顺序或在数据上重复两次。根据应用程序要求，可以选择加密或未加密类型的连接。MySQL
    8使用**传输层安全性**（**TLS**）协议对每个连接执行加密。
- en: Configuring MySQL 8 to use encrypted connections
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置MySQL 8以使用加密连接
- en: This section describes how to configure the server and client for the encrypted
    connection.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了如何配置服务器和客户端以进行加密连接。
- en: Server-side configuration for encrypted connections
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务器端配置加密连接
- en: 'On the server side, MySQL 8 uses the `–ssl` option to specify properties related
    to encryption. The following options are used at the server side to configure
    encryption:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在服务器端，MySQL 8使用`-ssl`选项来指定与加密相关的属性。以下选项用于在服务器端配置加密：
- en: '`--ssl-ca`: This option specifies the path name of the **Certificate Authority**
    (**CA**) certificate file'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--ssl-ca`：此选项指定**证书颁发机构**（**CA**）证书文件的路径名'
- en: '`--ssl-cert`: This option specifies the path name of the server public key
    certificate file'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--ssl-cert`：此选项指定服务器公钥证书文件的路径名'
- en: '`--ssl-key`: This option specifies the path name of the server private key
    file'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--ssl-key`：此选项指定服务器私钥文件的路径名'
- en: 'You can use the above options by specifying them in the `my.cnf` file as follows:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在`my.cnf`文件中指定上述选项来使用这些选项：
- en: '[PRE20]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The `--ssl` option is enabled by default, so on server startup, MySQL 8 will
    try to find the certificate and key file under the data directory, even though
    you have not defined it in the `my.cnf` file. If those files are found, then MySQL
    8 will provide an encrypted connection, or else continue without an encrypted
    connection.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '`--ssl`选项默认启用，因此在服务器启动时，MySQL 8将尝试在数据目录下查找证书和密钥文件，即使您没有在`my.cnf`文件中定义它。如果找到这些文件，MySQL
    8将提供加密连接，否则将继续不加密连接。'
- en: Client-side configuration for encrypted connections
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户端端配置加密连接
- en: 'At the client side, MySQL uses the same `–ssl` options used at the server side
    to specify the certificate and key file, but apart from that, it has `–ssl-mode`
    options. By default, the client is allowed to set up an encrypted connection with
    the server if the server permits it. For further control, the client program uses
    the following `–ssl-mode` options:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在客户端，MySQL使用与服务器端相同的`-ssl`选项来指定证书和密钥文件，但除此之外，还有`-ssl-mode`选项。默认情况下，如果服务器允许，客户端可以与服务器建立加密连接。为了进一步控制，客户端程序使用以下`-ssl-mode`选项：
- en: '`--ssl-mode=REQUIRED`: This option indicates that an encrypted connection must
    be established, and fails if it is not established'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--ssl-mode=REQUIRED`：此选项表示必须建立加密连接，如果未建立则失败'
- en: '`--ssl-mode=PREFFERED`: This option indicates the client program can establish
    an encrypted connection if the server permits it, or else establish an unencrypted
    connection without a fail'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--ssl-mode=PREFFERED`：此选项表示客户端程序可以建立加密连接，如果服务器允许，否则建立未加密连接而不会失败'
- en: '`--ssl-mode=DISABLED`: This option indicates the client program is unable to
    use an encrypted connection, and only an unencrypted connection is allowed'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--ssl-mode=DISABLED`：此选项表示客户端程序无法使用加密连接，只允许未加密连接'
- en: '`--ssl-mode=VERIFY_CA`: This option is the same as `REQUIRED`, but in addition
    to that, it verifies the CA certificate against the configured CA certificate
    and returns a fail if no matches are found'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--ssl-mode=VERIFY_CA`：此选项与`REQUIRED`相同，但除此之外，它还会验证CA证书与配置的CA证书匹配，并在找不到匹配项时返回失败'
- en: '`--ssl-mode=VERIFY_IDENTITY`: It is the same as the `VERIFY_CA` option, but
    in addition to that, it will perform the hostname identity'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--ssl-mode=VERIFY_IDENTITY`：与`VERIFY_CA`选项相同，但除此之外，它还将执行主机名身份验证'
- en: Command options for encrypted connections
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加密连接的命令选项
- en: 'The following options are available in MySQL 8 for an encrypted connection.
    You can use these options on the command line, or you can define them in an option
    file:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8提供了用于加密连接的几个选项。您可以在命令行上使用这些选项，也可以在选项文件中定义它们：
- en: '| **Format** | **Description** |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '**格式** | **描述**'
- en: '| `--skip-ssl` | Do not use encrypted connection |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| `--skip-ssl` | 不使用加密连接 |'
- en: '| `--ssl` | Enable encrypted connection |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| `--ssl` | 启用加密连接 |'
- en: '| `--ssl-ca` | File that contains a list of trusted SSL Certificate Authorities
    |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| `--ssl-ca` | 包含受信任的SSL证书颁发机构列表的文件 |'
- en: '| `--ssl-capath` | Directory that contains trusted SSL Certificate Authority
    certificate files |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '| `--ssl-capath` | 包含受信任的SSL证书颁发机构证书文件的目录 |'
- en: '| `--ssl-cert` | File that contains X509 certificate |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| `--ssl-cert` | 包含X509证书的文件 |'
- en: '| `--ssl-cipher` | List of permitted ciphers for connection encryption |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '`--ssl-cipher` | 连接加密的允许密码列表'
- en: '| `--ssl-crl` | File that contains certificate revocation lists |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| `--ssl-crl` | 包含证书吊销列表的文件 |'
- en: '| `--ssl-crlpath` | Directory that contains certificate revocation list files
    |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| `--ssl-crlpath` | 包含证书吊销列表文件的目录 |'
- en: '| `--ssl-key` | File that contains X509 key |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| `--ssl-key` | 包含X509密钥的文件 |'
- en: '| `--ssl-mode` | Security state of connection to server |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| `--ssl-mode` | 与服务器连接的安全状态 |'
- en: '| `--tls-version` | Protocols permitted for encrypted connections |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| `--tls-version` | 允许加密连接的协议 |'
- en: Reference: [https://dev.mysql.com/doc/refman/8.0/en/encrypted-connection-options.html](https://dev.mysql.com/doc/refman/8.0/en/encrypted-connection-options.html)
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 参考：[https://dev.mysql.com/doc/refman/8.0/en/encrypted-connection-options.html](https://dev.mysql.com/doc/refman/8.0/en/encrypted-connection-options.html)
- en: Connect with MySQL 8 remotely from Windows with SSH
  id: totrans-240
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从Windows远程连接到MySQL 8并使用SSH
- en: 'To connect remotely with MYSQL 8 by using SSH from the Microsoft Windows system,
    perform the following steps:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 要从Microsoft Windows系统远程连接到MYSQL 8并使用SSH，执行以下步骤：
- en: Install the SSH client on your local system.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本地系统上安装SSH客户端。
- en: After starting the SSH client, set the hostname and user ID by which you want
    to connect with the server.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动SSH客户端后，通过要连接到服务器的主机名和用户ID进行设置。
- en: 'Configure port forwarding as follows and save the information:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置端口转发如下并保存信息：
- en: '**For remote forwarding configure**: `local_port:3306`, `remote_host:mysqlservername_or_ip`,
    `remote_port:3306`'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对于远程转发配置**：`local_port:3306`，`remote_host:mysqlservername_or_ip`，`remote_port:3306`'
- en: '**For local forwarding configure**: `local_port:3306`, `remote_host:localhost`,
    `remote_port:3306`'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对于本地转发配置**：`local_port:3306`，`remote_host:localhost`，`remote_port:3306`'
- en: Log in to the server with the created SSH session.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用创建的SSH会话登录服务器。
- en: In your local Microsoft Windows machine, start any ODBC application, such as
    Microsoft Access.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本地的Microsoft Windows机器上，启动任何ODBC应用程序，如Microsoft Access。
- en: In your local system, create new file and try to link with MySQL server using
    the ODBC driver. Make sure you have defined `localhost` in the connection instead
    of `mysqlservername`.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本地系统中，创建新文件并尝试使用ODBC驱动程序链接到MySQL服务器。确保在连接中定义了`localhost`而不是`mysqlservername`。
- en: Security plugins
  id: totrans-250
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全插件
- en: MySQL 8 provides several plugins to implement security. These plugins provide
    various features related to authentication protocols, password validation, secure
    storage, and much more. Let's discuss the various types of plugins in detail.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8提供了几个插件来实现安全性。这些插件提供了与身份验证协议、密码验证、安全存储等相关的各种功能。让我们详细讨论各种类型的插件。
- en: Authentication plugins
  id: totrans-252
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 认证插件
- en: 'The following list of authentication plugins, with their details:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是认证插件的列表及其详细信息：
- en: '**Native pluggable authentication**: To implement native authentication, MySQL
    8 uses the `mysql_native_password` plugin. This plugin uses a common name in server
    and client both the side and inbuilt provided by MySQL 8 for both the server and
    client program.'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本机可插拔身份验证**：为了实现本机身份验证，MySQL 8使用`mysql_native_password`插件。此插件在服务器和客户端两侧都使用一个通用名称，并由MySQL
    8为服务器和客户端程序提供内置支持。'
- en: SHA-256 pluggable authentication
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SHA-256可插拔身份验证
- en: 'To implement SHA-256 hashing MySQL 8 provides two different plugins:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现SHA-256哈希，MySQL 8提供了两种不同的插件：
- en: '`sha256_password`: This plugin is used to implement basic SHA-256 authentication.'
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sha256_password`：此插件用于实现基本的SHA-256身份验证。'
- en: '`caching_sha2_password`: This plugin implements SHA-256 authentication along
    with caching for better performance, and has some additional features as compared
    to the basic plugin.'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`caching_sha2_password`：此插件实现了SHA-256身份验证，并具有缓存功能以提高性能，与基本插件相比具有一些附加功能。'
- en: 'This plugin is inbuilt available with MySQL 8 server and client program with
    the same name as `sha256_password`. In the client, it is located under the `libmysqlclient` library.
    To use this plugin for an account, execute the following command:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 此插件与MySQL 8服务器和客户端程序内置提供，名称相同为`sha256_password`。在客户端中，它位于`libmysqlclient`库下。要为帐户使用此插件，请执行以下命令：
- en: '[PRE21]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: SHA-2 pluggable authentication
  id: totrans-261
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SHA-2可插拔身份验证
- en: 'SHA-2 pluggable authentication is the same as the SHA-256 pluggable plugin,
    except its plugin name is `caching_sha2_password`**.** When compare to `sha256_password`,
    this plugin has the following advantages:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: SHA-2可插拔身份验证与SHA-256可插拔插件相同，只是其插件名称为`caching_sha2_password`**。**与`sha256_password`相比，此插件具有以下优点：
- en: If you are using Unix socket-file and shared-memory protocols, then support
    is provided for client connections.
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果使用Unix套接字文件和共享内存协议，则为客户端连接提供支持。
- en: In-memory caching is available in SHA-2 plugins, which provides faster re-authentication
    for users who have connected previously.
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SHA-2插件中提供了内存缓存，为以前连接过的用户提供更快的重新认证。
- en: This plugin provides RSA-based password exchange, which works regardless of
    the SSL library provided by MySQL 8.
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该插件提供了基于RSA的密码交换，可以在MySQL 8提供的SSL库无关的情况下工作。
- en: Client-side cleartext pluggable authentication
  id: totrans-266
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户端明文可插拔认证
- en: This plugin is used to send passwords to the server without hashing or encryption.
    It is available at the client side with the name `mysql_clear_password`. MySQL
    8 provides it built-in within the client library.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 该插件用于将密码发送到服务器而不进行哈希或加密。在客户端库中以`mysql_clear_password`的名称提供。MySQL 8在客户端库中内置了它。
- en: No-login pluggable authentication
  id: totrans-268
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 无登录可插拔认证
- en: 'This is a server-side plugin used to prevent all client connections to any
    account that uses it. The plugin name is `''mysql_no_login''`, and it''s not a
    built-in MySQL plugin, so we must use the `mysql_no_login.so` library. To make
    it usable, put the library file under the plugin directory first, then perform
    either of these steps:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个服务器端插件，用于阻止使用它的任何帐户的所有客户端连接。插件名称是`'mysql_no_login'`，它不是MySQL的内置插件，因此我们必须使用`mysql_no_login.so`库。要使其可用，首先将库文件放在插件目录下，然后执行以下步骤之一：
- en: 'Load the plugin on server startup by adding the `--plugin-load-add` parameter
    in the `my.cnf` file:'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在`my.cnf`文件中添加`--plugin-load-add`参数在服务器启动时加载插件：
- en: '[PRE22]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'To register the plugin at runtime, execute the following command:'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要在运行时注册插件，请执行以下命令：
- en: '[PRE23]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'To uninstall this plugin, execute the following commands:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 要卸载此插件，请执行以下命令：
- en: If the plugin was installed on the server startup by using `--plugin-load-adoption`,
    then restart the server by removing the option.
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果使用`--plugin-load-adoption`在服务器启动时安装了插件，则通过删除该选项重启服务器来卸载插件。
- en: 'If the plugin was installed using the `INSTALL PLUGIN` command, then use the
    uninstall command to remove it:'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果使用`INSTALL PLUGIN`命令安装了插件，则使用卸载命令将其移除：
- en: '[PRE24]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Socket peer-credential pluggable authentication
  id: totrans-278
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 套接字对等凭证可插拔认证
- en: 'The server-side plugin named `auth_socket` is used to authenticate clients
    which are connected from the local host using the Unix socket file. It is only
    used for a system that supports the `SO_PEERCRED` option. `SO_PEERCRED` is used
    to obtain information about the user running the client program. This is not a
    built-in plugin; we must use the `auth_socket.so` library with this plugin. To
    make it usable, put the library file under the plugin directory first, and then
    perform either of these steps:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 名为`auth_socket`的服务器端插件用于对从本地主机使用Unix套接字文件连接的客户端进行身份验证。它仅用于支持`SO_PEERCRED`选项的系统。`SO_PEERCRED`用于获取有关运行客户端程序的用户的信息。这不是一个内置插件；我们必须使用`auth_socket.so`库来使用这个插件。要使其可用，首先将库文件放在插件目录下，然后执行以下步骤之一：
- en: 'Load the plugin on server startup by adding the `--plugin-load-add` parameter
    in the `my.cnf` file:'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在`my.cnf`文件中添加`--plugin-load-add`参数在服务器启动时加载插件：
- en: '[PRE25]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Register the plugin at runtime by executing the following command:'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行以下命令在运行时注册插件：
- en: '[PRE26]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To uninstall this plugin, execute the following commands:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 要卸载此插件，请执行以下命令：
- en: If the plugin was installed on server startup using `--plugin-load-addoption`,
    then restart the server by removing the option.
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果使用`--plugin-load-addoption`在服务器启动时安装了插件，则通过删除该选项重启服务器来卸载插件。
- en: 'If the plugin was installed using the `INSTALL PLUGIN` command, then use the
    `UNINSTALL` command to remove it:'
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果使用`INSTALL PLUGIN`命令安装了插件，则使用`UNINSTALL`命令将其移除：
- en: '[PRE27]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Test pluggable authentication
  id: totrans-288
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试可插拔认证
- en: A test plugin is provided by MySQL 8 to check account credentials and log successes
    or failures on the server logs. It is not a built-in plugin and needs to be installed
    before use. This is available for both the server and client side, and is named `test_plugin_server`
    and `auth_test_plugin`, respectively. MySQL 8 uses the `auth_test_plugin.so` library for
    this plugin. To install and uninstall this plugin, perform the same steps mentioned
    in the preceding plugin.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8提供了一个测试插件，用于检查帐户凭据并在服务器日志中记录成功或失败。这不是一个内置插件，需要在使用之前安装。它适用于服务器端和客户端，分别命名为`test_plugin_server`和`auth_test_plugin`。MySQL
    8使用`auth_test_plugin.so`库来提供此插件。要安装和卸载此插件，请执行与前面插件中提到的相同的步骤。
- en: The connection-control plugins
  id: totrans-290
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接控制插件
- en: MySQL 8 uses these plugins to introduce an increasing delay in the server response
    to the client after some specific number of failed connection attempts. MySQL
    has provided two plugins for connection control.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8使用这些插件在特定数量的连接尝试失败后向客户端的服务器响应中引入逐渐增加的延迟。MySQL为连接控制提供了两个插件。
- en: CONNECTION_CONTROL
  id: totrans-292
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CONNECTION_CONTROL
- en: 'This plugin will check all the incoming requests of connections and, based
    on that, add a delay in the server response if required. This plugin uses some
    system variables for configuration, and status variables for monitoring purposes.
    It also uses some other plugins, event classes, and processes, like audit plugin,`MYSQL_AUDIT_CONNECTION_CLASSMASK`
    event class, `MYSQL_AUDIT_CONNECTION_CONNECT`, and `MYSQL_AUDIT_CONNECTION_CHANGE_USER` processes
    for checking whether the server should have added a delay before attending any
    client connection:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 这个插件将检查所有传入连接的请求，并根据需要在服务器响应中添加延迟。该插件使用一些系统变量进行配置，并使用状态变量进行监视。它还使用其他一些插件、事件类和进程，比如审计插件、`MYSQL_AUDIT_CONNECTION_CLASSMASK`事件类、`MYSQL_AUDIT_CONNECTION_CONNECT`和`MYSQL_AUDIT_CONNECTION_CHANGE_USER`进程，以检查服务器是否应该在处理任何客户端连接之前添加延迟：
- en: '[PRE28]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: This plugin implements uses of the `INFORMATION_SCHEMA` table to provide details
    on monitoring of the failed connections.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 该插件实现了对`INFORMATION_SCHEMA`表的使用，以提供有关失败连接监视的详细信息。
- en: Plugin installation
  id: totrans-296
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 插件安装
- en: 'We must use the `connection_control.so` library with this plugin. To make it
    usable, put the library file under the plugin directory first, and then perform
    either of the steps:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须使用`connection_control.so`库来使用这个插件。要使其可用，首先将库文件放在插件目录下，然后执行以下步骤之一：
- en: 'Load the plugin on server startup by adding the `--plugin-load-add`parameter
    in the `my.cnf` file:'
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`my.cnf`文件中添加`--plugin-load-add`参数，以在服务器启动时加载插件：
- en: '[PRE29]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Register the plugin at runtime by executing the following command:'
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`my.cnf`文件中添加`--plugin-load-add`参数，以在服务器启动时加载插件：
- en: '[PRE30]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Variables related to CONNECTION-CONTROL
  id: totrans-302
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与连接控制相关的变量
- en: 'The following variables are provided by `CONNECTION-CONTROL` plugins:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 以下变量由`CONNECTION-CONTROL`插件提供：
- en: '`Connection_control_delay_generated`: This is a status variable, mainly used
    to manage the counter. It indicates how many times the server added a delay in
    its response on failed connection attempts. It also depends on the `connection_control_failed_connections_threshold`
    system variable, because this status variable does not increment the count unless
    the number of attempts reaches the limit defined by the threshold variable.'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Connection_control_delay_generated`: 这是一个状态变量，主要用于管理计数器。它指示服务器在连接失败尝试时添加延迟的次数。它还取决于`connection_control_failed_connections_threshold`系统变量，因为除非尝试次数达到阈值变量定义的限制，否则此状态变量不会增加计数。'
- en: '`connection_control_failed_connections_threshold`: This is a system variable
    which indicates how many consecutive failed attempts are allowed to clients before
    the server adds a delay on each attempt.'
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`connection_control_failed_connections_threshold`: 这是一个系统变量，指示在服务器对每次尝试添加延迟之前，客户端允许连续失败的尝试次数。'
- en: '`connection_control_max_connection_delay`: This is a system variable which
    defines the maximum delay time in milliseconds for the server response on failed
    connections attempts. MySQL 8 will consider this variable once the threshold variable
    contains a value higher than zero.'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`connection_control_max_connection_delay`: 这是一个系统变量，定义了服务器在连接失败尝试时的最大延迟时间（以毫秒为单位）。一旦阈值变量包含一个大于零的值，MySQL
    8将考虑这个变量。'
- en: '`connection_control_min_connection_delay`:  This system variable defines the
    minimum delay time in milliseconds for the server to failed connection attempt.
    MySQL 8 will consider this variable once the threshold variable contains a value
    higher than zero.'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`connection_control_min_connection_delay`: 该系统变量定义了服务器对连接失败尝试的最小延迟时间（以毫秒为单位）。一旦阈值变量包含一个大于零的值，MySQL
    8将考虑这个变量。'
- en: The password validation plugin
  id: totrans-308
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 密码验证插件
- en: 'For password validation, MySQL provides a plugin named `validate_password`.
    It is mainly used to test passwords and improve security. The following are the
    two major capabilities of this plugin:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 对于密码验证，MySQL提供了一个名为`validate_password`的插件。它主要用于测试密码并提高安全性。以下是该插件的两个主要功能：
- en: '`VALIDATE_PASSWORD_STRENGTH()`: An SQL function used to find the strength of
    a password. It takes a password as an argument and returns an integer value between
    0 and 100\. Here, 0 indicates a weak password and 100 indicates a strong password.'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`VALIDATE_PASSWORD_STRENGTH()`: 一个SQL函数，用于查找密码的强度。它以密码作为参数，并返回一个介于0和100之间的整数值。这里，0表示弱密码，100表示强密码。'
- en: '**Check password as per policy in SQL statements**: For all the SQL statements
    which use a password as a clear text value, the plugin will check the provided
    password against the policy of the password and, based on that, return a response.
    In the case of a weak password, the plugin will return an `ER_NOT_VALID_PASSWORD` error.
    `ALTER USER`, `CREATE USER`, `GRANT`, `SET PASSWORD` statements, and the `PASSWORD()`
    function are always checked by this plugin if the password is defined as clear
    text in an argument.'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**按照SQL语句中的策略检查密码**：对于所有使用明文密码的SQL语句，插件将检查提供的密码是否符合密码策略，并根据此返回响应。对于弱密码，插件将返回一个`ER_NOT_VALID_PASSWORD`错误。如果密码在参数中以明文形式定义，`ALTER
    USER`、`CREATE USER`、`GRANT`、`SET PASSWORD`语句和`PASSWORD()`函数始终由该插件检查。'
- en: Install password validation plugin
  id: totrans-312
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装密码验证插件
- en: 'We must use the `validate_password.so` library with this plugin. To make it
    usable, put the library file under the plugin directory first, and then perform
    either of these steps:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须使用`validate_password.so`库与该插件。要使其可用，首先将库文件放在插件目录下，然后执行以下步骤之一：
- en: 'Load the plugin on server startup by adding the `--plugin-load-add` parameter
    in the`my.cnf` file:'
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在服务器启动时加载插件，通过在`my.cnf`文件中添加`--plugin-load-add`参数：
- en: '[PRE31]'
  id: totrans-315
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Register the plugin at runtime by executing the following command:'
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在运行时注册插件，执行以下命令：
- en: '[PRE32]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Variables and options related to the password validation plugin
  id: totrans-318
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与密码验证插件相关的变量和选项
- en: MySQL 8 provides following system variables, status variables and options related
    to password validation plugin.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8提供了以下与密码验证插件相关的系统变量、状态变量和选项。
- en: '`validate_password_check_user_name`: This is a system variable, and is enabled
    by default in MySQL 8\. As the name implies, it is used to compare a password
    with the username of the currently effective user. If the password matches with
    the username or its reverse, MySQL 8 will reject the password, irrespective of
    the `VALIDATE_PASSWORD_STRENGTH()` function value.'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`validate_password_check_user_name`: 这是一个系统变量，在MySQL 8中默认启用。顾名思义，它用于将密码与当前有效用户的用户名进行比较。如果密码与用户名或其反转匹配，MySQL
    8将拒绝密码，而不管`VALIDATE_PASSWORD_STRENGTH()`函数的值如何。'
- en: '`validate_password_dictionary_file`: This system variable contains the pathname
    of the directory which is used by the `validate_password` plugin. You can set
    it at runtime without a server restart, and it is available once the plugin is
    installed. Set the password policy value as 2(strong), if you define the directory
    for the password check. Possible values for password policy is describe under `validate_password_policy` system
    variable.'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`validate_password_dictionary_file`: 该系统变量包含了`validate_password`插件使用的目录的路径名。您可以在运行时设置它，无需重新启动服务器，并且一旦安装了插件，它就可用。如果您定义了用于密码检查的目录，将密码策略值设置为2（强）。密码策略的可能值在`validate_password_policy`系统变量下描述。'
- en: '`validate_password_length`: This system variable is available once a plugin
    is installed and is used to define the minimum number of characters for a password
    to check with the `validate_password` plugin.'
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`validate_password_length`: 一旦安装了插件，该系统变量可用于定义密码与`validate_password`插件进行检查所需的最小字符数。'
- en: '`validate_password_mixed_case_count`: This system variable is available once
    a plugin is installed and is used to define the minimum number of lowercase and
    uppercase characters for a password check.'
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`validate_password_mixed_case_count`：一旦安装了插件，此系统变量可用于定义密码检查中小写和大写字符的最小数量。'
- en: '`validate_password_number_count`: This system variable is available once the
    plugin is installed and is used to define the minimum number of digits for the
    password check.'
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`validate_password_number_count`：一旦安装了插件，此系统变量可用于定义密码检查中数字的最小数量。'
- en: '`validate_password_special_char_count`: This system variable is available once
    a plugin is installed and is used to define the minimum number of non-alphanumeric
    characters in a password check.'
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`validate_password_special_char_count`：一旦安装了插件，此系统变量可用于定义密码检查中非字母数字字符的最小数量。'
- en: '`validate_password_policy`: This system variable is available once a plugin
    is installed, and it indicates how a plugin should behave in the case of other
    system variables. The following values of this variable describe the behavior
    of the `validate_password` plugin:'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`validate_password_policy`：一旦安装了插件，此系统变量可用，并指示插件在其他系统变量情况下应如何行为。此变量的以下值描述了`validate_password`插件的行为：'
- en: '| **Policy** | **Tests Performed** |'
  id: totrans-327
  prefs: []
  type: TYPE_TB
  zh: '| **策略** | **执行的测试** |'
- en: '| 0 or LOW | Length |'
  id: totrans-328
  prefs: []
  type: TYPE_TB
  zh: '| 0或LOW | 长度 |'
- en: '| 1 or MEDIUM | Length; numeric, lowercase/uppercase, and special characters
    |'
  id: totrans-329
  prefs: []
  type: TYPE_TB
  zh: '| 1或MEDIUM | 长度；数字，小写/大写和特殊字符 |'
- en: '| 2 or STRONG | Length; numeric, lowercase/uppercase, and special characters;
    dictionary file |'
  id: totrans-330
  prefs: []
  type: TYPE_TB
  zh: '| 2或STRONG | 长度；数字，小写/大写和特殊字符；字典文件 |'
- en: Reference:[https://dev.mysql.com/doc/refman/8.0/en/validate-password-options-variables.html](https://dev.mysql.com/doc/refman/8.0/en/validate-password-options-variables.html)
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 参考：[https://dev.mysql.com/doc/refman/8.0/en/validate-password-options-variables.html](https://dev.mysql.com/doc/refman/8.0/en/validate-password-options-variables.html)
- en: '`validate_password_dictionary_file_last_parsed`: This is a status variable
    used to indicate the time when a directory file was last parsed.'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`validate_password_dictionary_file_last_parsed`：这是一个状态变量，用于指示上次解析目录文件的时间。'
- en: '`validate_password_dictionary_file_words_count`: This is a status variable
    used to indicate the number of words read from the directory file.'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`validate_password_dictionary_file_words_count`：这是一个状态变量，用于指示从目录文件中读取的单词数量。'
- en: '`--validate-password[=value]`: This option is used to define how a server loads
    the `validate_password` plugin on startup. This option is available only if the
    plugin was registered with `INSTALL PLUGIN` or if it is loaded with the `--plugin-load-add`
    feature.'
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--validate-password[=value]`：此选项用于定义服务器在启动时如何加载`validate_password`插件。此选项仅在插件使用`INSTALL
    PLUGIN`注册或使用`--plugin-load-add`功能加载时可用。'
- en: MySQL 8 keyring
  id: totrans-335
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL 8 keyring
- en: MySQL 8 provides a keyring service, which allows the MySQL server's internal
    components and plugins to store their sensitive information for later use. For
    this feature, MySQL 8 uses the `keyring_file` plugin, which will store data into
    the file located on the server host. This plugin is available in all distributions
    of MySQL, such as the Community Edition and Enterprise Edition.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8提供了一个keyring服务，允许MySQL服务器的内部组件和插件存储它们的敏感信息以供以后使用。对于此功能，MySQL 8使用`keyring_file`插件，该插件将数据存储在服务器主机上的文件中。此插件在所有MySQL的发行版中都可用，如社区版和企业版。
- en: Install keyring plugin
  id: totrans-337
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装keyring插件
- en: 'We must use the `keyring_file.so` library with this plugin. To make it usable,
    put the library file under the plugin directory first, and then perform either
    of these steps:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须使用`keyring_file.so`库与此插件。为了使其可用，首先将库文件放在插件目录下，然后执行以下步骤之一：
- en: 'Load the plugin on server startup by adding the `--plugin-load-add` parameter
    in the `my.cnf` file:'
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过在`my.cnf`文件中添加`--plugin-load-add`参数，在服务器启动时加载插件：
- en: '[PRE33]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Register the plugin at runtime by executing the following command:'
  id: totrans-341
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过执行以下命令在运行时注册插件：
- en: '[PRE34]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: System variables related to keyring plugin
  id: totrans-343
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与keyring插件相关的系统变量
- en: 'MySQL 8 provides below system variable related to keyring plugin:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8提供了以下与keyring插件相关的系统变量：
- en: '`keyring_file_data`: This system variable is available once a plugin is installed
    and is used to define a pathname of the data file which is used by the `keyring_file` plugin
    to store secure data. Keyring operations are transactional, so this plugin uses
    a backup file during write operation to handle a rollback scenario. In this case,
    the backfile is also named with the same naming convention as defined in the `keyring_file_data`
    system variable, with the suffix as `.backup`.'
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`keyring_file_data`：一旦安装了插件，此系统变量可用于定义`keyring_file`插件用于存储安全数据的数据文件的路径。Keyring操作是事务性的，因此此插件在写操作期间使用备份文件来处理回滚情况。在这种情况下，备份文件的命名约定与`keyring_file_data`系统变量中定义的相同，并带有`.backup`后缀。'
- en: Summary
  id: totrans-346
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we started with an overview of security, and then the ride
    began with the MySQL 8 security related features. First we discussed some common
    security issues, then we showed how to assign privileges and how to manage access
    control in MySQL 8\. Encryption was also covered in this chapter, to secure your
    sensitive data. And finally, we covered some important security plugins, which
    are useful to implement security in MySQL 8.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们首先概述了安全性，然后介绍了MySQL 8安全相关的功能。首先我们讨论了一些常见的安全问题，然后展示了如何分配权限以及如何在MySQL 8中管理访问控制。本章还涵盖了加密，以保护您的敏感数据。最后，我们介绍了一些重要的安全插件，这些插件对于在MySQL
    8中实现安全性非常有用。
- en: It's now time to move on to our next chapter, where we will be configuring MySQL
    8 for optimization. For optimization, we will cover different areas of the database,
    such as optimizing queries, optimizing tables, optimizing buffering and caching,
    and much more. Apart from server configuration, it also covers how to configure
    a client for optimization.
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候转到我们的下一章了，在那里我们将为优化配置MySQL 8。对于优化，我们将涵盖数据库的不同领域，如优化查询，优化表，优化缓冲和缓存等等。除了服务器配置，它还涵盖了如何为优化配置客户端。
