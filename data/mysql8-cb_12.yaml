- en: Managing Logs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理日志
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Managing the error log
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理错误日志
- en: Managing the general query log and slow query log
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理常规查询日志和慢查询日志
- en: Managing the binary logs
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理二进制日志
- en: Introduction
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'You will now learn about managing different type of logs: error log, general
    query log, slow query log, binary logs, relay logs, and DDL logs.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您将了解如何管理不同类型的日志：错误日志、常规查询日志、慢查询日志、二进制日志、中继日志和DDL日志。
- en: Managing the error log
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理错误日志
- en: 'As per the MySQL documentation:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 根据MySQL文档：
- en: The error log contains a record of `mysqld` startup and shutdown times. It also
    contains diagnostic messages such as errors, warnings, and notes that occur during
    server startup and shutdown, and while the server is running.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 错误日志包含了`mysqld`启动和关闭时间的记录。它还包含了在服务器启动和关闭期间以及服务器运行时发生的错误、警告和注释等诊断消息。
- en: 'The error log subsystem consists of components that perform log event filtering
    and writing, as well as a system variable called `log_error_services` that configures
    which components to enable to achieve the desired logging result. The default
    value of `global.log_error_services` is `log_filter_internal; log_sink_internal`:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 错误日志子系统由执行日志事件过滤和写入的组件以及一个名为`log_error_services`的系统变量组成，该变量配置了要启用哪些组件以实现所需的日志记录结果。`global.log_error_services`的默认值是`log_filter_internal;
    log_sink_internal`：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: That value indicates that log events first pass through the built-in filter
    component, `log_filter_internal`, then through the built-in log writer component,
    `log_sink_internal`. Component order is significant because the server executes
    components in the order listed. Any loadable (not built in) component named in
    the `log_error_services` value must first be installed with `INSTALL COMPONENT`
    which will be described in this section.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 该值表示日志事件首先通过内置过滤组件`log_filter_internal`，然后通过内置日志写入组件`log_sink_internal`。组件顺序很重要，因为服务器按照列出的顺序执行组件。`log_error_services`值中命名的任何可加载（非内置）组件必须首先使用`INSTALL
    COMPONENT`进行安装，这将在本节中描述。
- en: To know about all types of error logging, refer to [https://dev.mysql.com/doc/refman/8.0/en/error-log.html](https://dev.mysql.com/doc/refman/8.0/en/error-log.html)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解所有类型的错误日志记录，请参阅[https://dev.mysql.com/doc/refman/8.0/en/error-log.html](https://dev.mysql.com/doc/refman/8.0/en/error-log.html)
- en: How to do it...
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: Error logs are easy, in a way. Let's see how to configure an error log first.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 错误日志在某种程度上很容易。让我们先看看如何配置错误日志。
- en: Configuring the error log
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置错误日志
- en: The error logging is controlled by the `log_error` variable (`--log-error` for
    a startup script).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 错误日志由`log_error`变量（启动脚本的`--log-error`）控制。
- en: If `--log-error` is not given, the default destination is the console.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未给出`--log-error`，默认目的地是控制台。
- en: If `--log-error` is given without naming a file, the default destination is
    a file named `host_name.err` in the `data directory` .
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果给出`--log-error`而没有命名文件，则默认目的地是`data directory`中名为`host_name.err`的文件。
- en: If `--log-error` is given to name a file, the default destination is that file
    (with an `.err` suffix added if the name has no suffix), located under the `data
    directory`  unless an absolute path name is given to specify a different location.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果给出`--log-error`以命名文件，则默认目的地是该文件（如果名称没有后缀，则添加`.err`后缀），位于`data directory`下，除非给出绝对路径名以指定不同的位置。
- en: The `log_error_verbosity` system variable controls server verbosity for writing
    error, warning, and note messages to the error log. Permitted `log_error_verbosity`
    values are `1` (errors only), `2` (errors and warnings), and `3` (errors, warnings,
    and notes), with a default of `3`.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`log_error_verbosity`系统变量控制服务器写入错误、警告和注释消息到错误日志的详细程度。允许的`log_error_verbosity`值为`1`（仅错误）、`2`（错误和警告）和`3`（错误、警告和注释），默认值为`3`。'
- en: 'To change the error log location, edit the configuration file and restart MySQL:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改错误日志位置，请编辑配置文件并重新启动MySQL：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Verify the error log:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 验证错误日志：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To adjust the verbosity, you can change the `log_error_verbosity` variable
    dynamically. However, it is recommended to keep the default value of `3` so that
    error, warning, and note messages are logged:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要调整详细程度，您可以动态更改`log_error_verbosity`变量。但是，建议保持默认值`3`，以便记录错误、警告和注释消息：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Rotating the error log
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 旋转错误日志
- en: 'Suppose the error log file has become bigger and you want to rotate it; you
    can simply move the file and execute the `FLUSH LOGS` command:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 假设错误日志文件变得更大，您想要对其进行旋转；您可以简单地移动文件并执行`FLUSH LOGS`命令：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You can automate the preceding steps using some scripts and put them into `cron`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用一些脚本自动化上述步骤，并将它们放入`cron`中。
- en: 'If the location of an error log file is not writable by the server, the log-flushing
    operation fails to create a new log file:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果错误日志文件的位置对服务器不可写，日志刷新操作将无法创建新的日志文件：
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Using the system log for logging
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用系统日志进行日志记录
- en: 'To use the system log for logging, you need to load the system log writer called
    `log_sink_syseventlog`. You can use the built-in filter, `log_filter_internal`,
    for filtering:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用系统日志进行日志记录，您需要加载名为`log_sink_syseventlog`的系统日志写入器。您可以使用内置过滤器`log_filter_internal`进行过滤：
- en: 'Load the system log writer:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载系统日志写入器：
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Make it persistent across restarts:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使其在重新启动时持久化：
- en: '[PRE7]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You can verify that the logs will be directed to the syslog. On CentOS and Red
    Hat, you can check in `/var/log/messages`; on Ubuntu, you can check in `/var/log/syslog`.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以验证日志将被定向到系统日志。在CentOS和Red Hat上，您可以在`/var/log/messages`中检查；在Ubuntu上，您可以在`/var/log/syslog`中检查。
- en: 'For the sake of a demo, the server was restarted. You can see those logs in
    the syslog:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示，服务器已重新启动。您可以在系统日志中看到这些日志：
- en: '[PRE8]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If you have multiple `mysqld` processes running, you can differentiate using
    the PID specified in `[]`. Otherwise, you can set the `log_syslog_tag` variable,
    which appends the server identifier with a leading hyphen, resulting in an identifier
    of `mysqld-tag_val`.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有多个运行的`mysqld`进程，您可以使用`[]`中指定的PID进行区分。否则，您可以设置`log_syslog_tag`变量，该变量会在服务器标识符前附加一个连字符，从而得到一个`mysqld-tag_val`的标识符。
- en: 'For example, you can tag an instance with something like `instance1`:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可以为实例添加标签，如`instance1`：
- en: '[PRE9]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: You will notice that the `instance1` tag is appended to the log so that you
    can easily identify between multiple instances.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到`instance1`标签附加到日志中，以便您可以轻松识别多个实例之间的区别。
- en: 'If you wish to switch back to the original logging, you can set `log_error_services`
    to `''log_filter_internal; log_sink_internal''`:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要切换回原始日志记录，可以将`log_error_services`设置为`'log_filter_internal; log_sink_internal'`：
- en: '[PRE10]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Error logging in JSON format
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以JSON格式记录错误
- en: 'To use the JSON format for logging, you need to load the JSON log writer called
    `log_sink_json`. You can use the built-in filter, `log_filter_internal`, for filtering:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用JSON格式进行记录，您需要加载名为`log_sink_json`的JSON日志写入器。您可以使用内置过滤器`log_filter_internal`进行过滤：
- en: 'Install the JSON log writer:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装JSON日志写入器：
- en: '[PRE11]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Make it persistent across restarts:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使其在重新启动后保持不变：
- en: '[PRE12]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The JSON log writer determines its output destination based on the default
    error log destination, which is given by the `log_error` system variable:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: JSON日志写入器根据`log_error`系统变量给出的默认错误日志目的地确定其输出目的地：
- en: '[PRE13]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The log will be something like `mysqld.log.00.json`.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 日志将类似于`mysqld.log.00.json`。
- en: 'After a restart, the JSON log file looks like this:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启动后，JSON日志文件如下所示：
- en: '[PRE14]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'If you wish to switch back to original logging, you can set `log_error_services`
    to `''log_filter_internal; log_sink_internal''`:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要切换回原始日志记录，可以将`log_error_services`设置为`'log_filter_internal; log_sink_internal'`：
- en: '[PRE15]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: To know more about the error logging configuration, refer to [https://dev.mysql.com/doc/refman/8.0/en/error-log-component-configuration.html](https://dev.mysql.com/doc/refman/8.0/en/error-log-component-configuration.html).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有关错误记录配置的更多信息，请参阅[https://dev.mysql.com/doc/refman/8.0/en/error-log-component-configuration.html](https://dev.mysql.com/doc/refman/8.0/en/error-log-component-configuration.html)。
- en: Managing the general query log and slow query log
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理一般查询日志和慢查询日志
- en: There are two ways you can log the queries. One way is through general query
    log, and other way is through slow query log. In this section, you will learn
    about configuring them.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种方式可以记录查询。一种是通过一般查询日志，另一种是通过慢查询日志。在本节中，您将学习如何配置它们。
- en: How to do it...
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: We will get into the details in the following subsections.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在以下子节中详细介绍。
- en: General query log
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一般查询日志
- en: 'As per the MySQL documentation:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 根据MySQL文档：
- en: 'The general query log is a general record of what `mysqld` is doing. The server
    writes information to this log when clients connect or disconnect, and it logs
    each SQL statement received from clients. The general query log can be very useful
    when you suspect an error in a client and want to know exactly what the client
    sent to `mysqld`:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一般查询日志是`mysqld`正在执行的一般记录。当客户端连接或断开连接时，服务器会将信息写入此日志，并记录从客户端接收到的每个SQL语句。当您怀疑客户端中存在错误并想要确切知道客户端发送给`mysqld`的内容时，一般查询日志可能非常有用：
- en: Specify the file for logging. If you do not specify, it will be created in the
    `data directory` with the name `hostname.log`.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定日志文件。如果不指定，它将在`data directory`中以`hostname.log`的名称创建。
- en: 'The server creates the file in the `data directory` unless an absolute path
    name is given to specify a different directory:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器会在`data directory`中创建文件，除非给出绝对路径名以指定不同的目录：
- en: '[PRE16]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Enable the general query log:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用一般查询日志：
- en: '[PRE17]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'You can see that the queries are logged:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以看到查询已记录：
- en: '[PRE18]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: General query log generates a very big log file. Be very cautious when enabling
    it on a production server. It drastically affects the server's performance.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 一般查询日志会生成一个非常大的日志文件。在生产服务器上启用时要非常小心。它会严重影响服务器的性能。
- en: Slow query log
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 慢查询日志
- en: 'As per the MySQL documentation:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 根据MySQL文档：
- en: '"The slow query log consists of SQL statements that took more than long_query_time
    seconds to execute and required at least min_examined_row_limit rows to be examined."'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: “慢查询日志由执行时间超过long_query_time秒并且需要至少min_examined_row_limit行才能检查的SQL语句组成。”
- en: To log all the queries, you can set the value of `long_query_time` to `0`. The
    default value of `long_query_time` is `10` seconds and `min_examined_row_limit`
    is `0`.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 要记录所有查询，可以将`long_query_time`的值设置为`0`。`long_query_time`的默认值为`10`秒，`min_examined_row_limit`为`0`。
- en: By default, queries that do not use indexes for lookups and administrative statements
    (such as `ALTER TABLE`, `ANALYZE TABLE`, `CHECK TABLE`, `CREATE INDEX`, `DROP
    INDEX`, `OPTIMIZE TABLE`, and `REPAIR TABLE`) are not logged. This behavior can
    be changed using `log_slow_admin_statements` and `log_queries_not_using_indexes`.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，不会记录不使用索引进行查找的查询和管理语句（例如`ALTER TABLE`，`ANALYZE TABLE`，`CHECK TABLE`，`CREATE
    INDEX`，`DROP INDEX`，`OPTIMIZE TABLE`和`REPAIR TABLE`）。可以使用`log_slow_admin_statements`和`log_queries_not_using_indexes`更改此行为。
- en: 'To enable slow query log, you can dynamically set `slow_query_log=1` and you
    can set the filename using `slow_query_log_file`. To specify the log destination,
    use `--log-output`:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用慢查询日志，可以动态设置`slow_query_log=1`，并可以使用`slow_query_log_file`设置文件名。要指定日志目的地，请使用`--log-output`：
- en: 'Verify `long_query_time` and adjust it as per your requirement:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证`long_query_time`并根据您的要求进行调整：
- en: '[PRE19]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Verify the slow query file. By default, it would be in the `data directory`
    with the `hostname-slow` log:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证慢查询文件。默认情况下，它将在`data directory`中以`hostname-slow`日志的形式存在：
- en: '[PRE20]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Enable the slow query log:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用慢查询日志：
- en: '[PRE21]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Verify that the queries are logged (You have to execute few long running queries
    to see them in slow query log):'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证查询是否已记录（您必须执行一些长时间运行的查询才能在慢查询日志中看到它们）：
- en: '[PRE22]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Selecting  query log output destinations
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择查询日志输出目的地
- en: You can log the queries to either `FILE` or `TABLE` in MySQL itself by specifying
    the `log_output` variable, which can be either `FILE` or `TABLE`, or both `FILE` and `TABLE`.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过指定`log_output`变量在MySQL本身中将查询记录到`FILE`或`TABLE`中，该变量可以是`FILE`或`TABLE`，也可以是`FILE`和`TABLE`。
- en: If you specify `log_output` as `FILE`, the general query log and the slow query
    log will be written to the files specified by `general_log_file` and `slow_query_log_file`,
    respectively.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果将`log_output`指定为`FILE`，则一般查询日志和慢查询日志将分别写入`general_log_file`和`slow_query_log_file`指定的文件中。
- en: If you specify `log_output` as `TABLE`, the general query log and the slow query
    log will be written to the `mysql.general_log` and `mysql.slow_log` tables respectively.
    Log contents are accessible through SQL statements.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您将`log_output`指定为`TABLE`，则一般查询日志和慢查询日志将分别写入`mysql.general_log`和`mysql.slow_log`表中。日志内容可以通过SQL语句访问。
- en: 'For example:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE23]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Execute a few queries and then query the `mysql.general_log` table:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 执行一些查询，然后查询`mysql.general_log`表：
- en: '[PRE24]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'You can use the `slow_log` table in a similar way:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以以类似的方式使用`slow_log`表：
- en: '[PRE25]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'If the slow query log table has become huge, you can rotate it by creating
    a new table and swapping it:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果慢查询日志表变得非常庞大，您可以通过创建一个新表并交换它来进行轮换：
- en: 'Create a new table, `mysql.general_log_new`:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新表`mysql.general_log_new`：
- en: '[PRE26]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Swap the tables using the `RENAME TABLE` command:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`RENAME TABLE`命令交换表：
- en: '[PRE27]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Managing the binary logs
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理二进制日志
- en: In this section, managing the binary logs in a replication environment is covered.
    Basic binary log handling is already covered in Chapter 6, *Binary Logging*, using
    the `PURGE BINARY LOGS` command and `expire_logs_days` variable.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，将介绍在复制环境中管理二进制日志。基本的二进制日志处理已经在第6章“二进制日志记录”中介绍过，使用`PURGE BINARY LOGS`命令和`expire_logs_days`变量。
- en: Using those methods is unsafe in a replication environment because if any one
    of the slaves has not consumed the binary logs and you have deleted them, the
    slave will go out of sync and you'll need to rebuild it.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在复制环境中使用这些方法是不安全的，因为如果任何一个从服务器没有消耗二进制日志并且您已经删除了它们，从服务器将会失去同步，您将需要重建它。
- en: The safe way to delete the binary logs is by checking which binary logs have
    been read on each slave and deleting them. You can use the `mysqlbinlogpurge`
    utility to achieve this.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 安全地删除二进制日志的方法是检查每个从服务器上已读取了哪些二进制日志，并删除它们。您可以使用`mysqlbinlogpurge`实用程序来实现这一点。
- en: How to do it...
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Execute the `mysqlbinlogpurge` script on any of the servers and specify the
    master and slave hosts. The script connects to all the slaves and finds out the
    latest binary log applied. Then it purges the master binary logs until that point.
    You need a superuser to connect to all slaves:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何一个服务器上执行`mysqlbinlogpurge`脚本，并指定主服务器和从服务器主机。该脚本连接到所有的从服务器，并找出最新应用的二进制日志。然后清除主二进制日志直到那一点。您需要一个超级用户来连接到所有的从服务器：
- en: 'Connect to any of the servers and execute the `mysqlbinlogpurge` script:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到任何一个服务器并执行`mysqlbinlogpurge`脚本：
- en: '[PRE28]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'If you wish to discover all the slaves without specifying in the command, you
    should set `report_host` and `report_port` on all slaves and restart MySQL server.
    On each slave:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您希望在命令中不指定的情况下发现所有的从服务器，您应该在所有的从服务器上设置`report_host`和`report_port`，并重新启动MySQL服务器。在每个从服务器上：
- en: '[PRE30]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Execute `mysqlbinlogpurge` with the `discover-slaves-login` option:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`discover-slaves-login`选项执行`mysqlbinlogpurge`：
- en: '[PRE31]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
