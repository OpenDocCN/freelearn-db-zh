- en: Chapter 1. Introducing MySQL Design
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章 介绍MySQL设计
- en: 'Data design is an essential part of the application development cycle. By analogy,
    building an application is like building a house. Having the right tools is important,
    but we need a solid foundation: the data structure. However, producing a good
    data structure can be a daunting challenge; the quest for a perfect data structure
    can lead us to new territories where many methods are available. Which one is
    the best? How can we keep our focus on the goal to achieve, without losing our
    time?'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 数据设计是应用开发周期中的关键环节。类比建筑，构建应用如同建造房屋，拥有合适的工具固然重要，但我们更需要一个坚实的基础：数据结构。然而，创造一个良好的数据结构是一项艰巨的挑战；追求完美的数据结构可能引领我们进入新领域，那里有众多方法可供选择。哪种方法最佳？我们如何保持目标明确，避免浪费时间？
- en: Data design for MySQL databases is both a science and an art, and there must
    be a good balance between the scientific and the empiric aspects of the method.
    The scientific aspect refers to information technology (IT) principles, whereas
    the empiric facet is mostly based on intuitions and experience.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL数据库的数据设计既是科学也是艺术，必须在科学和经验方法之间取得良好平衡。科学方面涉及信息技术（IT）原则，而经验方面主要基于直觉和经验。
- en: This book is primarily oriented towards MySQL databases. It teaches how to plan
    the data structure and how to implement it physically using MySQL's model. The
    planning part is sometimes referred to as *logical design*, but it is preferable
    to view the logical/physical process as a whole.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书主要面向MySQL数据库，教授如何规划数据结构并利用MySQL模型实际实施。规划阶段有时被称为*逻辑设计*，但更理想的是将逻辑/物理过程视为一体。
- en: MySQL's Popularity and Impact
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL的普及与影响
- en: MySQL ([www.mysql.com](http://www.mysql.com)), launched in 1995, has become
    the most popular open source database system. Virtually all web providers include
    MySQL as part of their hosting plan, often on the ubiquitous LAMP (Linux, Apache,
    MySQL, PHP) platform. Another root cause of MySQL's popularity has been the ongoing
    success of phpMyAdmin (www.phpmyadmin.net), a well-established MySQL web-based
    interface. Therefore many websites use MySQL as their back-end data repository.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL（[www.mysql.com](http://www.mysql.com)）自1995年推出以来，已成为最受欢迎的开源数据库系统。几乎所有网络服务提供商都将MySQL作为其托管计划的一部分，通常在无处不在的LAMP（Linux、Apache、MySQL、PHP）平台上。MySQL普及的另一根源是其持续成功的phpMyAdmin（www.phpmyadmin.net），这是一个成熟的基于Web的MySQL界面。因此，许多网站都采用MySQL作为其后端数据存储库。
- en: The Need for MySQL Design
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对MySQL设计的需求
- en: Overall, MySQL's popularity has attracted many web developers, some of them
    having no prior IT experience. When faced with the task of transforming a static
    website into a dynamic/transactional one, or integrating corporate data into the
    site, developers are sometimes inclined to improvise a data structure. This structure
    (or lack of structure) may work for a certain time but later fails because of
    lack of depth. Maybe the system initially works because it started small, with
    only a few functions planned and implemented, but falls apart when users ask more
    of it. A poorly designed data structure can only be patched to a certain extent.
    It can also have scaling issues, when the initial testing has been done with only
    a few rows of data.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，MySQL的普及吸引了众多网页开发者，其中一些并无IT背景。面对将静态网站转变为动态/交易型网站，或整合企业数据至网站的任务时，开发者有时倾向于即兴构建数据结构。这种结构（或缺乏结构）可能在一段时间内有效，但最终因缺乏深度而失败。或许系统起初因规模小、功能有限而运行良好，但当用户需求增加时便崩溃。设计不佳的数据结构只能修补到一定程度，也可能在初始测试仅涉及少量数据行时出现扩展问题。
- en: The apparent facility of using the tools may hide the fact that database design
    depends upon essential principles. Eluding them can render an application costly
    to maintain, because correcting data structural errors after application coding
    has begun is time consuming.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 使用工具的便捷性可能掩盖了数据库设计依赖于基本原则的事实。忽视这些原则可能导致应用程序维护成本高昂，因为在应用编码开始后纠正数据结构错误耗时费力。
- en: '"What do I do Next?"'
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '"接下来我该做什么？"'
- en: 'Here is an example of the impact of MySQL in the ranks of non-IT people. I
    once saw this question in a phpMyAdmin discussion forum—I am citing it from memory:
    "I''ve installed MySQL and phpMyAdmin, now I need directions: what do I do next?"
    I answered "Maybe you could create a table, and then insert some data into it.
    Next you could browse for your data."'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个MySQL在非IT人群中影响的例子。我曾在phpMyAdmin讨论论坛上看到这个问题——我是凭记忆引用的：“我安装了MySQL和phpMyAdmin，现在我需要指导：接下来我该做什么？”我回答说：“也许你可以创建一个表，然后插入一些数据。接下来你可以浏览你的数据。”
- en: Clearly, those tools were perceived as interesting by this person, but I can
    only wonder what kind of table structure came into existence after this forum
    conversation.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，这些工具被此人视为有趣，但我只能好奇在这次论坛对话后形成了什么样的表结构。
- en: Data Design Steps
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据设计步骤
- en: We can think of data design as a sequence of steps whose goal is to produce
    the physical MySQL databases, tables, and columns necessary to support an application.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将数据设计视为一系列步骤，其目标是生成支持应用程序所需的物理MySQL数据库、表和列。
- en: '![Data Design Steps](img/1302_01_01.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![数据设计步骤](img/1302_01_01.jpg)'
- en: Starting with the outer shell, we first need to learn about our data by collecting
    it. We then start to organize these data elements by naming them appropriately.
    This is followed by regrouping the data elements into tables, taking into account
    the needed keys. Whereas the previous steps could have been done only on paper,
    the final step is to implement the model within MySQL's structure.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 从外壳开始，我们首先需要通过收集数据来了解我们的数据。然后，我们开始通过适当地命名这些数据元素来组织它们。接下来，我们将数据元素重新组合成表格，考虑到所需的关键字。虽然之前的步骤可能只在纸上完成，但最后一步是在MySQL的结构中实现模型。
- en: All these steps are covered in distinct chapters of this book.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些步骤都在本书的不同章节中有所涉及。
- en: Data as a Resource
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据作为一种资源
- en: Before examining the various techniques available for design, let's think about
    the concept of data itself.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在探讨各种可用设计技术之前，我们先来思考数据本身的概念。
- en: Organizations and enterprises use many assets, for example buildings, furniture,
    brains, but perhaps the most valuable asset is information or data. We remark
    that data documents the enterprise's procedures, and binds people into an ongoing
    exchange of information, called information flow. Computers help to formalize
    this data but we have to remember that it exists by itself.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 组织和企业使用许多资产，例如建筑、家具、智慧，但或许最有价值的资产是信息或数据。我们注意到，数据记录了企业的流程，并将人们绑定到一个持续的信息交换中，称为信息流。计算机有助于规范这些数据，但我们必须记住，数据本身就存在。
- en: But this is my Data!
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 但这是我的数据！
- en: When building data designs, we have to meet users and understand the enterprise's
    data flow. In an ideal world, every department, including the IT department, and
    every user would collaborate in order to help data flow easily between departments.
    However, from time to time, one can witness two attitudes that impede the normal
    data flow in enterprises. The first one is that some IT departments, having the
    responsibility for the computers where data resides, come to think that the data
    is theirs. This has the effect of keeping a certain level of secrecy that hides
    data and can block the data design process. The second one is a variation of the
    first one, this time caused by a user—data originates from this user and he has
    a tendency not to share it.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建数据设计时，我们必须与用户会面并了解企业的数据流。在理想情况下，每个部门，包括IT部门，以及每位用户都会协作，以便数据能在部门间轻松流动。然而，不时地，人们会目睹两种态度阻碍企业内正常的数据流动。第一种是某些IT部门，由于负责存储数据的计算机，开始认为数据属于他们。这导致一定程度的保密性，隐藏数据并可能阻断数据设计过程。第二种是第一种的变体，这次是由用户引起的——数据源自该用户，他有不愿分享的倾向。
- en: As an example of this latter attitude, let's consider accounting data. Before
    the PC era, accounting systems existed inside mainframes or minicomputers, and
    the IT department managed all data including accounting data. Since the advent
    of microcomputers and spreadsheet applications, an accounting clerk can manage
    a great deal of data, producing high-quality reports about it. However, this data
    often resides on his computer; he enters it, he produces the report, and he gets
    the accolades for it from his boss. So the data belongs to the accounting clerk,
    right? This way of thinking impedes data flow between individuals and departments
    and has a tendency of leading to redundant, disjoint data throughout the organization.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种后一种态度为例，让我们考虑会计数据。在个人电脑时代之前，会计系统存在于大型机或小型机中，IT部门管理所有数据，包括会计数据。自从微型计算机和电子表格应用程序出现以来，一名会计文员就能管理大量数据，并生成高质量的报告。然而，这些数据通常存储在他的电脑上；他输入数据，他制作报告，并因此从上司那里获得赞誉。所以，数据属于会计文员，对吧？这种思维方式阻碍了个人和部门之间的数据流动，并有可能导致整个组织中出现冗余、不连贯的数据。
- en: After the data design process, bridges are built between these isolated data
    islands created by users or departments so that the data can benefit the whole
    enterprise. It may also happen that fewer islands exist and redundant data is
    eliminated.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 数据设计过程之后，会在用户或部门创建的这些孤立数据岛之间建立桥梁，以便数据能够惠及整个企业。也可能出现岛屿减少和冗余数据被消除的情况。
- en: Data Modeling
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据建模
- en: Data is normally organized into an information system. This system can be compared
    to something as simple as a loose-sheet binder, however this book describes the
    data design process in the context of computer-based information systems, or databases.
    Moreover, databases follow a design model, and we will use the most popular one—the
    **relational model**.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 数据通常被组织成信息系统。这个系统可以与简单的活页夹相比较，但这本书描述了基于计算机的信息系统或数据库中的数据设计过程。此外，数据库遵循一种设计模型，我们将使用最流行的模型——**关系模型**。
- en: The complete data collection of an enterprise is larger than what our model
    will encompass.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 企业的完整数据集合超出了我们模型的涵盖范围。
- en: '![Data Modeling](img/1302_01_02.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![数据建模](img/1302_01_02.jpg)'
- en: We will build a model that represents only a subset of the data spectrum. The
    question is which subset? We'll see in [Chapter 2](ch03.html "Chapter 2. Data
    Collecting") that we must set boundaries to the analyzed system's data scope.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将构建一个仅表示数据频谱子集的模型。问题在于选择哪个子集？我们将在[第二章](ch03.html "第二章 数据收集")中看到，我们必须为分析系统的数据范围设定边界。
- en: 'To build information systems that last, data must be tamed and molded to correctly
    represent reality. *Correctly* here means:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建持久的信息系统，数据必须被驯服和塑造，以正确地反映现实。*正确*在这里意味着：
- en: Follow the needs of the organization, including the system's boundaries
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遵循组织的需求，包括系统的边界
- en: Conform to the chosen data design model (here, the relational one)
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 符合所选的数据设计模型（这里指关系模型）
- en: Possess a high degree of adaptability to adjust itself to the changing environment
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有高度的适应性，以调整自身以适应不断变化的环境
- en: Overview of the Relational Model
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关系模型概述
- en: We owe to Dr. Edgar F. Codd the concept of the relational model, from his 1970
    paper *A Relational Model of Data for Large Shared Data Banks* ([http://www.acm.org/classics/nov95/toc.html](http://www.acm.org/classics/nov95/toc.html)).
    Dr. Codd later explained his model by defining a set of rules—the so-called Codd's
    Twelve rules ([http://en.wikipedia.org/wiki/Codd%27s_12_rules](http://en.wikipedia.org/wiki/Codd%27s_12_rules)).
    An ideal database management system (DBMS) would implement all those rules, but
    few if any do. But this is not a problem in practice since the benefits of the
    relational model are achieved even in products that do not apply all the rules.
    We are perfectly capable of building an efficient relational data design with
    currently available database products like MySQL.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要感谢埃德加·F·科德博士提出了关系模型的概念，源自他1970年的论文《大型共享数据库的关系数据模型》（[http://www.acm.org/classics/nov95/toc.html](http://www.acm.org/classics/nov95/toc.html)）。科德博士后来通过定义一组规则——所谓的科德十二条规则（[http://en.wikipedia.org/wiki/Codd%27s_12_rules](http://en.wikipedia.org/wiki/Codd%27s_12_rules)）来解释他的模型。理想的数据库管理系统（DBMS）会实现所有这些规则，但很少有能做到的。但在实践中，这并不是问题，因为即使在不完全应用所有规则的产品中，关系模型的优势也能实现。我们完全有能力使用MySQL等现有数据库产品构建高效的关系数据设计。
- en: When dealing with data design, I believe that the most important rules are number
    1 and number 2\. Here is a summary of these two Codd's rules.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理数据设计时，我认为最重要的规则是第1条和第2条。以下是这两条Codd规则的摘要。
- en: 'Rule #1'
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**规则 #1**'
- en: This rule states that data is contained in **tables**. A table logically regroups
    information about a certain subject, for example, cars. The tabular format—rows
    and columns is the important idea here. A row describes information about a single
    item, for example, a specific car, whereas a column describes a single characteristic
    (or attribute) of each item, for example, its color. We will see in [Chapter 3](ch04.html
    "Chapter 3. Data Naming") that the decomposition of data into well-adjusted columns
    is important to have a flexible and useful structure.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 本规则指出，数据包含在**表**中。表逻辑上汇总了关于某个主题的信息，例如，汽车。表格格式——行和列——是这里的重要概念。一行描述关于单个项的信息，例如，特定汽车，而一列描述每个项的单一特征（或属性），例如，其颜色。我们将在[第3章](ch04.html
    "第3章 数据命名")中看到，将数据分解成适当调整的列对于拥有一个灵活且有用的结构至关重要。
- en: The intersection of a row and a column contains the value of a specific attribute
    for a single item. We sometimes refer to this intersection as a cell containing
    our data—this is the same idea as in a spreadsheet.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 行与列的交点包含单个项的特定属性的值。我们有时将这个交点称为包含我们数据的单元格——这与电子表格中的概念相同。
- en: 'Rule #2'
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**规则 #2**'
- en: Data is not retrieved or referenced by physical location—*find the third record
    in this file*. Instead, data must be fetched by referencing a table, a unique
    key—the **primary key**—and one or many column names. For example, with the `cars`
    table, we use the car serial number to retrieve this car's color.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 数据不是通过物理位置检索或引用——*查找此文件中的第三个记录*。相反，数据必须通过引用表、唯一键——**主键**——以及一个或多个列名来获取。例如，在`cars`表中，我们使用车辆序列号来检索该车的颜色。
- en: This rule will be studied in [Chapter 4](ch05.html "Chapter 4. Data Grouping"),
    where we describe data grouping and the concept of choosing keys. Proper key choosing
    is of utmost importance.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 本规则将在[第4章](ch05.html "第4章 数据分组")中进行研究，其中我们将描述数据分组和选择键的概念。正确选择键至关重要。
- en: Simplified Design Technique
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简化设计技术
- en: 'Many years ago, I started to elaborate data structures using the relational
    model. I was using a method that could be summarized by this sentence: "determine
    where the data fits the best in the structure". Then I learned about the design
    techniques that were taught to IT specialists and evolved from the relational
    model.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 多年前，我开始使用关系模型来详细阐述数据结构。我使用的方法可以概括为这句话：“确定数据最适合放置在结构中的位置”。然后我了解到教授给IT专家的设计技术，这些技术从关系模型演变而来。
- en: The technique, which is frequently taught consists of building an **entity-relationship
    diagram**. In this kind of diagram, we represent nouns, for example, a car, a
    customer, using entities, and the relationships between them are expressed using
    verbs. An example of relationship binding two entities is "a customer buys a car".
    When the diagram is done, it must be somewhat transformed into a model consisting
    of tables and columns, using a technique called **normalization** that uses many
    steps to refine the model into an effective data structure.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 经常教授的技术包括构建一个**实体-关系图**。在这种图中，我们用实体表示名词，例如，一辆车、一个客户，并用动词表达它们之间的关系。两个实体之间关系的一个例子是“客户购买汽车”。完成图后，必须将其转换为包含表和列的模型，使用一种称为**规范化**的技术，该技术通过多个步骤将模型精炼成有效的数据结构。
- en: These techniques produce reports, diagrams, and eventually a theoretical data
    design that can be implemented physically in a DBMS.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这些技术产生报告、图表，并最终形成一个理论上可以在DBMS中物理实现的数据设计。
- en: 'When I became familiar with those traditional techniques, I thought that for
    me at least they were a loss of time. Those methods teach a way but the ultimate
    goal—a working relational database and associated documentation can be achieved
    more directly. Moreover, those techniques suffer a problem: they cannot be applied
    blindfolded and mechanically. The developer always has to **think** about data
    naming, data grouping, and choosing keys while trying to balance users'' needs
    and constraints imposed by:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当我熟悉了那些传统技术后，我认为至少对我来说，它们是在浪费时间。这些方法教授了一种方式，但最终目标——一个可运行的关系数据库及其相关文档——可以通过更直接的方式实现。此外，这些技术存在一个问题：它们不能盲目且机械地应用。开发人员总是需要**思考**数据命名、数据分组以及选择键，同时试图平衡用户需求和以下约束：
- en: the hardware
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**硬件**'
- en: the chosen database management system
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选定的数据库管理系统
- en: planned growth
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计划增长
- en: time
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间
- en: budget
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 预算
- en: I realized that the traditional techniques are taught everywhere, and I respect
    the teachers who teach them. But believe me, when it's time to deliver an application
    notwithstanding the interface itself, it's important to avoid losing time to intermediate
    by-products and go straightforward to a working prototype. Using a more direct
    method during the data design phase frees more time to refine the interface, to
    catch unforeseen needs and address them.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我意识到传统技术无处不在地被教授，我尊重那些教授它们的老师。但请相信我，当需要交付一个应用程序时，无论其界面如何，重要的是避免浪费时间在中间产物上，而是直接开发一个工作原型。在数据设计阶段采用更直接的方法可以腾出更多时间来完善界面，捕捉未预见的需要并解决它们。
- en: This book's goal is to teach the minimum principles one has to apply in order
    to build an effective data structure.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的目标是教授构建有效数据结构所需应用的最基本原则。
- en: Case Study
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 案例研究
- en: 'The various steps of data design can be explained in a very practical way by
    using two case studies. A case study is the best way of explaining ideas that
    can somewhat become too abstract without real examples. Chapters 1 through 5 are
    based on a single case study: "Car dealership". [Chapter 6](ch07.html "Chapter 6. Supplemental
    Case Study") consists of another case study that recapitulates all the notions
    seen in the previous chapters.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 通过两个案例研究，可以非常实际地解释数据设计的各个步骤。案例研究是解释那些没有真实例子就可能变得过于抽象的概念的最佳方式。第1至5章基于一个案例研究：“汽车经销商”。[第6章](ch07.html
    "第6章 补充案例研究")则包含另一个案例研究，总结了前几章中提到的所有概念。
- en: Our Car Dealer
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们的汽车经销商
- en: Suppose we've been contacted by a car dealer who wants to computerize parts
    of his business. Let's describe a little bit about this business. In [Chapter
    2](ch03.html "Chapter 2. Data Collecting"), we will examine the data collecting
    phase for our system more formally.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们已与一家希望将其业务部分计算机化的汽车经销商联系。让我们简要描述一下这家企业。在[第2章](ch03.html "第2章 数据收集")中，我们将更正式地检查我们系统的数据收集阶段。
- en: This car dealer operates at a single address. They employ nine salespersons
    who dutifully welcome potential customers and show them the car models that are
    available on the floor. In addition, two store assistants handle car movements,
    and an office clerk takes notes about customers' appointments. Fontax and Licorne
    are the two fictitious brands offered by this dealer. Each brand has a number
    of models, for example Mitsou, Wanderer, and Gazelle.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这家汽车经销商仅在一个地址运营。他们雇佣了九名销售人员，这些销售人员尽职尽责地迎接潜在客户，并向他们展示展厅内可用的车型。此外，两名店铺助理负责车辆移动，一名办公室文员记录客户的预约情况。Fontax和Licorne是该经销商提供的两个虚构品牌。每个品牌都有多种车型，例如Mitsou、Wanderer和Gazelle。
- en: The System's Goals
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 系统的目标
- en: 'We want to keep information about the cars'' inventory and sales. The following
    are some sample questions that demonstrate the kind of information our system
    will have to deal with:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望保留有关汽车库存和销售的信息。以下是一些示例问题，展示了我们的系统将需要处理的信息类型：
- en: How many cars of Fontax Mitsou 2007 do we have in stock?
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们库存中有多少辆Fontax Mitsou 2007款汽车？
- en: How many visitors test-drove the Wanderer last year?
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 去年有多少访客试驾了Wanderer？
- en: How many Wanderer cars did we sell during a certain period?
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在某一特定时期内，我们售出了多少辆Wanderer汽车？
- en: Who is our best salesperson for Mitsou, Wanderer, or overall in 2007?
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2007年，谁是我们Mitsou、Wanderer或整体销售业绩最佳的销售人员？
- en: Are buyers mostly men or women (per car model)?
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 购买者主要是男性还是女性（按车型划分）？
- en: 'Here are the titles of some reports that are needed by this car dealer:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是这家汽车经销商所需的一些报告的标题：
- en: 'Detailed sales per month: salesperson, number of cars, revenue'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每月详细销售额：销售人员、汽车数量、收入
- en: Yearly sales per salesperson
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每位销售人员的年度销售额
- en: 'Inventory efficiency: average delay for car delivery to the dealer, or to the
    customer'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 库存效率：汽车交付给经销商或客户的平均延迟时间
- en: 'Visitors report: percentage of visitors trying a car; percentage of road tests
    that lead to a sale'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访客报告：尝试驾驶汽车的访客百分比；导致销售的试驾百分比
- en: Customer satisfaction about the salesperson
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户对销售人员的满意度
- en: The sales contract
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 销售合同
- en: In addition to this, screen applications must be built to support the inventory
    and sales activities. For example, being able to consult and update the appointment
    schedule; consult the car delivery schedule for the next week.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，还需要构建屏幕应用程序以支持库存和销售活动。例如，能够查阅和更新预约日程；查阅下周的汽车交付日程。
- en: After this data model is built, the remaining phases of the application development
    cycle, such as screen and report design, will provide this car dealer with reports,
    and on-line applications to manage the car inventory and the sales in a better
    way.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在此数据模型构建完成后，应用程序开发周期的剩余阶段，如屏幕和报告设计，将为这家汽车经销商提供报告，以及在线应用程序以更好地管理汽车库存和销售。
- en: The Tale of the Too Wide Table
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*过宽表格*的故事'
- en: 'This book focuses on representing data in MySQL. The containers of tables in
    MySQL, and other products are the databases. It is quite possible to have just
    one table in a database and thus avoid fully applying the relational model concept
    in which tables are related to each other through common values; however we will
    use the model in its normal way: having many tables and creating relations between
    them.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 本书专注于在MySQL中表示数据。MySQL及其他产品中表格的容器是数据库。在数据库中仅包含一张表，从而避免完全应用关系模型概念（其中表格通过共同值相互关联）是完全可能的；然而我们将按常规方式使用模型：拥有多张表并建立它们之间的关联。
- en: Note
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This section describes an example of data crammed into one huge table, also
    called a *too wide table* because it is formed with too many columns. This *too
    wide table* is fundamentally *non-relational*.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 本节描述了一个数据被塞进一张巨大表格的例子，也称为*过宽表格*，因为它由太多列组成。这种*过宽表格*本质上*是非关系型的*。
- en: Sometimes the data structure needs to be reviewed or evaluated, as it might
    be based on poor decisions in terms of data naming conventions, key choosing,
    and the number of tables. Probably the most common problem is that the whole data
    is put into one big, wide table.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 有时需要对数据结构进行审查或评估，因为它可能基于数据命名约定、键选择和表数量方面的错误决策。最常见的问题可能是将所有数据放入一张大而宽的表格中。
- en: The reason for this common structure (or lack of structure) is that many developers
    think in terms of the results or even of the printed results. Maybe they know
    how to build a spreadsheet and try to apply spreadsheet principles to databases.
    Let's assume that the main goal of building a database is to produce this sales
    report, which shows how many cars were sold in each month, by each salesperson,
    describing the brand name, the car model number, and the name.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这种常见结构（或缺乏结构）的原因是许多开发者从结果甚至打印结果的角度思考。也许他们知道如何构建电子表格，并试图将电子表格原则应用于数据库。假设构建数据库的主要目标是生成这份销售报告，该报告展示了每个月每位销售人员销售的汽车数量，描述品牌名称、汽车型号编号和名称。
- en: '| Salesperson | Period | Brand Name | Car model number | Car model name and
    year | Quantity sold |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| Salesperson | Period | Brand Name | Car model number | Car model name and
    year | Quantity sold |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| Murray, Dan | 2006-01 | Fontax | 1A8 | Mitsou 2007 | 3 |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| Murray, Dan | 2006-01 | Fontax | 1A8 | Mitsou 2007 | 3 |'
- en: '| Murray, Dan | 2006-01 | Fontax | 2X12 | Wanderer 2006 | 7 |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| Murray, Dan | 2006-01 | Fontax | 2X12 | Wanderer 2006 | 7 |'
- en: '| Murray, Dan | 2006-02 | Fontax | 1A8 | Mitsou 2007 | 4 |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| Murray, Dan | 2006-02 | Fontax | 1A8 | Mitsou 2007 | 4 |'
- en: '| Smith, Peter | 2006-01 | Fontax | 1A8 | Mitsou 2007 | 1 |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| Smith, Peter | 2006-01 | Fontax | 1A8 | Mitsou 2007 | 1 |'
- en: '| Smith, Peter | 2006-01 | Licorne | LKC | Gazelle 2007 | 1 |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| Smith, Peter | 2006-01 | Licorne | LKC | Gazelle 2007 | 1 |'
- en: '| Smith, Peter | 2006-02 | Licorne | LKC | Gazelle 2007 | 6 |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| Smith, Peter | 2006-02 | Licorne | LKC | Gazelle 2007 | 6 |'
- en: Without thinking much about the implications of this structure, we could build
    just one table, `sales:`
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在不深入考虑这种结构的影响的情况下，我们可以仅构建一张表，`sales:`
- en: '| salesperson | brand | model_number | model_name_year | qty_2006_01 | qty_2006_02
    |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| salesperson | brand | model_number | model_name_year | qty_2006_01 | qty_2006_02
    |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| Murray, Dan | Fontax | 1A8 | Mitsou 2007 | 3 | 4 |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| Murray, Dan | Fontax | 1A8 | Mitsou 2007 | 3 | 4 |'
- en: '| Murray, Dan | Fontax | 2X12 | Wanderer 2006 | 7 |   |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| Murray, Dan | Fontax | 2X12 | Wanderer 2006 | 7 |   |'
- en: '| Smith, Peter | Fontax | 1A8 | Mitsou 2007 | 1 |   |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| Smith, Peter | Fontax | 1A8 | Mitsou 2007 | 1 |   |'
- en: '| Smith, Peter | Licorne | LKC | Gazelle 2007 | 1 | 6 |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| Smith, Peter | Licorne | LKC | Gazelle 2007 | 1 | 6 |'
- en: At first sight, we have tabularized all the information that is needed for the
    report.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 乍看之下，我们已经将报告中所需的所有信息进行了表格化。
- en: Note
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The book's examples can be reproduced using the `mysql` command-line utility,
    or phpMyAdmin, a more intuitive web interface. You can refer to *Mastering phpMyAdmin
    2.8 for Effective MySQL Management* book from Packt Publishing (ISBN 1-904811-60-6).
    In phpMyAdmin, the exact commands may be typed in using the SQL Query Window,
    or we can benefit from the menus and graphical dialogs. Both ways will be shown
    throughout the book.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的示例可通过`mysql`命令行工具或更直观的网页界面phpMyAdmin进行复现。您可以参考Packt出版社的《Mastering phpMyAdmin
    2.8 for Effective MySQL Management》（ISBN 1-904811-60-6）。在phpMyAdmin中，可以在SQL查询窗口中键入确切命令，或者利用菜单和图形对话框。本书将展示这两种方法。
- en: 'Here is the statement we would use to create the `sales` table with the `mysql`
    command-line utility:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们使用`mysql`命令行工具创建`sales`表的语句：
- en: '[PRE0]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the previous statement, while `char(40)` means a column with 40 characters,
    `int(11)` means an integer with a display width of 11 in MySQL.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在前述声明中，`char(40)`表示一个包含40个字符的列，而`int(11)`在MySQL中表示一个显示宽度为11的整数。
- en: 'Using the phpMyAdmin web interface instead, we would obtain:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 使用phpMyAdmin网页界面，我们将得到：
- en: '![The Tale of the Too Wide Table](img/1302_01_03.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![过宽表的故事](img/1302_01_03.jpg)'
- en: 'Here we have entered sample data into our `sales` table:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们已将示例数据输入到我们的`sales`表中：
- en: '[PRE1]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![The Tale of the Too Wide Table](img/1302_01_04.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![过宽表的故事](img/1302_01_04.jpg)'
- en: 'However this structure has many maintenance problems. For instance, where do
    we store the figures for March 2006? To discover some of the other problems, let''s
    examine sample SQL statements we could use on this table to query about specific
    questions, followed by the results of those statements:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这种结构存在许多维护问题。例如，我们应将2006年3月的数据存储在哪里？为了发现其他问题，让我们检查一下可以针对此表使用的示例SQL语句，以查询特定问题，以及这些语句的结果：
- en: '[PRE2]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![The Tale of the Too Wide Table](img/1302_01_05.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![过宽表的故事](img/1302_01_05.jpg)'
- en: '[PRE3]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![The Tale of the Too Wide Table](img/1302_01_06.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![过宽表的故事](img/1302_01_06.jpg)'
- en: '[PRE4]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![The Tale of the Too Wide Table](img/1302_01_07.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![过宽表的故事](img/1302_01_07.jpg)'
- en: We notice that, although we got the answers we were looking for, with the above
    SQL queries, we would have to modify column names in the queries to obtain results
    for other months. Also, it becomes tricky if we want to know the month for which
    the sales have surpassed the yearly average, because we have to potentially deal
    with twelve column names. Another problem would arise when attempting to report
    for different years, or to compare a year with another one.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们注意到，尽管上述SQL查询得到了我们寻找的答案，但为了获取其他月份的结果，我们不得不在查询中修改列名。此外，如果我们想知道哪个月份的销售额超过了年平均水平，情况会变得复杂，因为我们可能需要处理十二个列名。当尝试报告不同年份的数据，或比较两个年份时，还会出现另一个问题。
- en: Moreover, a situation that could demonstrate the poor state of this structure
    is the need for a new report. A structure that is based too closely on a single
    report instead of being based on the intrinsic relations between data elements
    does not scale well and fails to accommodate future needs.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，需要新报告的情况可能揭示了这种结构的糟糕状态。一个过于依赖单一报告而非基于数据元素间内在关系的结构，其扩展性不佳，无法满足未来需求。
- en: '[Chapter 4](ch05.html "Chapter 4. Data Grouping") will unfold those problems.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](ch05.html "第4章 数据分组")将展开这些问题。'
- en: Summary
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We saw that MySQL's popularity has put a powerful tool on the desktop of many
    users; some of them are not on par about design techniques. Data is an important
    resource and we have to think about the organization's data as a whole. The powerful
    relational model can help us for structuring activities. This book avoids specialized,
    academic vocabulary about the relational model, focusing instead on the important
    principles and the minimum tasks needed to produce a good structure. We then saw
    our main case study, and we noticed how it's unfortunately easy to build wide,
    inefficient tables.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们看到，MySQL的普及为许多用户提供了强大的工具；其中一些用户在设计技巧上并不匹配。数据是一项重要资源，我们必须将组织的数据视为整体。强大的关系模型可以帮助我们进行结构化活动。本书避免使用关于关系模型的专业学术词汇，而是专注于重要原则和构建良好结构所需的最少任务。随后，我们看到了主要案例研究，并注意到不幸的是，构建宽大低效的表是多么容易。
