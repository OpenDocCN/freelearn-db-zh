- en: Chapter 2. Data Collecting
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to structure data, one must first gather data elements and establish
    the domain to which this data applies. This chapter deals with raw data information
    that comes from the users or other sources, and the techniques that can help us
    to build a comprehensive data collection. This collection will become our input
    for all further activities like data naming and grouping.
  prefs: []
  type: TYPE_NORMAL
- en: To be able to build a data collection, we will first identify the limits of
    the system. This will be followed by gathering documents in order to find significant
    data elements. The next step will be to conduct interviews with key users in order
    to refine the list of data elements. All these steps are described in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: System Boundaries Identification
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's establish the scenario. We have been called by a local car dealer to submit
    a proposal about a new information system. The stated goal is to produce reports
    about car sales and to help track the car inventory. Reports are, of course, an
    output of the future system. The idea hidden behind reports could be to improve
    sales, to understand delivery delays, or to find out why some cars disappear.
    The data structure itself is probably not really important in the users' opinion,
    but we know that this structure matters to the developers who produce the required
    output.
  prefs: []
  type: TYPE_NORMAL
- en: 'It''s important to first look at the project scope, before starting to work
    on the details of the system. Does the project cover:'
  prefs: []
  type: TYPE_NORMAL
- en: The complete enterprise
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Just one administrative area
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiple administrative areas
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One function of the enterprise
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An organization always has a main purpose; it can be selling cars, teaching,
    or providing web solutions. In addition to this, every organization has sub-activities
    like human resource management, payroll, and marketing. The approach to data collecting
    will vary, depending upon the exact area we are dealing with. Let's say we learn
    that our car dealer also operates a repair shop, which has its own inventory,
    along with a car rental service. Do we include these inventories in our analyzing
    tasks? We have to correctly understand the place of this new information system
    in its context.
  prefs: []
  type: TYPE_NORMAL
- en: 'When preparing a data model, the biggest challenge is probably to draw a line,
    to clearly state where to stop. This is challenging for various reasons:'
  prefs: []
  type: TYPE_NORMAL
- en: Our user might have only a vague idea of what they want, of the benefits they
    expect from the new system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conflicting interests might exist between our future users; some of them might
    want to prioritize issues in a different way from others, maybe because they are
    involved with the tedious tasks that the new system promises to eliminate
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We might be tempted to improve enterprise-wide information flow beyond the scope
    of this particular project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It's not an easy task to balance user-perceived goals with the needs of the
    organization as a whole.
  prefs: []
  type: TYPE_NORMAL
- en: Modular Development
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'It is generally admitted that breaking a problem or task into smaller parts
    helps us to focus on more manageable units and, in the long run, permits us to
    achieve a better solution, and a complete solution. Having smaller segments means
    that defining each part''s purpose is simpler and that the testing process is
    easier as a smaller segment contains less details. This is why, when establishing
    the system boundaries, we should think in terms of developing by modules. In our
    case study, a simple way of dividing into modules would be the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Module 1: car sales'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Module 2: car inventory'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Delivering an information system in incremental steps can help reassure the
    customer about the final product. Defining the modules and a schedule about them
    can motivate users and also the developers. With a publicized schedule, everyone
    knows what to expect.
  prefs: []
  type: TYPE_NORMAL
- en: With the idea of modules comes the idea of budget and the notion of priorities
    for development. Do we have to deliver the car sales module before or after the
    inventory module? Can those modules be done separately? Are there some constraints
    that must be addressed, like a new report about the car sales that the Chief Executive
    Officer (CEO) needs by June 20? Another point to take into account is how the
    modules are related. Chances are good that some data will be shared between modules,
    so the data model prepared for module 1 will probably be reused and refined during
    module 2 developments.
  prefs: []
  type: TYPE_NORMAL
- en: Model Flexibility
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Another point not directly related to our user but to us as developers is:
    can the data model be built to be flexible and more general? This way, it could
    be applied to other car dealers, always keeping in mind contract issues between
    the developer and the user. (Who will own the work?) Should the data structure
    be developed with other sales domains in mind? For instance, this could lead to
    a table named `goods` instead of `cars`. Maybe this kind of generalization can
    help, maybe not, because data elements description must always remain clear.'
  prefs: []
  type: TYPE_NORMAL
- en: Document Gathering
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This step can be done before the interviews. The goal is to gather documents
    about this organization and start designing our questions for the interviews.
    Of course, a data model for car sales has some things in common with other sales
    systems, but there is a special culture about cars. Another set of documents will
    be collected during the interviews while we learn about the forms used by the
    interviewees.
  prefs: []
  type: TYPE_NORMAL
- en: General Reading
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are some reading suggestions:'
  prefs: []
  type: TYPE_NORMAL
- en: Enterprise annual report
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Corporate goals statement
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: President's speech
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Publicity material
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bulletin board
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I once learned a lot about information flow from a grocery store's bulletin
    board for the employees. There were small notes from management to employees explaining
    how to handle clients who pay by cheque (which personal information must be obtained
    from the client before the store can accept their cheque), and detailing the schedule
    for sick employees' replacement. Also explained on the board, was the procedure
    to use on the cash register to give reward points to clients who pay with the
    store's credit card. This information is sometimes more useful than an annual
    report because we are seeking details from the persons who are involved with the
    daily tasks.
  prefs: []
  type: TYPE_NORMAL
- en: Forms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The forms, which represent paperwork between the enterprise and external partners,
    or between internal departments, should be scrutinized. They can reveal a massive
    amount of data, even if further analysis shows unused, imprecise, or redundant
    data. Many organizations suffer from the *form disease*—a tendency to use too
    many paper or screen forms and to produce too complex forms. Nonetheless, if we
    are able to look at the forms currently used to convey information about the car
    inventory or car sales, for example, a purchase order from the car dealer to the
    manufacturer, we might find on these forms essential data about the purchase that
    will be useful to complete our data collection.
  prefs: []
  type: TYPE_NORMAL
- en: Existing Computerized Systems
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The car dealer has already started sales operations a number of years ago. To
    support these sales, they were probably using some kind of computerized system,
    even if this could have been only a spreadsheet. This pre-existing system surely
    contains interesting data elements. We should try to have a look at this existing
    information system, if one exists, and if we are allowed to. Regarding the data
    structuring process itself, we can learn about some data elements that are not
    seen on the paper forms. Also, this can help when the time comes to implement
    a new system by easing transition and training.
  prefs: []
  type: TYPE_NORMAL
- en: Interviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The goal for conducting interviews is to learn about the vocabulary pertaining
    to the studied system. This book is about data structures, but the information
    gathered during the interviews can surely help in subsequent activities of the
    system's development like coding, testing, and refinements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Interviews are a critical part of the whole process. In our example, a customer
    asked for a system about car sales and inventory tracking. At this point, many
    users cannot explain further what they want. The problem is exactly this: how
    can I, as a developer, find out what they want? After the interview phase, things
    become clearer since we will have gathered data elements. Moreover, often the
    customer who ordered a new system does not grasp the data flow''s full picture;
    it might also happen that this customer won''t be the one who will work with all
    aspects of the system, those which are more targeted towards clerical persons.'
  prefs: []
  type: TYPE_NORMAL
- en: Finding the Right Users
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The suggested approach would be to contact the best person for the questions
    about the new system. Sometimes, the person in charge insists that *he/she* is
    the best person, it might be true, or not. This can become delicate, especially
    if we finally meet someone who knows better, even if this is during an informal
    meeting.
  prefs: []
  type: TYPE_NORMAL
- en: 'Thinking about the following issues can help to find the best candidates:'
  prefs: []
  type: TYPE_NORMAL
- en: Who wants this system built?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Who will profit from it?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Which users would be most cooperative?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evidently, this can lead to meeting with several people to explore the various
    sub-domains. Some of these domains might intersect, with a potential negative
    impact—diverging opinions, or with a potential positive impact—validating facts
    with more than one interviewee.
  prefs: []
  type: TYPE_NORMAL
- en: Perceptions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: During the interviews, we will meet different kinds of users. Some of these
    will be very knowledgeable about the processes involved with the car dealer's
    activities, for example, meeting with a potential customer, inviting them for
    a test drive, and ordering a car. Some other users will only know a part of the
    whole process, their knowledge scope is limited. Due to the varying scope, we
    will hear different perceptions about the same subject.
  prefs: []
  type: TYPE_NORMAL
- en: For example, talking about how to identify a car, we will hear diverging opinions.
    Some will want to identify a car with its serial number; others will want to use
    their own in-house car number. They all refer to the same car with a different
    angle. These various opinions will have to be reconciled later when proceeding
    with the data naming phase.
  prefs: []
  type: TYPE_NORMAL
- en: Asking the Right Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are various ways to consider which questions are relevant and which will
    enable us to gather significant data elements.
  prefs: []
  type: TYPE_NORMAL
- en: Existing Information Systems
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Is there an existing information system: manual or computerized? What will
    happen with this existing system? Either we export relevant data from this existing
    system to feed the new one, to completely do away with the old system, or we keep
    the existing system—temporarily or permanently.'
  prefs: []
  type: TYPE_NORMAL
- en: If we must keep the existing system, we'll probably build a bridge between the
    two systems for exchanging data. In this case, do we need a one-way bridge or
    a two-way bridge?
  prefs: []
  type: TYPE_NORMAL
- en: Chronological Events
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Who orders a car for the show room and why; how is the order made—phone, fax,
    email, website; can a car in the showroom be sold to a customer?
  prefs: []
  type: TYPE_NORMAL
- en: Sources and Destinations
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here we question about information, money, bills, goods, and services. For example,
    what is the source of a car? What's its destination? Is the buyer of a car always
    an individual, or can it be another company?
  prefs: []
  type: TYPE_NORMAL
- en: Urgency
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Thinking about the current way in which you deal with information, which problems
    do you consider the most urgent to solve?
  prefs: []
  type: TYPE_NORMAL
- en: Avoid Focusing on Reports and Screens
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: An approach too centered on the (perceived) needs of the users may lead to gaps
    in the data structure, because each user does not necessarily have an accurate
    vision of all their needs or all the needs of other users. It's quite rare in
    an enterprise to find someone who grasps the whole data picture, with the complex
    inter-departmental interactions that frequently occur.
  prefs: []
  type: TYPE_NORMAL
- en: This bias will show up during the interviews. Users are usually more familiar
    with items they can *see* or visualize and less familiar with concepts. However,
    there are distinctions between the user interface (UI) and the underlying data.
    UI design considers ergonomic and aesthetic issues, whereas data structuring has
    to follow different, non-visual rules to be effective.
  prefs: []
  type: TYPE_NORMAL
- en: Data Collected for our Case Study
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here is a list, jotted down during the interviews, of potential data elements
    and details which seem important to the current information flow. It's very important
    during this collection to note, not only the data elements' names—shall we say
    "provisional names" at this point—but also sample values. The benefit of this
    will become apparent in [Chapter 3](ch04.html "Chapter 3. Data Naming"). In the
    following data collection, we include sample values in brackets where appropriate.
  prefs: []
  type: TYPE_NORMAL
- en: From the General Manager
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Our friend the General Manager keeps surveys filled by buyers about their buying
    experience as a whole. Those surveys contain remarks about the salesperson behavior.
    Evidently, this information is confidential, as only the General Manager and the
    office clerk have access to it. Survey information includes:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Date: (2006-01-02)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Salesperson''s name: (Harper, Paul)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Buyer''s name: (Smith, Joe)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The points to evaluate: courtesy, quality of information given, etc'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For each point, the mark given by the buyer from one to ten.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: From the Salesperson
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The main form prepared by a salesperson is the Sales Contract, and this person
    surely hopes to prepare plenty of these! Here are the elements present on the
    Sales Contract:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Buyer''s information: name, address, postal code, phone number'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Dealer''s information: name, address, postal code, phone number'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Salesperson information: name, address, postal code, phone number'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Quantity of vehicles for this sale (usually 1)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Car description: brand, model, year (Fontax Mitsou 2007)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Car condition: new/used'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Car serial number: (D34HTT987)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Car color: (aquamarine)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Selling price: (32,500)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Insurance company name: (MicMac Car Insurance Inc.)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Insurance policy number: (J44-5764, but each company has its own code system
    for this)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Preparation cost: (800)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Tax amount: (2,400)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Total price: (35,700)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Vehicle giving in exchange:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'brand: (Licorne)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'model: (Wanderer)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'year: (2006)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'serial number: (D45TGH45738)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'price of the exchange: (12,000)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Down payment: (4,000)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Interest rate: (9%)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Interest amount: (6345)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Type of credit rate: fixed/variable'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Dates of first and last payments: (2007-07-01, 2011-06-01)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Number of payments: (48)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Financial institution''s information: name, address, postal code, phone number'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: From the Store Assistant
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A store assistant assigns a car number to each vehicle that enters the floor.
    This helps to manage which set of keys belongs to which car, we refer to physical
    keys here—the keys needed to unlock and start the car, not the database keys.
    The car number does not refer to the car's serial number; it's assigned sequentially
    and used internally only.
  prefs: []
  type: TYPE_NORMAL
- en: 'Store assistants also prepare a delivery certificate which contains the following
    information:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Buyer''s name: (Joe Smith)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Dealer''s number: (53119)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Vehicle id number: (1400)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Key number: (81947)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Four signatures and dates, from the buyer, general manager, salesperson, and
    the store assistant
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Finally, the store assistants keep a register about all car movements. For
    each car, a card-index contains:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Id number of the car: (432)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Car ordered: date (2007-02-03)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Car arrived: date (2007-02-17)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Car placed in the show room: date (2007-02-19)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Car washed: date (2007-05-30)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Car gas tank filled-up: date (2007-05-30)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Car delivered to buyer: date (2007-06-01)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other Notes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Do we include in the model some information about the old car that the customer
    exchanges for their new car?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Boundary: during the interviews it was decided that, for now, the model will
    not include the dealer''s car rental activities, nor their repair service, although
    much of the information about cars could be applied to those activities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The subsequent chapters will put order in the naming aspects of this data and
    will explain grouping techniques.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Building a comprehensive collection of data elements is essential to the success
    of a data structuring activity. However, we need to know the exact limits of the
    analyzed system. Then, by gathering documents and proceeding with interview activities,
    we can record a list of potential data elements—our future column names.
  prefs: []
  type: TYPE_NORMAL
