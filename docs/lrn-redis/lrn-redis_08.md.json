["```go\npackage org.learningredis.chap8;\nimport java.util.Arrays;\nimport redis.clients.jedis.Jedis;\nimport redis.clients.jedis.JedisShardInfo;\nimport redis.clients.jedis.ShardedJedis;\npublic class Test {\n  public static void main(String[] args) {\n    Test test = new Test();\n    test.evaluateShard();\n  }\n  private void evaluateShard() {\n    // Configure Jedis sharded connection pool.\n    JedisShardInfo shard_1 = new JedisShardInfo(\"localhost\", 6379);\n    JedisShardInfo shard_2 = new JedisShardInfo(\"localhost\", 6380);\n    ShardedJedis shardedJedis = new ShardedJedis(Arrays.asList(shard_1, shard_2));\n    // Looping to set values in the shard we have created..\n    for (int i = 0; i < 10; i++) {\n      shardedJedis.set(\"KEY-\" + i, \"myvalue-\" + i);\n    }\n    // Lets try to read all the values from SHARD -1\n    for (int i = 0; i < 10; i++) {\n      Jedis jedis = new Jedis(\"localhost\", 6379);\n      if (jedis.get(\"KEY-\" + i) != null) {\n        System.out.println(jedis.get(\"KEY-\" + i) + \" : this is stored in SHARD-1\");\n      }\n    }\n    // Lets try to read all the values from SHARD -2\n    for (int i = 0; i < 10; i++) {\n      Jedis jedis = new Jedis(\"localhost\", 6380);\n      if (jedis.get(\"KEY-\" + i) != null) {\n        System.out.println(jedis.get(\"KEY-\" + i) + \" : this is stored in SHARD-2\");\n      }\n    }\n    // Lets try to read data from the sharded jedis.\n    for (int i = 0; i < 10; i++) {\n      if (shardedJedis.get(\"KEY-\" + i) != null) {\n        System.out.println(shardedJedis.get(\"KEY-\" + i));\n      }\n    }\n  }\n}\n```", "```go\nmyvalue-1 : this is stored in SHARD-1\nmyvalue-2 : this is stored in SHARD-1\nmyvalue-4 : this is stored in SHARD-1\nmyvalue-6 : this is stored in SHARD-1\nmyvalue-9 : this is stored in SHARD-1\nmyvalue-0 : this is stored in SHARD-2\nmyvalue-3 : this is stored in SHARD-2\nmyvalue-5 : this is stored in SHARD-2\nmyvalue-7 : this is stored in SHARD-2\nmyvalue-8 : this is stored in SHARD-2\nmyvalue-0\nmyvalue-1\nmyvalue-2\nmyvalue-3\nmyvalue-4\nmyvalue-5\nmyvalue-6\nmyvalue-7\nmyvalue-8\nmyvalue-9\n```", "```go\n    package org.learningredis.chap8;\n    import java.util.Arrays;\n    import redis.clients.jedis.Jedis;\n    import redis.clients.jedis.JedisShardInfo;\n    import redis.clients.jedis.ShardedJedis;\n    public class Test {\n      public static void main(String[] args) {\n        Test test = new Test();\n        test.evaluateShard();\n      }\n      private void evaluateShard() {\n        // Configure Jedis sharded connection pool.\n        JedisShardInfo shard_1 = new JedisShardInfo(\"localhost\", 6379);\n        JedisShardInfo shard_2 = new JedisShardInfo(\"localhost\", 6380);\n        JedisShardInfo shard_3 = new JedisShardInfo(\"localhost\", 6381);\n        ShardedJedis shardedJedis = new ShardedJedis(Arrays.asList(shard_1, shard_2, shard_3));\n        // Looping to set values in the shard we have created..\n        for (int i = 0; i < 10; i++) {\n          shardedJedis.set(\"KEY-\" + i, \"myvalue-\" + i);\n        }\n        // Lets try to read all the values from SHARD -1\n        for (int i = 0; i < 10; i++) {\n          Jedis jedis = new Jedis(\"localhost\", 6379);\n          if (jedis.get(\"KEY-\" + i) != null) {\n            System.out.println(jedis.get(\"KEY-\" + i) + \" : this is stored in SHARD-1\");\n          }\n        }\n        // Lets try to read all the values from SHARD -2\n        for (int i = 0; i < 10; i++) {\n          Jedis jedis = new Jedis(\"localhost\", 6380);\n          if (jedis.get(\"KEY-\" + i) != null) {\n            System.out.println(jedis.get(\"KEY-\" + i) + \" : this is stored in SHARD-2\");\n          }\n        }\n        // Lets try to read all the values from SHARD -3\n        for (int i = 0; i < 10; i++) {\n          Jedis jedis = new Jedis(\"localhost\", 6381);\n          if (jedis.get(\"KEY-\" + i) != null) {\n            System.out.println(jedis.get(\"KEY-\" + i) + \" : this is stored in SHARD-3\");\n          }\n        }\n        // Lets try to read data from the sharded jedis.\n        for (int i = 0; i < 10; i++) {\n          if (shardedJedis.get(\"KEY-\" + i) != null) {\n            System.out.println(shardedJedis.get(\"KEY-\" + i));\n          }\n        }\n      }\n    }\n    ```", "```go\n    myvalue-1 : this is stored in SHARD-1\n    myvalue-2 : this is stored in SHARD-1\n    myvalue-4 : this is stored in SHARD-1\n    myvalue-6 : this is stored in SHARD-1\n    myvalue-9 : this is stored in SHARD-1\n    myvalue-0 : this is stored in SHARD-2\n    myvalue-3 : this is stored in SHARD-2\n    myvalue-5 : this is stored in SHARD-2\n    myvalue-7 : this is stored in SHARD-2\n    myvalue-8 : this is stored in SHARD-2\n    myvalue-4 : this is stored in SHARD-3\n    myvalue-6 : this is stored in SHARD-3\n    myvalue-7 : this is stored in SHARD-3\n    myvalue-8 : this is stored in SHARD-3\n    myvalue-9 : this is stored in SHARD-3\n    myvalue-0\n    myvalue-1\n    myvalue-2\n    myvalue-3\n    myvalue-4\n    myvalue-5\n    myvalue-6\n    myvalue-7\n    myvalue-8\n    myvalue-9\n    ```", "```go\n    The response in the output console should be as follows \n    myvalue-1 : this is stored in SHARD-1\n    myvalue-2 : this is stored in SHARD-1\n    myvalue-0 : this is stored in SHARD-2\n    myvalue-3 : this is stored in SHARD-2\n    myvalue-5 : this is stored in SHARD-2\n    myvalue-4 : this is stored in SHARD-3\n    myvalue-6 : this is stored in SHARD-3\n    myvalue-7 : this is stored in SHARD-3\n    myvalue-8 : this is stored in SHARD-3\n    myvalue-9 : this is stored in SHARD-3\n    myvalue-0\n    myvalue-1\n    myvalue-2\n    myvalue-3\n    myvalue-4\n    myvalue-5\n    myvalue-6\n    myvalue-7\n    myvalue-8\n    myvalue-9\n    ```", "```go\n    package simple.sharded;\n    import redis.clients.jedis.Jedis;\n    public class TestSentinel {\n          public static void main(String[] args) {\n            TestSentinel testSentinel = new TestSentinel();\n                testSentinel.evaluate();\n          }\n\n          private void evaluate() {\n                System.out.println(\"-- start the test ---------\");\n                this.writeToMaster(\"a\",\"apple\");\n                this.readFromMaster(\"a\");\n                this.readFromSlave(\"a\");\n                this.writeToSlave(\"b\", \"ball\");\n                this.stopMaster();\n\n                this.sentinelKicks();\n                try{\n                this.readFromMaster(\"a\");\n                }catch(Exception e){\n                  System.out.println(e.getMessage());\n                }\n                this.readFromSlave(\"a\");\n                this.sentinelKicks();\n                this.sentinelKicks();\n                this.writeToSlave(\"b\", \"ball\");\n                this.readFromSlave(\"b\");\n                System.out.println(\"-- end of test ------ -----\");\n         }\n         private void sentinelKicks() {\n                try {\n                       Thread.currentThread().sleep(10000);\n                } catch (InterruptedException e) {\n                       e.printStackTrace();\n                }\n         }\n         private void stopMaster() {\n           Jedis jedis =  ConnectionUtill.getJedisConnection(\"10.207.78.5\", 6381);\n             jedis.shutdown();\n         }\n         private void writeToSlave(String key , String value) {\n             Jedis jedis =  ConnectionUtill.getJedisConnection(\"10.207.78.5\", 6382);\n             try{\n               System.out.println(jedis.set(key, value));\n             }catch(Exception e){\n               System.out.println(e.getMessage());\n\n             }\n         }\n         private void readFromSlave(String key) {\n             Jedis jedis =  ConnectionUtill.getJedisConnection(\"10.207.78.5\", 6382);\n             String value = jedis.get(key);\n             System.out.println(\"reading value of '\" + key + \"' from slave is :\" + value);\n         }\n         private void readFromMaster(String key) {\n             Jedis jedis =  ConnectionUtill.getJedisConnection(\"10.207.78.5\", 6381);\n             String value = jedis.get(key);\n             System.out.println(\"reading value of '\" + key + \"' from master is :\" + value);\n         }\n         private void writeToMaster(String key , String value) {\n             Jedis jedis =  ConnectionUtill.getJedisConnection(\"10.207.78.5\", 6381);\n             System.out.println(jedis.set(key, value));\n         }\n    }\n    ```", "```go\n        sentinel monitor slave2master 127.0.0.1 6382 1\n        sentinel down-after-milliseconds slave2master 10000\n        sentinel failover-timeout slave2master 900000\n        sentinel can-failover slave2master yes\n        sentinel parallel-syncs slave2master 1\n        ```"]