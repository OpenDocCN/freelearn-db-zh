["```go\n    $ mongoimport --type csv -d test -c postalCodes --headerline --drop pincodes.csv\n\n    ```", "```go\n    > db.postalCodes.count()\n\n    ```", "```go\n2015-05-19T06:51:54.131+0000\tconnected to: localhost\n2015-05-19T06:51:54.132+0000\tdropping: test.postalCodes\n2015-05-19T06:51:54.810+0000\timported 39732 documents\n\n```", "```go\n    > db.postalCodes.count()\n\n    ```", "```go\n    > db.postalCodes.findOne()\n\n    ```", "```go\n    > db.postalCodes.find().pretty()\n\n    ```", "```go\n    > db.postalCodes.find({}, {_id:0, city:1, state:1, pincode:1}).skip(90).limit(10)\n\n    ```", "```go\n    > db.postalCodes.find({state:'Gujarat'},{_id:0, city:1, state:1, pincode:1}).sort({city:1}).limit(10)\n\n    ```", "```go\n> db.postalCodes.find({}, {_id:0, city:1, state:1, pincode:1}).skip(90).limit(10) \n\n```", "```go\n    $ mongo --shell updAndDelTest.js\n\n    ```", "```go\n    > prepareTestData()\n\n    ```", "```go\n    > db.updAndDelTest.find({}, {_id:0})\n\n    ```", "```go\n    > db.updAndDelTest.update({x:1}, {$set:{y:0}})\n\n    ```", "```go\n    > db.updAndDelTest.find({x:1}, {_id:0})\n\n    ```", "```go\n    > db.updAndDelTest.update({x:1}, {$set:{y:0}}, {multi:true})\n\n    ```", "```go\n    > db.updAndDelTest.remove({x:1})\n\n    ```", "```go\n    > db.updAndDelTest.find({x:1}, {_id:0})\n\n    ```", "```go\n    > db.postalCodes.find({state:'Maharashtra'}).explain('executionStats')\n\n    ```", "```go\n    > db.postalCodes.find({state:'Maharashtra'}).limit(100).explain()\n\n    ```", "```go\n    > db.postalCodes.createIndex({state:1, pincode:1})\n\n    ```", "```go\n    > db.postalCodes.find({state:'Maharashtra'}).explain()\n\n    ```", "```go\n    > db.postalCodes.find({state:'Maharashtra'}, {pincode:1, _id:0}).explain()\n\n    ```", "```go\ndb.postalCodes.find({state:'Maharashtra'}).explain()\n\n```", "```go\n{\n        \"stage\" : \"COLLSCAN\",\n...\n        \"nReturned\" : 6446,\n        \"totalDocsExamined \" : 39732, \n          \u2026\n    \"docsExamined\" : 39732, \n          \u2026\n\n        \"executionTimeMillis\" : 12,\n\u2026        \n}\n```", "```go\n> db.postalCodes.find({state:'Maharashtra'}).limit(100).explain()\n\n{\n \"stage\" : \"COLLSCAN\",\u2026\n \"nReturned\" : 100,\n \"totalDocsExamined\" : 19951,\n\n \u2026\n \"docsExamined\" : 19951,\n \u2026\n \"executionTimeMillis\" : 8,\n \u2026\n}\n\n```", "```go\n{\n\"executionStages\" : {\n \"stage\" : \"FETCH\",\n\u2026\n\"inputStage\" : {\n \"stage\" : \"IXSCAN\",\n\u2026\n \"nReturned\" : 6446,\n \"totalDocsExamined\" : 6446,\n \"docsExamined\" : 6446,\n \u2026\n \"executionTimeMillis\" : 4,\n\u2026\n}\n\n```", "```go\ndb.postalCodes.find({state:'Maharashtra'}, {pincode:1, _id:0}).explain()\n\n```", "```go\n{\n\"executionStages\" : {\n \"stage\" : \"PROJECTION\",\n\u2026\n\"inputStage\" : {\n \"stage\" : \"IXSCAN\",\n\u2026\n \"nReturned\" : 6446,\n \"totalDocsExamined\" : 0,\n \"totalKeysExamined\": 6446\n \"executionTimeMillis\" : 4,\n\u2026\n}\n\n```", "```go\nfor(i = 0; i < 5000000 ; i++) {\n  doc = {}\n  doc._id = i\n  doc.value = 'Some text with no meaning and number ' + i + ' in between'\n  db.indexTest.insert(doc)\n}\n```", "```go\n{ _id:0, value:\"Some text with no meaning and number 0 in between\" }\n```", "```go\ndb.indexTest.count()\n```", "```go\n    > db.indexTest.createIndex({value:1})\n\n    ```", "```go\n    > db.indexTest.findOne()\n\n    ```", "```go\n    > db.indexTest.dropIndex({value:1})\n\n    ```", "```go\n    > db.indexTest.createIndex({value:1}, {background:true})\n\n    ```", "```go\n    > db.indexTest.findOne()\n\n    ```", "```go\n    > db.indexTest.find({value:\"Some text with no meaning and number 0 in between\"}).explain()\n\n    ```", "```go\n    > db.indexTest.createIndex({value:1})\n\n    ```", "```go\n    > db.person.insert({name:'Amol'})\n\n    ```", "```go\n    > createSparseIndexData()\n\n    ```", "```go\n    > db.sparseTest.find({}, {_id:0})\n\n    ```", "```go\n    > db.sparseTest.find({y:{$ne:2}}, {_id:0}).limit(15)\n\n    ```", "```go\n    > db.sparseTest.createIndex({y:1}, {unique:1})\n\n    ```", "```go\n    > db.sparseTest.createIndex({y:1}, {unique:1, sparse:1})\n\n    ```", "```go\n    > db.sparseTest.getIndexes()\n\n    ```", "```go\n    >db.sparseTest.find({y:{$ne:2}},{_id:0}).limit(15).hint({$natural:1})\n\n    ```", "```go\n> db.sparseTest.find({y:{$ne:2}}, {_id:0}).limit(15)\n{ \"x\" : 1 }\n{ \"x\" : 2 }\n{ \"x\" : 3, \"y\" : 1 }\n{ \"x\" : 4 }\n{ \"x\" : 5 }\n{ \"x\" : 7 }\n{ \"x\" : 8 }\n{ \"x\" : 9, \"y\" : 3 }\n{ \"x\" : 10 }\n{ \"x\" : 11 }\n{ \"x\" : 12, \"y\" : 4 }\n{ \"x\" : 13 }\n{ \"x\" : 14 }\n{ \"x\" : 15, \"y\" : 5 }\n{ \"x\" : 16 }\n\n```", "```go\n> db.sparseTest.find({y:{$ne:2}}, {_id:0}).hint({y:1}).limit(15)\n{ \"x\" : 3, \"y\" : 1 }\n{ \"x\" : 9, \"y\" : 3 }\n{ \"x\" : 12, \"y\" : 4 }\n{ \"x\" : 15, \"y\" : 5 }\n{ \"x\" : 18, \"y\" : 6 }\n{ \"x\" : 21, \"y\" : 7 }\n{ \"x\" : 24, \"y\" : 8 }\n{ \"x\" : 27, \"y\" : 9 }\n{ \"x\" : 30, \"y\" : 10 }\n{ \"x\" : 33, \"y\" : 11 }\n{ \"x\" : 36, \"y\" : 12 }\n{ \"x\" : 39, \"y\" : 13 }\n{ \"x\" : 42, \"y\" : 14 }\n{ \"x\" : 45, \"y\" : 15 }\n{ \"x\" : 48, \"y\" : 16 }\n\n```", "```go\n>db.sparseTest.find({y:{$ne:2}}, {_id:0}). hint({y:1}).limit(15).explain()\n\n```", "```go\n    > addTTLTestData()\n\n    ```", "```go\n    > db.ttlTest.createIndex({createDate:1}, {expireAfterSeconds:300})\n\n    ```", "```go\n    > db.ttlTest.find()\n\n    ```", "```go\n    > addTTLTestData2()\n\n    ```", "```go\n    > db.ttlTest2.createIndex({expiryDate :1}, {expireAfterSeconds:0})\n\n    ```", "```go\n    > db.ttlTest2.find()\n\n    ```"]