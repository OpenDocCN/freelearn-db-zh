["```go\n    $ mongo <host-name>/mongolab-test \u2013u testUser \u2013p testUser\n\n    ```", "```go\n    > db\n\n    ```", "```go\n    > db.messages.insert({_id:1, message:'Hello mongolab'})\n\n    ```", "```go\n    > db.messages.findOne()\n\n    ```", "```go\n    {\n        \"id\": \"_id\",\n        \"Message Text\": \"message\"\n    }\n    ```", "```go\n{\n  <display column 1> : <name of the field in the JSON document> ,\n  <display column 2> : <name of the field in the JSON document> ,\n\n  <display column n> : <name of the field in the JSON document> \n}\n```", "```go\n{\n    \"id\": \"_id\",\n    \"Message Text\": \"message\"\n}\n```", "```go\n    $ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10\n\n    ```", "```go\n    $ echo \"deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.0 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.0.list\n\n    ```", "```go\n    $ sudo apt-get install mongodb-org\n\n    ```", "```go\n    $ sudo mkdir /data /log\n\n    ```", "```go\n    $ sudo mongod --dbpath /data --logpath /log/mongodb.log --smallfiles --oplogsize 50 \u2013fork\n\n    ```", "```go\n    $ tail /log/mongodb.log\n    2015-05-04T13:41:16.533+0000 [initandlisten] journal dir=/data/journal\n    2015-05-04T13:41:16.534+0000 [initandlisten] recover : no journal files present, no recovery needed\n    2015-05-04T13:41:16.628+0000 [initandlisten] waiting for connections on port 27017\n\n    ```", "```go\n    $ mongo\n    > db.ec2Test.insert({_id: 1, message: 'Hello World !'})\n    > db.ec2Test.findOne()\n\n    ```", "```go\n    $ wget -qO- https://get.docker.com/ | sh\n\n    ```", "```go\n    $ service docker start \n    > docker start/running, process 24369\n\n    ```", "```go\n    $ docker info\n    > Containers: 40\n    > Images: 311\n    > Storage Driver: aufs\n    >  Root Dir: /var/lib/docker/aufs\n    >  Dirs: 395\n    > Execution Driver: native-0.2\n    > Kernel Version: 3.13.0-37-generic\n    > Operating System: Ubuntu 14.04.2 LTS\n    > WARNING: No swap limit support\n\n    ```", "```go\n    $ docker pull mongo\n\n    ```", "```go\n    $ docker images | grep mongo\n\n    ```", "```go\n    $ docker run -d  --name mongo-server-1 mongo\n    > dfe7684dbc057f2d075450e3c6c96871dea98ff6b78abe72944360f4c239a72e\n\n    ```", "```go\n    $ docker inspect mongo-server-1 | grep IPAddress\n    > \"IPAddress\": \"172.17.0.3\",\n\n    ```", "```go\n    $ mongo  172.17.0.3\n    >MongoDB shell version: 3.0.4\n    > connecting to: 172.17.0.3/test\n    > \n\n    ```", "```go\n    $ mkdir \u2013p /data/db2\n\n    ```", "```go\n    $ docker run -d --name mongo-server-2 -v /data/db1:/data/db mongo\n\n    ```", "```go\n    $ docker inspect mongo-server-2 | grep IPAddress\n    > \"IPAddress\": \"172.17.0.4\",\n    $ mongo  172.17.0.4\n    >MongoDB shell version: 3.0.4\n    > connecting to: 172.17.0.4/test\n    > \n\n    ```", "```go\n    $ mkdir \u2013p /data/db3 \n\n    ```", "```go\n    $ docker run -d --name mongo-server-3  -v /data/db3:/data/db -p 9999:27017 mongo\n\n    ```", "```go\n    $ mongo localhost:9999\n    > MongoDB shell version: 3.0.4\n    > connecting to: localhost:9999/test\n\n    ```"]