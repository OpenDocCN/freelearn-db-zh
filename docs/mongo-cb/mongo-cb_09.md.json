["```go\n{\n  name:\"\u2026\",\n  age:..,\n  address:{lineOne:\"\u2026\", \u2026}\n}\n```", "```go\n    $ mvn clean test\n\n    ```", "```go\n  <mongo:repositories base-package=\"com.packtpub.mongo.cookbook\" />\n  <mongo:mongo id=\"mongo\" host=\"localhost\" port=\"27017\"/>\n  <mongo:db-factory id=\"factory\" dbname=\"test\" mongo-ref=\"mongo\"/>\n  <mongo:template id=\"mongoTemplate\" db-factory-ref=\"factory\"/>  \n```", "```go\npublic interface PersonRepository extends PagingAndSortingRepository<Person, Integer>{\n\n  /**\n   *\n   * @param lastName\n   * @return\n   */\n  Person findByLastName(String lastName);\n}\n```", "```go\n> use test\n> db.person.findOne({_id:1})\n{\n \"_id\" : 1,\n \"_class\" : \"com.packtpub.mongo.cookbook.domain.Person\",\n \"firstName\" : \"Steve\",\n \"lastName\" : \"Johnson\",\n \"age\" : 20,\n \"gender\" : \"Male\"\n \u2026\n}\n\n```", "```go\n> use test\n> db.personTwo.findOne({firstName:'Amit'})\n{\n \"_id\" : 2,\n \"_class\" : \"com.packtpub.mongo.cookbook.domain.Person2\",\n \"firstName\" : \"Amit\",\n \"lastName\" : \"Sharma\",\n \"age\" : 25,\n \"gender\" : \"Male\",\n \"residentialAddress\" : {\n \"addressLineOne\" : \"20, Central street\",\n \"city\" : \"Mumbai\",\n \"state\" : \"Maharashtra\",\n \"country\" : \"India\",\n \"zip\" : \"400101\"\n }\n}\n\n```", "```go\nnew Query(Criteria.where(\"lastName\").is(\"Johnson\"))\n\n```", "```go\nnew Query(Criteria.where(\"age\").lt(30).and(\"gender\").is(\"Female\"))\n\n```", "```go\n{'$set' : {'youngCustomer' : true}}\n\n```", "```go\nnew Update().set(\"youngCustomer\", true)\n\n```", "```go\n{\n        \"_id\" : ObjectId(\"539743b26412fd18f3510f1b\"),\n        \"postOfficeName\" : \"A S D Mello Road Fuller Marg\",\n        \"pincode\" : 400001,\n        \"districtsName\" : \"Mumbai\",\n        \"city\" : \"Mumbai\",\n        \"state\" : \"Maharashtra\"\n}\n```", "```go\n[\n{'$project':{'state':1, '_id':0}},\n{'$group':{'_id':'$state', 'count':{'$sum':1}}}\n{'$sort':{'count':-1}},\n{'$limit':5}\n]\n```", "```go\nAggregation aggregation = newAggregation(\n\n    project(\"state\", \"_id\"),\n    group(\"state\").count().as(\"count\"),\n    sort(Direction.DESC, \"count\"),\n    limit(5)  \n);\n\nAggregationResults<DBObject> results = mongoTemplate.aggregate(\n    aggregation,\n    \"postalCodes\",\n    DBObject.class);\n```", "```go\n    $ mvn clean test\n\n    ```", "```go\n    > use test\n    > db.personJPA.find().pretty()\n\n    ```", "```go\n{\n        \"_id\" : NumberLong(2),\n        \"residentialAddress\" : {\n                \"residentialAddress_zipCode\" : \"400101\",\n                \"residentialAddress_state\" : \"Maharashtra\",\n                \"residentialAddress_country\" : \"India\",\n                \"residentialAddress_city\" : \"Mumbai\",\n                \"residentialAddress_addressLineOne\" : \"20, Central street\"\n        },\n        \"lastName\" : \"Sharma\",\n        \"gender\" : \"Male\",\n        \"firstName\" : \"Amit\",\n        \"age\" : 25\n}\n```", "```go\n@Entity\n@Table(name=\"personJPA\")\npublic class Person {\n```", "```go\n<persistence-unit name=\"DataNucleusMongo\">\n  <class>com.packtpub.mongo.cookbook.domain.Person</class>\n  <properties>\n    <property name=\"javax.persistence.jdbc.url\" value=\"mongodb:localhost:27017/test\"/>\n  </properties>\n</persistence-unit>\n```", "```go\n<plugin>\n  <groupId>org.datanucleus</groupId>\n  <artifactId>datanucleus-maven-plugin</artifactId>\n  <version>4.0.0-release</version>\n  <configuration>\n    <log4jConfiguration>${basedir}/src/main/resources/log4j.properties</log4jConfiguration>\n    <verbose>true</verbose>\n  </configuration>\n  <executions>\n    <execution>\n      <phase>process-classes</phase>\n      <goals>\n        <goal>enhance</goal>\n      </goals>\n    </execution>\n  </executions>\n</plugin>\n```", "```go\n    mvn spring-boot:run\n\n    ```", "```go\n    [INFO] Attaching agents: []\n\n    ```", "```go\n    {\n      \"_links\" : {\n        \"self\" : {\n          \"href\" : \"http://localhost:8080/people{?page,size,sort}\",\n          \"templated\" : true\n        },\n        \"search\" : {\n          \"href\" : \"http://localhost:8080/people/search\"\n        }\n      },\n      \"page\" : {\n        \"size\" : 20,\n        \"totalElements\" : 0,\n        \"totalPages\" : 0,\n        \"number\" : 0\n      }\n    }\n    ```", "```go\n    {\"lastName\":\"Cruise\", \"firstName\":\"Tom\", \"age\":52, \"id\":1}.\n\n    ```", "```go\n@RepositoryRestResource(path=\"people\")\npublic interface PersonRepository extends PagingAndSortingRepository<Person, Integer> {\n```", "```go\nPerson findByLastName(@Param(\"lastName\") String lastName);\n```", "```go\n    $ mongoimport --type json personTwo.json -c personTwo -d test \u2013drop\n    $ mongoimport --type csv -c postalCodes -d test pincodes.csv --headerline \u2013drop\n\n    ```", "```go\n    {\n      \"_id\" : 1,\n      \"_class\" : \"com.packtpub.mongo.cookbook.domain.Person2\",\n      \"firstName\" : \"Steve\",\n      \"lastName\" : \"Johnson\",\n      \"age\" : 30,\n      \"gender\" : \"Male\",\n      \"residentialAddress\" : {\n        \"addressLineOne\" : \"20, Central street\",\n        \"city\" : \"Sydney\",\n        \"state\" : \"NSW\",\n        \"country\" : \"Australia\"\n      }\n    }\n    ```", "```go\n        [ 11:17:07 PM ]\n        db.postalCodes.find({ \"city\" : /Mumbai/i }).limit(50);\n        db.postalCodes.find({ \"city\" : /Mumbai/i }).limit(50).explain();\n\n        ```", "```go\n        {\n          \"_id\" : 4, \n          \"firstName\" : \"Jack\",\n          \"lastName\" : \"Jones\",\n         \"age\" : 35,\n         \"gender\" : \"Male\" \n        }\n        ```", "```go\n        {'$project' : {'state':1, '_id':0}},\n        {'$group': {'_id':'$state', 'count':{'$sum':1}}},\n        {'$sort':{'count':-1}},\n        {'$limit':5}\n        ```", "```go\n        function Map() {\n          emit(this.state, 1)\n        }\n        ```", "```go\n        function Reduce(key, values) {\n          return Array.sum(values)\n        }\n        ```", "```go\n        db.mongoVue_mr.find().sort({value:-1}).limit(5)\n        ```"]