["```js\nC:\\>ping mongodb.com\nPinging mongodb.com [52.206.222.245] with 32 bytes of data:\nReply from 52.206.222.245: bytes=32 time=241ms TTL=48\nReply from 52.206.222.245: bytes=32 time=242ms TTL=48\nReply from 52.206.222.245: bytes=32 time=243ms TTL=48\nPing statistics for 52.206.222.245:\n\u00a0\u00a0\u00a0\u00a0Packets: Sent = 3, Received = 3, Lost = 0 (0% loss),\nApproximate round trip times in milli-seconds:\n\u00a0\u00a0\u00a0\u00a0Minimum = 241ms, Maximum = 250ms, Average = 244ms\n```", "```js\nC:\\>mongo --help\nMongoDB shell version v4.4.0\nusage: mongo [options] [db address] [file names (ending in .js)]\ndb address can be:\n\u00a0\u00a0foo                   foo database on local machine\n\u00a0\u00a0192.168.0.5/foo       foo database on 192.168.0.5 machine\n\u00a0\u00a0192.168.0.5:9999/foo  foo database on 192.168.0.5 machine on port 9999\n\u00a0\u00a0mongodb://192.168.0.5:9999/foo  connection string URI can also be used\nOptions:\n\u00a0\u00a0--ipv6                               enable IPv6 support (disabled by\n....\n```", "```js\n    C:\\>mongo \"mongodb+srv://cluster0.u7n6b.mongodb.net/test\" --username admindb\n    ```", "```js\n    MongoDB shell version v4.4.0\n    Enter password:\n    connecting to: mongodb://cluster0-shard-00-00.u7n6b.mongodb.net:27017,cluster0-\n    Implicit session: session { \"id\" : UUID(\"7407ce65-d9b6-4d92-87b2-754a844ae0e7\") }\n    MongoDB server version: 4.2.8\n    WARNING: shell and server versions do not match\n    MongoDB Enterprise atlas-rzhbg7-shard-0:PRIMARY>\n    ```", "```js\n    MongoDB Enterprise atlas-rzhbg7-shard-0:PRIMARY>\n    ```", "```js\n    # Check Python version \u2013 3.6+\n    # On Windows\n    C:\\>python --version\n    Python 3.7.3\n    # On MacOS or Linux OS\n    $ python3 --version\n    ```", "```js\n    # Check PIP version\n    # On Windows\n    C:\\>pip --version\n    pip 19.2.3 from C:\\Python\\Python37\\site-packages\\pip (python 3.7)\n    # On MacOS and Linux\n    $ pip3 --version\n    ```", "```js\n    # Install PyMongo client on Windows\n    C:\\>pip install pymongo\n    # Install PyMongo client on MacOS and Linux\n    $ pip3 install pymongo\n    # Example output (Windows OS)\n    C:\\>pip install pymongo\n    Collecting pymongo\n    \u00a0\u00a0Downloading https://files.pythonhosted.org/packages/c9/36/715c4ccace03a20cf7e8f15a670f651615744987af62fad8b48bea8f65f9/pymongo-3.9.0-cp37-cp37m-win_amd64.whl (351kB)\n    \u00a0\u00a0\u00a0\u00a0\u00a0358kB 133kB/s\n    Installing collected packages: pymongo\n    Successfully installed pymongo-3.9.0\n    ```", "```js\n    # Install dnspython on Windows OS\n    C:\\> pip install dnspython\n    # Install dnspython on MacOS and Linux\n    $ pip3 install dnspython\n    # Example output (Windows OS)\n    C:\\> pip install dnspython\n    Collecting dnspython\n    \u00a0\u00a0Using cached https://files.pythonhosted.org/packages/ec/d3/3aa0e7213ef72b8585747aa0e271a9523e713813b9a20177ebe1e939deb0/dnspython-1.16.0-py2.py3-none-any.whl\n    Installing collected packages: dnspython\n    Successfully installed dnspython-1.16.0\n    ```", "```js\n    mongodb+srv://admindb:<password>@<server_link>/<database_name>\n    ```", "```js\n    # Python 3 script to test MongoDB connection\n    # MongoDB Atlas connection string needs to be edited with your connection\n    from pymongo import MongoClient\n    uri=\"mongodb+srv://admindb:xxxxxx@cluster0-u7xxx.mongodb.net/test?retryWrites=true&w=majority\"\n    client = MongoClient(uri)\n    # switch to mflix database\n    mflix = client['sample_mflix']\n    # list collection names\n    print('Mflix Collections: ')\n    for name in mflix.list_collection_names(): \n    \u00a0\u00a0print(name)\n    ```", "```js\n    \"python C:\\Temp\\mongo4_atlas.py\"\n    ```", "```js\n    \"$ python3 ./mongo4_atlas.py \" \n    ```", "```js\n    C:\\>python C:\\Temp\\mongo4_atlas.py \n    Mflix Collections: \n    comments\n    users\n    theaters\n    sessions\n    movies\n    >>>\n    ```", "```js\n>>> db.runCommand( { <db_command> } )\n```", "```js\n>>> db.runCommand( {currentOp: 1} )\n```", "```js\n>>> db.getCollectionNames()\n```", "```js\n    >>> use sample_mflix\n    ```", "```js\n    >>> db.getCollectionNames()\n    ```", "```js\n    db.createView(\n    \u00a0\u00a0\u00a0\"short_movie_info\",\n    \u00a0\u00a0\u00a0\"movies\",\n    \u00a0\u00a0\u00a0[ { $project: { \"year\": 1, \"title\":1, \"plot\":1}}]\n    )\n    ```", "```js\n    MongoDB Enterprise Cluster0-shard-0:PRIMARY> db.createView(\n    ...    \"short_movie_info\",\n    ...    \"movies\",\n    ...    [ { $project: { \"year\": 1, \"title\":1, \"plot\":1}}]\n    ... )\n    ```", "```js\n    # Command Output\n    {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"ok\" : 1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"operationTime\" : Timestamp(1569982200, 1),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"$clusterTime\" : {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"clusterTime\" : Timestamp(1569982200, 1),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"signature\" : {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"hash\" : BinData(0,\"brozBUoH099xryq5l439woGcL3o=\"),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"keyId\" : NumberLong(\"6728292437866840066\")\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```js\n    >>> db.getCollectionNames()\n    ```", "```js\n    >>> db.short_movie_info.findOne()\n    ```", "```js\nC:\\> mongo \"mongodb+srv://cluster0.u7n##.mongodb.net/admin\" --username Mark\n```"]