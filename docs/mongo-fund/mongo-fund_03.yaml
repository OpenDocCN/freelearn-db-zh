- en: 3\. Servers and Clients
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 服务器和客户端
- en: Overview
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 概述
- en: This chapter introduces network and database access security for the MongoDB
    Atlas Cloud service. You will learn about MongoDB clients and how you can connect
    clients to cloud databases to run MongoDB commands. You will create and manage
    user authentication and authorization using Atlas Cloud security configuration
    and create a user account for MongoDB database. After you connect to MongoDB database,
    you will explore the Compass GUI client for MongoDB Server commands.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了MongoDB Atlas Cloud服务的网络和数据库访问安全性。您将了解MongoDB客户端以及如何连接客户端到云数据库以运行MongoDB命令。您将使用Atlas
    Cloud安全配置创建和管理用户身份验证和授权，并为MongoDB数据库创建用户帐户。连接到MongoDB数据库后，您将探索用于MongoDB服务器命令的Compass
    GUI客户端。
- en: Introduction
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: We have explored the basics of the MongoDB database in the cloud, and have seen
    how MongoDB is different from other databases. *Chapter 2*, *Documents and Data
    Types* explained the data structures used in MongoDB. By now, you know how to
    connect to your MongoDB Atlas Console and how to browse the database using Data
    Explorer. In this chapter, you will continue your journey into the world of MongoDB,
    and connect and access the new MongoDB database and discover its internal architecture
    and commands.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在云中探索了MongoDB数据库的基础知识，并了解了MongoDB与其他数据库的不同之处。*第2章*，*文档和数据类型*解释了MongoDB中使用的数据结构。到目前为止，您已经知道如何连接到您的MongoDB
    Atlas控制台，以及如何使用数据浏览器浏览数据库。在本章中，您将继续探索MongoDB的世界，并连接和访问新的MongoDB数据库，发现其内部架构和命令。
- en: In today's world, internet and cloud computing are the main driving forces that
    dictate the rules for existing and future applications. So far, we have learned
    that MongoDB Atlas is a powerful cloud version of MongoDB, offering performance,
    security, and flexibility for clients. While cloud infrastructure provides many
    benefits for users, it also increases the security risk associated with data stored
    in the cloud. Cybersecurity incidents are frequently seen on the news. One such
    incident occurred with the Target Corporation in 2013, when they became the victim
    of a large cyber attack and the personal data of over 100 million customers was
    stolen.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在当今世界，互联网和云计算是现有和未来应用程序制定规则的主要驱动力。到目前为止，我们已经了解到MongoDB Atlas是MongoDB的强大云版本，为客户提供性能、安全性和灵活性。虽然云基础设施为用户提供了许多好处，但也增加了与存储在云中的数据相关的安全风险。网络安全事件经常在新闻中出现。2013年，塔吉特公司成为大规模网络攻击的受害者，超过1亿客户的个人数据被盗。
- en: One of the advantages of the MongoDB Atlas service is that many security features
    are enabled by default, thus protecting against attacks over the internet. Therefore,
    it is very important to understand the basics of configuring Atlas security.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Atlas服务的一个优势是许多安全功能默认启用，从而防止互联网攻击。因此，了解配置Atlas安全的基础知识非常重要。
- en: Consider a scenario in which you are working on a project based on MongoDB.
    Your colleagues from the IT department have deployed a new MongoDB database in
    the Atlas Cloud and have sent you the connection details. However, after taking
    a look, you discover that you are not able to connect to the new database because
    of security rules for network and user access. The first thing to configure will
    be to provide yourself with access to the new database. You also need to make
    sure that access will continue to be disabled for unauthorized access over the
    internet.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑这样一个场景，您正在基于MongoDB的项目上工作。IT部门的同事已经在Atlas Cloud中部署了一个新的MongoDB数据库，并向您发送了连接详细信息。然而，经过查看后，您发现由于网络和用户访问的安全规则，您无法连接到新的数据库。首先要配置的是为自己提供对新数据库的访问权限。您还需要确保未经授权的互联网访问将继续被禁用。
- en: 'To configure access to your project''s database, there are two key aspects
    that you will have to keep in mind:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置对项目数据库的访问，有两个关键方面需要牢记：
- en: '**Network access**: Configures IP network access'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络访问**：配置IP网络访问'
- en: '**Database access**: Configures users and database roles'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库访问**：配置用户和数据库角色'
- en: Network Access
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络访问
- en: The first step, after we have a database installed and running, is to be able
    to successfully connect to our database. Network access is a low-level security
    configuration that's available for databases deployed in the Atlas Cloud.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装和运行数据库之后，第一步是能够成功连接到我们的数据库。网络访问是Atlas Cloud中部署的数据库可用的低级安全配置。
- en: For a database installed locally on a laptop, we usually don't need to configure
    any network security. The connection is directed to the database installed locally.
    However, for a database that is deployed on cloud infrastructure, security is
    enabled by default and needs to be configured. It is very important to protect
    access to the database so that the data is protected from unauthorized access
    over the internet. Before we learn how to configure network access in MongoDB,
    let's go through some of its core underlying concepts.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于安装在笔记本电脑上的数据库，通常不需要配置任何网络安全性。连接是指向本地安装的数据库。然而，对于部署在云基础设施上的数据库，默认情况下启用了安全性并且需要进行配置。非常重要的是保护对数据库的访问，以防止未经授权的互联网访问。在学习如何在MongoDB中配置网络访问之前，让我们先了解一些其核心概念。
- en: Network Protocols
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络协议
- en: The **Internet Protocol** (**IP**) is a decades-old standard, and the **Transmission
    Control Protocol/Internet Protocol** (**TCP/IP**) is the transport protocol used
    by all applications to reliably communicate data packets over the internet. Each
    computer or device on the internet has its unique IP address or hostname. Communication
    between devices is possible by including the source IP address and the destination
    IP address in the network packet header.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**互联网协议**（**IP**）是一个有几十年历史的标准，**传输控制协议/互联网协议**（**TCP/IP**）是所有应用程序用来可靠地在互联网上传输数据包的传输协议。互联网上的每台计算机或设备都有其独特的IP地址或主机名。设备之间的通信是通过在网络数据包头中包括源IP地址和目标IP地址来实现的。'
- en: Note
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: A network packet header is an additional piece of data found at the start of
    a data packet containing information about the data the packet carries. This information
    includes the source IP, destination IP, the protocol, and other information.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 网络数据包头是数据包开头的附加数据，包含有关数据包携带的数据的信息。这些信息包括源IP、目标IP、协议和其他信息。
- en: 'MongoDB makes no exception in using TCP/IP as its network protocol to transport
    data. Furthermore, there are currently two versions of the IP: IPv4 and IPv6\.
    Both versions are supported by the Atlas Cloud platform. IPv4 defines a standard
    4-byte (32-bit) address, whereas IPv6 defines a standard 16-byte (128-bit) address.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB在使用TCP/IP作为其传输数据的网络协议方面并没有例外。此外，目前有两个版本的IP：IPv4和IPv6。Atlas Cloud平台支持这两个版本。IPv4定义了标准的4字节（32位）地址，而IPv6定义了标准的16字节（128位）地址。
- en: 'Both IPv4 and IPv6 are used to specify the complete address of a device on
    the internet. The latest standard, IPv6, is designed to overcome the limitations
    of the IPv4 protocol. An IP address has two parts: the IP network and the IP host
    address. A netmask is a sequence of bits (mask) that is used to indicate the network
    and host part of the IP address. The network address is the IP address'' prefix,
    while the address of the host is the remainder (the suffix of the IP address):'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: IPv4和IPv6都用于指定互联网上设备的完整地址。最新的标准IPv6旨在克服IPv4协议的限制。IP地址有两部分：IP网络和IP主机地址。子网掩码是一系列位（掩码），用于指示IP地址的网络和主机部分。网络地址是IP地址的前缀，而主机的地址是剩余部分（IP地址的后缀）：
- en: '![Figure 3.1: Diagrammatic representation of an IP address'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.1：IP地址的图解表示'
- en: '](img/B15507_03_01.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_01.jpg)'
- en: 'Figure 3.1: Diagrammatic representation of an IP address'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1：IP地址的图解表示
- en: In *Figure 3.1*, the netmask 255.255.0.0 (or (1111 1111).(1111 1111).(0000 0000)(0000
    0000) in binary format) acts as a mask, indicating the IP network and IP host
    part of the address. The IP network part of the address (prefix) is composed of
    the first 16 bits of the general IPv4 address, 100.100, while the host address
    is the rest of the address – 20.50.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图3.1*中，子网掩码255.255.0.0（或二进制格式中的（1111 1111）。（1111 1111）。（0000 0000）（0000 0000））充当掩码，指示IP地址的网络和IP主机部分。IP地址的网络部分（前缀）由IPv4地址的前16位100.100组成，而主机地址是地址的其余部分-20.50。
- en: MongoDB Atlas uses **Classless Inter-Domain Routing** (**CIDR**) notation instead
    of an IP netmask to specify IP addresses. The CIDR format is a shorter format
    that is used to describe an IP network and host format. Moreover, CIDR is more
    flexible than the older IP netmask notation.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Atlas使用**无类别域间路由**（**CIDR**）表示法来指定IP地址，而不是IP子网掩码。CIDR格式是一种更短的格式，用于描述IP网络和主机格式。此外，CIDR比旧的IP子网掩码表示法更灵活。
- en: 'Here is an example of a netmask and its equivalent CIDR notation:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个子网掩码及其等效CIDR表示法的示例：
- en: '![Figure 3.2: Netmask and its CIDR notation'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.2：子网掩码及其CIDR表示法'
- en: '](img/B15507_03_02.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_02.jpg)'
- en: 'Figure 3.2: Netmask and its CIDR notation'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.2：子网掩码及其CIDR表示法
- en: They both describe the same IP network – 54.175.147.0 (24 bits from the left,
    or 3 bytes), and host number –155\. There could be 254 hosts (from 1 to 254) in
    this network.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 它们都描述了相同的IP网络- 54.175.147.0（从左边的24位，或3个字节），和主机号-155。在这个网络中可能有254个主机（从1到254）。
- en: Note
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: It is beyond the goal of this course to present a comprehensive guide to internet
    network standards. For more details, refer to *Understanding TCP/IP* ([https://www.packtpub.com/networking-and-servers/understanding-tcpip](https://www.packtpub.com/networking-and-servers/understanding-tcpip)),
    which is a clear and comprehensive guide to TCP/IP protocols.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本课程的目标不是提供互联网网络标准的全面指南。有关更多详细信息，请参阅*理解TCP/IP* ([https://www.packtpub.com/networking-and-servers/understanding-tcpip](https://www.packtpub.com/networking-and-servers/understanding-tcpip))，这是TCP/IP协议的清晰和全面指南。
- en: Public versus Private IP Addresses
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 公共IP地址与私有IP地址
- en: As explained previously, any device connected on the internet needs a unique
    IP address in order to communicate with other servers. Those types of IP addresses
    are called **public** IP addresses. Apart from public IPs, the internet standard
    also defines a few IP addresses that are reserved for private use, called **private**
    IP addresses. These are more commonly used in corporate environments that need
    to limit their employees' access to a private network (intranet) instead of giving
    them access to the public internet.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，连接到互联网的任何设备都需要一个唯一的IP地址，以便与其他服务器通信。这些类型的IP地址称为**公共**IP地址。除了公共IP地址，互联网标准还定义了一些保留供私人使用的IP地址，称为**私有**IP地址。这些在企业环境中更常用，需要限制员工访问私人网络（内部网络）而不是让他们访问公共互联网。
- en: The following table describes the private IP addresses available for IP version
    4.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格描述了IP版本4可用的私有IP地址。
- en: '![Figure 3.3: Private IP addresses for IP4'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.3：IP4的私有IP地址'
- en: '](img/B15507_03_03.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_03.jpg)'
- en: 'Figure 3.3: Private IP addresses for IP4'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.3：IP4的私有IP地址
- en: On the other hand, a public IP address is unique on the internet and can have
    any value that is different from the ones in *Figure 3.3*.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，公共IP地址在互联网上是唯一的，可以有与*图3.3*中不同的任何值。
- en: Domain Name Server
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 域名服务器
- en: 'Let''s consider an example where the IP address `52.206.222.245` is the public
    IP address of the MongoDB website:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个例子，IP地址`52.206.222.245`是MongoDB网站的公共IP地址：
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As you can see, we used the name `mongodb.com` to run the ping command, and
    not the IP address of the MongoDB website directly. The `mongodb.com`), and the
    DNS server responds with the public IP addresses registered for that host and
    domain: IP `54.175.147.155`.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，我们使用名称`mongodb.com`来运行ping命令，而不是直接使用MongoDB网站的IP地址。`mongodb.com`，DNS服务器会响应该主机和域名注册的公共IP地址：IP`54.175.147.155`。
- en: Transmission Control Protocol
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 传输控制协议
- en: The **Transmission Control Protocol** (**TCP**), part of the IP address, defines
    sockets, or ports, that can be used for different types of network connections.
    Every process that needs to communicate over the internet uses a TCP port to establish
    a connection.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**传输控制协议**（**TCP**）是IP地址的一部分，定义了可以用于不同类型网络连接的套接字或端口。每个需要通过互联网通信的进程都使用TCP端口建立连接。'
- en: The default TCP port for MongoDB Server is 27017\. In the MongoDB Atlas free
    tier, the default TCP port cannot be changed. This is one of the limitations of
    the Atlas free-tier M0 server. However, on a local installation, the TCP listener
    port can be configured when the server is started.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB服务器的默认TCP端口是27017。在MongoDB Atlas免费版中，无法更改默认TCP端口。这是Atlas免费版M0服务器的限制之一。但是，在本地安装时，可以在启动服务器时配置TCP监听器端口。
- en: MongoDB Atlas Cloud always encrypts network communication between the server
    and applications. Data is protected using a specialized network encryption protocol
    called TLS (Transport Layer Security).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Atlas Cloud始终使用专门的网络加密协议TLS（传输层安全）加密服务器和应用程序之间的网络通信。数据受到保护。
- en: 'There are a few important aspects of TCP/IP communication to remember:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个重要的TCP/IP通信方面需要记住：
- en: The server always listens for new connections from clients, usually on TCP port 27017\.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器始终在TCP端口27017上监听来自客户端的新连接。
- en: The client always initiates the connection to the server by sending a special
    TCP packet.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户端始终通过发送特殊的TCP数据包来初始化与服务器的连接。
- en: If network access is configured, the client can establish a TCP connection with
    the database server.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果配置了网络访问，客户端可以与数据库服务器建立TCP连接。
- en: The server only accepts the connection if the client passes the security checks.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有客户端通过了安全检查，服务器才会接受连接。
- en: The network communication is always encrypted for databases in the Atlas Cloud.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Atlas Cloud中的数据库的网络通信始终是加密的。
- en: Once the connection is established, the client communicates with the server
    by sending database commands and receiving data.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦连接建立，客户端通过发送数据库命令和接收数据与服务器通信。
- en: The Wire Protocol
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Wire协议
- en: Internally, MongoDB stores documents in a special binary format called **Binary
    JSON** (**BSON**). We learned about the structure of a JSON document in *Chapter
    2*, *Documents and Data Types*. BSON is a more efficient way to store data than
    JSON. Therefore, BSON is used by MongoDB to store data in files and to transport
    data over the network.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在内部，MongoDB以一种称为**二进制JSON**（**BSON**）的特殊二进制格式存储文档。我们在*第2章*，*文档和数据类型*中了解了JSON文档的结构。BSON比JSON更有效地存储数据。因此，MongoDB使用BSON来在文件中存储数据和在网络上传输数据。
- en: 'The Wire Protocol is MongoDB''s solution to encapsulate BSON data into network
    packets that can be sent over the internet. The Wire Protocol defines standard
    datagrams, or data packets, in a format that can be understood by both MongoDB
    servers and clients. The structure of a datagram is composed of a header and a
    body, with a simple but rigorous format defined by MongoDB. The Wire Protocol
    datagrams are also encapsulated in TCP/IP packets, as shown in the following diagram:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Wire协议是MongoDB将BSON数据封装为可以通过互联网发送的网络数据包的解决方案。Wire协议定义了标准数据报文或数据包的格式，可以被MongoDB服务器和客户端理解。数据报文的结构由头部和主体组成，由MongoDB定义的简单但严格的格式。Wire协议数据报文也封装在TCP/IP数据包中，如下图所示：
- en: '![Figure 3.4: Encapsulated Wire Protocol datagrams'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.4：封装的Wire协议数据报'
- en: '](img/B15507_03_04.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_04.jpg)'
- en: 'Figure 3.4: Encapsulated Wire Protocol datagrams'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.4：封装的Wire协议数据报
- en: Network Access Configuration
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络访问配置
- en: 'The Atlas project owner or cluster manager can modify network access from the
    Atlas web management console. After logging on to the Atlas console, you can access
    the `Network Access` tab from the Atlas web console, from the `SECURITY` menu:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Atlas项目所有者或集群管理器可以从Atlas Web管理控制台修改网络访问。登录Atlas控制台后，您可以从Atlas Web控制台的`SECURITY`菜单中访问`Network
    Access`选项卡：
- en: '![Figure 3.5: MongoDB Atlas console'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.5：MongoDB Atlas控制台'
- en: '](img/B15507_03_05.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_05.jpg)'
- en: 'Figure 3.5: MongoDB Atlas console'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.5：MongoDB Atlas控制台
- en: 'The `Network Access` configuration page appears on the right side of the page.
    MongoDB Atlas consists of three methods to manage network access, which can be
    accessed using the following tabs:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '`Network Access`配置页面显示在页面的右侧。MongoDB Atlas包括三种管理网络访问的方法，可以使用以下选项卡访问：'
- en: '`IP Access List`'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IP访问列表`'
- en: '`Peering`'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`对等`'
- en: '`Private Endpoint`'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`私有端点`'
- en: The IP Access List
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IP访问列表
- en: '`IP Access List` helps the Atlas administrator to specify a list of valid IP
    addresses that are allowed to connect to the MongoDB database. To add your first
    IP addresses, you can click the green button `ADD IP ADDRESS`, which is in the
    middle of the page:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '`IP访问列表`帮助Atlas管理员指定允许连接到MongoDB数据库的有效IP地址列表。要添加您的第一个IP地址，您可以单击页面中间的绿色按钮`ADD
    IP ADDRESS`：'
- en: Note
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you already added one IP address (or a few of them), then `+ ADD IP ADDRESS`
    button is displayed on the right side of the network access IP list, as shown
    in *Figure 3.6*.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经添加了一个IP地址（或几个IP地址），则`+ ADD IP ADDRESS`按钮将显示在网络访问IP列表的右侧，如*图3.6*所示。
- en: '![Figure 3.6: Adding an IP address list'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.6：添加IP地址列表'
- en: '](img/B15507_03_06.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_06.jpg)'
- en: 'Figure 3.6: Adding an IP address list'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.6：添加IP地址列表
- en: 'When you click on the `ADD IP ADDRESS` button (or `+ ADD IP ADDRESS`), a pop-up
    window appears:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当您单击`ADD IP ADDRESS`按钮（或`+ ADD IP ADDRESS`）时，将弹出一个窗口：
- en: '![Figure 3.7: Adding a new IP access list entry'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.7：添加新的IP访问列表条目'
- en: '](img/B15507_03_07.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_07.jpg)'
- en: 'Figure 3.7: Adding a new IP access list entry'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.7：添加新的IP访问列表条目
- en: 'The following options are available in the Add IP Access List form:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在`添加IP访问列表`表单中提供以下选项：
- en: '`ADD CURRENT IP ADDRESS`: This is the most common method that can be used for
    simple deployments. It allows you to add your own IP address to the IP access
    list, as shown in *Figure 3.7*. Atlas automatically detects the IP source address
    from the web management console''s current session, so you don''t have to remember
    the IP address. Most likely, your computer has an internal IP address from a private
    IP class, such as 192.168.0.xx, which is quite different from the address that
    Atlas has detected. This is because Atlas always detects the external IP address
    of your network gateway, instead of internal network private IP addresses. Private
    IP addresses are not visible from the internet. You can always verify your external
    IP address by searching `what is my IP?` in Google. The result in the Google search
    should match the address in Atlas.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`添加当前IP地址`：这是用于简单部署的最常见方法。它允许您将自己的IP地址添加到IP访问列表中，如*图3.7*所示。Atlas会自动从Web管理控制台的当前会话中检测IP源地址，因此您无需记住IP地址。您的计算机很可能具有来自私有IP类的内部IP地址，例如192.168.0.xx，这与Atlas检测到的地址有很大不同。这是因为Atlas始终检测网络网关的外部IP地址，而不是内部网络私有IP地址。私有IP地址在互联网上不可见。您可以通过在Google中搜索“我的IP是多少？”来验证您的外部IP地址。Google搜索的结果应与Atlas中的地址匹配。'
- en: '`ALLOW ACCESS FROM ANYWHERE`: As the name suggests, this option enables network
    access from any location by disabling the network protection for your database,
    as shown in *Figure 3.7*. The special IP class 0.0.0.0/0 is added to the IP access
    list.'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`允许从任何地方访问`：顾名思义，此选项通过禁用数据库的网络保护来启用从任何位置访问数据库，如*图3.7*所示。特殊的IP类0.0.0.0/0被添加到IP访问列表中。'
- en: Note
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The option to allow access from anywhere is not recommended because it will
    disable network security protection and will expose our cloud database to possible
    attacks.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 不建议选择允许从任何地方访问的选项，因为这将禁用网络安全保护，并将我们的云数据库暴露给可能的攻击。
- en: 'While adding a custom IP address to the `IP List Entry` field, the IP address
    needs to be in CIDR notation, as described in the introduction to this chapter.
    A short description can also be typed in the `Comment` field, as shown in *Figure
    3.8*:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在向`IP列表条目`字段添加自定义IP地址时，IP地址需要以CIDR表示法表示，如本章介绍中所述。还可以在“注释”字段中输入简短的描述，如*图3.8*所示。
- en: '![Figure 3.8: Filling in the Comment field in the IP Access list entry'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.8：填写IP访问列表条目中的注释字段'
- en: '](img/B15507_03_08.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_08.jpg)'
- en: 'Figure 3.8: Filling in the Comment field in the IP Access list entry'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.8：填写IP访问列表条目中的注释字段
- en: Note
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: In the current version of the Atlas console, it is not possible to add a hostname
    or a **Fully Qualified Domain Name** (**FQDN**) to the IP access list. Only IP
    addresses are accepted as valid entries. Both IPv4 and IPv6 are supported for
    MongoDB Atlas. For example, it is not possible to add a hostname such as *server01prd*
    or *server01prd.mongodb.com* (including the domain), but rather the host public
    IP address. The IP address can be obtained from a DNS lookup or just a ping hostname.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在当前版本的Atlas控制台中，无法将主机名或**完全限定域名**（**FQDN**）添加到IP访问列表中。只有IP地址被接受为有效条目。MongoDB
    Atlas支持IPv4和IPv6。例如，无法添加主机名，如*server01prd*或*server01prd.mongodb.com*（包括域），而应添加主机的公共IP地址。IP地址可以通过DNS查找或只是ping主机名来获取。
- en: Temporary Access
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 临时访问
- en: 'Entries in the access list can be permanent or they can have an expiration
    time. Temporary entries are automatically removed from the list when they expire.
    If you wish to add a temporary IP address, check the switch `This entry is temporary
    and will be deleted in` option in the `Add IP Access List Entry` form, as shown
    in *Figure 3.9*. You can specify the expiration time using the dropdown:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 访问列表中的条目可以是永久的，也可以具有过期时间。临时条目在过期时会自动从列表中删除。如果要添加临时IP地址，请在“添加IP访问列表条目”表单中勾选“此条目是临时的，将在...被删除”选项，如*图3.9*所示。您可以使用下拉菜单指定过期时间：
- en: '![Figure 3.9: Adding a temporary IP Access list entry'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.9：添加临时IP访问列表条目'
- en: '](img/B15507_03_09.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_09.jpg)'
- en: 'Figure 3.9: Adding a temporary IP Access list entry'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.9：添加临时IP访问列表条目
- en: 'When you click `Confirm`, the IP/host address is saved in the access list and
    the network configuration is activated. The process usually completes in less
    than a minute and during this time, the entry status will be `Pending` for a few
    seconds, as shown in *Figure 3.10*:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 单击“确认”后，IP/主机地址将保存在访问列表中，并且网络配置将被激活。该过程通常在一分钟内完成，在此期间，条目状态将在几秒钟内显示为“待处理”，如*图3.10*所示：
- en: '![Figure 3.10: Network access window displaying the Pending status'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.10：显示待处理状态的网络访问窗口'
- en: '](img/B15507_03_10.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_10.jpg)'
- en: 'Figure 3.10: Network access window displaying the Pending status'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.10：显示待处理状态的网络访问窗口
- en: 'Once the network configuration is activated, `Status` will be `Active`, as
    shown in *Figure 3.11*:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 网络配置激活后，“状态”将显示为“活动”，如*图3.11*所示：
- en: '![Figure 3.11: Network Access window'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.11：网络访问窗口'
- en: '](img/B15507_03_11.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_11.jpg)'
- en: 'Figure 3.11: Network Access window'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.11：网络访问窗口
- en: Note
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: A message saying `You will only be able to connect to your cluster from the
    following list of IP Addresses:` appears on the screen to notify the user of the
    list of available IP addresses, as shown in *Figure 3.11*.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕上会出现一条消息，提示用户可用IP地址列表，如*图3.11*所示。
- en: 'After the IP was saved in the IP access list, the administrator can modify
    the entry. The permission of the following operations can be accessed from the
    `Actions` tab, as shown in *Figure 3.11*:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在IP保存在IP访问列表后，管理员可以修改条目。可以从“操作”选项卡中访问以下操作的权限，如*图3.11*所示：
- en: Delete an existing entry from the IP access list by clicking `DELETE`.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过单击“删除”来删除IP访问列表中的现有条目。
- en: Edit an existing entry from the IP access list by clicking `EDIT`.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过单击“编辑”来编辑IP访问列表中的现有条目。
- en: Note
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You can add multiple IP addresses to the access list. For example, if you need
    to access your cloud database from your office and from your home, you can add
    both IP addresses to the access list table. Nevertheless, please note that there
    is a limit of 200 addresses that can be added to the list.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将多个IP地址添加到访问列表中。例如，如果您需要从办公室和家中访问云数据库，可以将两个IP地址都添加到访问列表中。然而，请注意，最多只能添加200个地址到列表中。
- en: Network Peering
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络对等连接
- en: 'Network peering is another method of controlling network access on the Atlas
    Cloud infrastructure, which is different from an IP access list. It enables companies
    to set up a **Virtual Private Cloud** (**VPC**) connection between the local company
    network and the Atlas network infrastructure, as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 网络对等连接是Atlas Cloud基础设施上控制网络访问的另一种方法，与IP访问列表不同。它使公司能够在本地公司网络和Atlas网络基础设施之间建立**虚拟专用云**（**VPC**）连接，如下所示：
- en: Private IP networks are used to configure VPC between the client's private network
    and MongoDB Atlas servers. Any type of private IP is supported for VPC network
    peering.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 私人IP网络用于配置客户私人网络和MongoDB Atlas服务器之间的VPC。任何类型的私人IP都支持VPC网络对等连接。
- en: All cloud providers are supported for network peering, such as AWS's, Microsoft's,
    or Google's cloud infrastructure.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有云提供商都支持网络对等连接，例如AWS的、微软的或谷歌的云基础设施。
- en: Network peering is appropriate only for large implementations (M10+), and therefore
    is not available for Atlas free-tier users.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络对等连接仅适用于大型实施（M10+），因此不适用于Atlas免费用户。
- en: Note
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The details of network peering and private endpoint are beyond the scope of
    this introductory course.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 网络对等连接和私有端点的详细信息超出了本入门课程的范围。
- en: 'Exercise 3.01: Enabling Network Access'
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习3.01：启用网络访问
- en: In this exercise, you will use the Atlas web management console to enable network
    access for your new database in the cloud. This is necessary to permit network
    connections over the internet.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在本练习中，您将使用Atlas Web管理控制台为云中的新数据库启用网络访问。这是允许通过互联网进行网络连接所必需的。
- en: 'The exercise will guide you through the steps to add your own IP address to
    the access list. As a result, network access will be permitted from your location,
    and you''ll be able to connect to the MongoDB database using a client running
    on your local computer. Follow these steps to complete this exercise:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 该练习将指导您完成将您自己的IP地址添加到访问列表的步骤。结果，将允许从您的位置进行网络访问，并且您将能够使用在本地计算机上运行的客户端连接到MongoDB数据库。按照以下步骤完成此练习：
- en: Go to [http://cloud.mongodb.com](http://cloud.mongodb.com) to connect to the
    Atlas console.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到[http://cloud.mongodb.com](http://cloud.mongodb.com)连接到Atlas控制台。
- en: 'Log on to your new MongoDB Atlas web interface using your username and password,
    which was created when you registered for the Atlas Cloud:![Figure 3.12: MongoDB
    Atlas login page'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您在注册Atlas Cloud时创建的用户名和密码登录到新的MongoDB Atlas Web界面：![图3.12：MongoDB Atlas登录页面
- en: '](img/B15507_03_12.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_12.jpg)'
- en: 'Figure 3.12: MongoDB Atlas login page'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.12：MongoDB Atlas登录页面
- en: 'From the `SECURITY` menu, click the `Network Access` tab:![Figure 3.13: Network
    Access window'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从“安全”菜单中，点击“网络访问”选项卡：![图3.13：网络访问窗口
- en: '](img/B15507_03_13.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_13.jpg)'
- en: 'Figure 3.13: Network Access window'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.13：网络访问窗口
- en: Click `ADD IP ADDRESS` in the `IP Access List` tab.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“IP访问列表”选项卡中单击“添加IP地址”。
- en: 'From the `Add IP Access List Entry` window that appears, click the `ADD CURRENT
    IP ADDRESS` button:![Figure 3.14: IP Access list window'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的“添加IP访问列表条目”窗口中，单击“添加当前IP地址”按钮：![图3.14：IP访问列表窗口
- en: '](img/B15507_03_07.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_07.jpg)'
- en: 'Figure 3.14: IP Access list window'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.14：IP访问列表窗口
- en: The MongoDB web interface will automatically detect your external IP address
    and will reflect it in the `IP Access List Entry` field.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Web界面将自动检测您的外部IP地址，并将其反映在“IP访问列表条目”字段中。
- en: 'Type `This is my IP Address` in the `Comment` field (this is optional):![Figure
    3.15: Typing in a comment in the Add IP Access List Entry window'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“注释”字段中键入“This is my IP Address”（这是可选的）：![图3.15：在添加IP访问列表条目窗口中输入注释
- en: '](img/B15507_03_08.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_08.jpg)'
- en: 'Figure 3.15: Typing in a comment in the Add IP Access List Entry window'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.15：在添加IP访问列表条目窗口中输入注释
- en: Click the `Confirm` button to save the new entry. Atlas is deploying the new
    IP access list rules to the cloud system
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“确认”按钮以保存新条目。Atlas正在将新的IP访问列表规则部署到云系统
- en: 'The IP address will appear in the access list table (as active):![Figure 3.16:
    Network Access window'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: IP地址将出现在访问列表表中（作为活动状态）：![图3.16：网络访问窗口
- en: '](img/B15507_03_11.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_11.jpg)'
- en: 'Figure 3.16: Network Access window'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.16：网络访问窗口
- en: Note
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The IP `100.100.10.10/32` is a dummy IP address as an example. In your practical
    case, the IP address will be your own public IP address, which is different. Moreover,
    your ISP (Internet Service Provider) may assign you a dynamic IP address, which
    is not permanent, and it may be changed after a period of time.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: IP“100.100.10.10/32”是一个示例虚拟IP地址。在您的实际情况中，IP地址将是您自己的公共IP地址，而且您的ISP（互联网服务提供商）可能会分配给您一个动态IP地址，这是不固定的，并且可能在一段时间后更改。
- en: We have successfully "whitelisted" our current public IP address into the Atlas
    Cloud console so that TCP/IP connections will be allowed from our public IP address.
    If you have multiple locations, such as home and a work office, add multiple IP
    addresses to the access list in the Atlas console.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已成功将当前公共IP地址列入Atlas Cloud控制台的白名单，以便允许来自我们公共IP地址的TCP/IP连接。如果您有多个位置，比如家里和办公室，可以在Atlas控制台的访问列表中添加多个IP地址。
- en: Database Access
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据库访问
- en: MongoDB databases deployed on the Atlas Cloud have several security features
    enabled by default, such as user access control. Database access control verifies
    user authentication credentials, such as the username and password. Therefore,
    even if network access is available from anywhere, you will still need to authenticate
    before successfully connecting to the MongoDB database in the cloud. This is necessary
    to protect databases deployed in the cloud from unauthorized access over the internet.
    More importantly, when compared with other security features, access control cannot
    be disabled for cloud databases and will always remain enabled.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 部署在Atlas云上的MongoDB数据库默认启用了几个安全功能，例如用户访问控制。数据库访问控制验证用户的身份验证凭据，例如用户名和密码。因此，即使可以从任何地方访问网络，您仍需要进行身份验证才能成功连接到云中的MongoDB数据库。这是为了保护部署在云中的数据库免受未经授权的互联网访问。更重要的是，与其他安全功能相比，访问控制无法在云数据库中禁用，并且始终保持启用状态。
- en: 'Database access covers the following aspects of database security:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库访问涵盖数据库安全的以下方面：
- en: Database users
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库用户
- en: Database roles
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库角色
- en: When compared with other MongoDB installations, the management of user accounts
    in the Atlas Cloud is configured at the project level. Users created in one Atlas
    project are shared among all MongoDB database clusters created in that project.
    The basic methods to configure Atlas database security (users and roles) are both
    covered in this chapter.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他MongoDB安装相比，在Atlas云中管理用户帐户是在项目级别进行配置的。在一个Atlas项目中创建的用户将在该项目中创建的所有MongoDB数据库集群中共享。本章节涵盖了配置Atlas数据库安全（用户和角色）的基本方法。
- en: Note
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Database access refers only to the access to database services deployed in Atlas,
    and not to the Atlas Console itself. As an Atlas project owner, you will always
    be able to connect to the Atlas web console to manage your cloud database access.
    If you need to add more project team members to the Atlas project, then this is
    possible from the `PROJECT` tab on the Atlas web application. In the scope of
    this course, the examples are relevant when connected as an Atlas project owner.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库访问仅涉及对部署在Atlas中的数据库服务的访问，而不涉及Atlas控制台本身。作为Atlas项目所有者，您始终可以连接到Atlas Web控制台以管理您的云数据库访问。如果需要向Atlas项目添加更多项目团队成员，则可以从Atlas
    Web应用程序的“项目”选项卡中进行操作。在本课程范围内，这些示例在连接为Atlas项目所有者时是相关的。
- en: User Authentication
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户身份验证
- en: The validation of user identity is an essential aspect of database security
    and is necessary in order to protect data integrity and confidentiality. This
    is exactly the reason why all MongoDB databases deployed in the Atlas Cloud require
    users to be authenticated before they can create new database sessions. Therefore,
    only trusted database users are granted access to the cloud database.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 验证用户身份是数据库安全的一个重要方面，也是为了保护数据完整性和机密性而必要的。这正是为什么所有部署在Atlas云中的MongoDB数据库在创建新的数据库会话之前都需要对用户进行身份验证的原因。因此，只有受信任的数据库用户才被授予对云数据库的访问权限。
- en: The database authentication process consists of a procedure to validate the
    user identity prior to connection.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库身份验证过程包括在连接之前验证用户身份的过程。
- en: 'The user identity must qualify the following two parameters:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 用户身份必须符合以下两个参数：
- en: A valid username must be provided at connection time.
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接时必须提供有效的用户名。
- en: The user's identity must be confirmed via validation.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户的身份必须通过验证确认。
- en: Declaring a valid username is straightforward. The only prerequisite is that
    the username must exist, which means the username must have been created previously
    and its account must be activated.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 声明有效的用户名很简单。唯一的先决条件是用户名必须存在，这意味着用户名必须先前已创建，并且其帐户必须已激活。
- en: Username Storage
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用户名存储
- en: 'Users need to be declared in Atlas before they can be used. The username and
    password can either be stored internally (within the database) or externally (outside
    the database) as follows:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 用户需要在Atlas中声明后才能使用。用户名和密码可以存储在内部（数据库内部）或外部（数据库外部），如下所示：
- en: '**Internally**: The username is stored within the MongoDB database, in a special
    collection of the admin database. There are a few restrictions. The admin database
    is accessible only to system administrators. When a user tries to connect, the
    username must exist in the list of existing usernames in the admin database.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内部**：用户名存储在MongoDB数据库中的特殊集合中，位于admin数据库中。有一些限制。admin数据库仅对系统管理员可访问。当用户尝试连接时，用户名必须存在于admin数据库中现有用户名列表中。'
- en: '**Externally**: The username is stored in an external system, such as **Lightweight
    Directory Access Protocol (LDAP)**. For example, the Microsoft Active Directory
    is an LDAP directory implementation that can be configured for MongoDB username
    authentication.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**外部**：用户名存储在外部系统中，例如**轻量目录访问协议（LDAP）**。例如，Microsoft Active Directory是一个可以配置为MongoDB用户名身份验证的LDAP目录实现。'
- en: Note
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: LDAP authentication is only available for bigger Atlas clusters (M10+) and permits
    enterprise-specific configuration of many database users' accounts. This configuration
    is not covered in this introductory course.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: LDAP身份验证仅适用于更大的Atlas集群（M10+），并允许对许多数据库用户帐户进行企业特定配置。此配置不在本入门课程中涵盖。
- en: Username Authentication
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用户名身份验证
- en: Authentication is the process of validating user identity. If user authentication
    is successful, the user is confirmed and trusted to access the database. Otherwise,
    the user is rejected and will not be allowed to establish a database connection.
    The following are some authentication mechanisms, each one with a different technology
    and level of security.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 身份验证是验证用户身份的过程。如果用户身份验证成功，则用户将被确认并信任访问数据库。否则，用户将被拒绝，并且将不被允许建立数据库连接。以下是一些身份验证机制，每种机制都具有不同的技术和安全级别。
- en: '**Password Authentication**'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '**密码身份验证**'
- en: Simple password authentication. The user needs to provide the correct password.
    The database system validates the password against the declared username. The
    process of securely validating user passwords over the internet is called a **handshake**
    or **challenge response**.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单密码身份验证。用户需要提供正确的密码。数据库系统会根据声明的用户名验证密码。在互联网上安全验证用户密码的过程称为**握手**或**挑战-响应**。
- en: Passwords are validated by the MongoDB database. In the case of LDAP authentication,
    passwords are validated externally. Since version 4.0, MongoDB has a new challenge-response
    method to validate passwords known as the **Salted Challenge Response Authentication
    Mechanism** (**SCRAM**). SCRAM guarantees that the user password can be validated
    securely over the internet without transferring or storing passwords in cleartext.
    This is because transferring cleartext passwords over the internet's public infrastructure
    is considered extremely insecure.
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码由MongoDB数据库验证。在LDAP身份验证的情况下，密码会在外部进行验证。自4.0版本以来，MongoDB有一种新的挑战-响应方法来验证密码，称为**Salted
    Challenge Response Authentication Mechanism**（**SCRAM**）。SCRAM保证用户密码可以在互联网上安全验证，而无需传输或存储明文密码。这是因为在互联网的公共基础设施上传输明文密码被认为是极其不安全的。
- en: In older versions of MongoDB, a different challenge-response method was used.
    If you upgrade your applications from MongoDB 2.0 or 3.0 to the latest version,
    verify the MongoDB client's compatibility with MongoDB version 4.0 or higher.
    At the time of writing, the current version on premises of MongoDB server is version
    4.4.
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在较旧版本的MongoDB中，使用了不同的挑战-响应方法。如果您将应用程序从MongoDB 2.0或3.0升级到最新版本，请验证MongoDB客户端与MongoDB
    4.0或更高版本的兼容性。在撰写本文时，MongoDB服务器的本地当前版本是4.4版本。
- en: '**X.509 Certificate Authentication**'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '**X.509证书认证**'
- en: This refers to the use of cryptographic certificates for user authentication
    instead of simple passwords. Certificates are longer and far more secure than passwords.
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这指的是使用加密证书进行用户身份验证，而不是简单密码。证书比密码更长，更安全。
- en: An X.509 certificate is a digitally encrypted key, created using a cryptographical
    standard **Public Key Infrastructure** (**PKI**). Certificates are created in
    a pair of keys (public-private).
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: X.509证书是使用密码学标准**公钥基础设施**（**PKI**）创建的数字加密密钥。证书是以一对密钥（公钥-私钥）创建的。
- en: This method also permits password-less authentication for users, which allows
    users and applications to connect using a private key X.509 certificate.
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这种方法还允许用户进行无密码身份验证，允许用户和应用程序使用私钥X.509证书进行连接。
- en: Configuring Authentication in Atlas
  id: totrans-174
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Atlas中配置身份验证
- en: It is recommended to use only the Atlas web application to create and configure
    database users.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 建议仅使用Atlas Web应用程序来创建和配置数据库用户。
- en: Atlas project owners can add users to an Atlas project and configure users'
    authentication from the Atlas web interface. Atlas users can be added to all database
    clusters within the respective Atlas project. Authentication settings can be made
    available by clicking `Database Access` from the Atlas application.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: Atlas项目所有者可以通过Atlas Web界面向Atlas项目添加用户并配置用户的身份验证。Atlas用户可以添加到相应Atlas项目中的所有数据库集群。单击Atlas应用程序中的`Database
    Access`即可提供身份验证设置。
- en: 'Here is a screenshot from the Atlas web application ([http://cloud.mongodb.com](http://cloud.mongodb.com)):'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Atlas Web应用程序的屏幕截图（[http://cloud.mongodb.com](http://cloud.mongodb.com)）：
- en: '![Figure 3.17: Database Access window'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.17：数据库访问窗口'
- en: '](img/B15507_03_17.jpg)'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_17.jpg)'
- en: 'Figure 3.17: Database Access window'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.17：数据库访问窗口
- en: 'In *Figure 3.17*, you will notice two tabs, `Database Users` and `Custom Roles`.
    Let''s first focus on the options available for `Database Users`. Once you click
    the `ADD NEW DATABASE USER` option to create a new user, the following window
    will appear:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图3.17*中，您会注意到两个选项卡，`数据库用户`和`自定义角色`。让我们首先关注`数据库用户`的可用选项。当您单击`ADD NEW DATABASE
    USER`选项创建新用户时，将出现以下窗口：
- en: '![Figure 3.18: Add New Database User window'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.18：添加新数据库用户窗口'
- en: '](img/B15507_03_18.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_18.jpg)'
- en: 'Figure 3.18: Add New Database User window'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.18：添加新数据库用户窗口
- en: Note
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Password SCRAM authentication is the only option available for Atlas M0 free-tier
    cluster, which is used for examples in this course. The other authentication method
    options, a certificate and AWS IAM, are available for larger Atlas M10+ clusters.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 密码SCRAM身份验证是Atlas M0免费集群的唯一选项，该集群用于本课程的示例。其他身份验证方法选项，如证书和AWS IAM，适用于更大的Atlas
    M10+集群。
- en: 'There are two fields in the window, as shown in *Figure 3.19*:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口中有两个字段，如*图3.19*所示：
- en: '![Figure 3.19: Username and password fields in the Add New Database User window'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.19：添加新数据库用户窗口中的用户名和密码字段'
- en: '](img/B15507_03_19.jpg)'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_19.jpg)'
- en: 'Figure 3.19: Username and password fields in the Add New Database User window'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.19：添加新数据库用户窗口中的用户名和密码字段
- en: In the first field, you can type the new database username. The username should
    not contain spaces or special characters. Only ASCII letters, numbers, hyphens,
    and underscores are allowed.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个字段中，您可以输入新的数据库用户名。用户名不应包含空格或特殊字符。只允许ASCII字母、数字、连字符和下划线。
- en: The second field is for the user password. A password can be entered manually
    by the administrator or it can be generated by the Atlas application. The `Autogenerate
    Secure Password` button automatically generates a secure, complex password. The
    `SHOW` and `HIDE` options will either display or hide the password input on the
    screen. There is also an option to copy the password to the clipboard by clicking
    the `COPY` button, as shown in *Figure 3.19*.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个字段是用户密码。管理员可以手动输入密码，也可以由Atlas应用程序生成。`自动生成安全密码`按钮会自动生成一个安全、复杂的密码。`SHOW`和`HIDE`选项将在屏幕上显示或隐藏密码输入。还有一个选项，可以通过单击`COPY`按钮将密码复制到剪贴板，如*图3.19*所示。
- en: Temporary Users
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 临时用户
- en: 'The Atlas administrator can decide to add temporary user accounts. A temporary
    user account is an account that is valid only for a limited period. The account
    will be automatically deleted by Atlas after its expiration time:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: Atlas管理员可以决定添加临时用户账户。临时用户账户是仅在有限期限内有效的账户。账户将在到期时间后由Atlas自动删除：
- en: '![Figure 3.20: Temporary User option in the Add New User window'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.20：在添加新用户窗口中的临时用户选项'
- en: '](img/B15507_03_20.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_20.jpg)'
- en: 'Figure 3.20: Temporary User option in the Add New User window'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.20：在添加新用户窗口中的临时用户选项
- en: In the preceding example, the user account, `my_user`, is set to expire automatically
    in 1 day (24 hours). The checkbox for `Save as temporary user for` is selected,
    and the stipulated time is set.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，用户账户`my_user`被设置为在1天（24小时）后自动过期。选择了“保存为临时用户”，并设置了规定的时间。
- en: Note
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: From the `built-in role or privilege` drop-down menu, the administrator can
    assign a database privilege when the new user is created. By default, the assigned
    privilege is `Read and write to any database`. Database privilege options are
    explained in detail in the next section.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 从“内置角色或特权”下拉菜单中，管理员可以在创建新用户时分配数据库特权。默认情况下，分配的特权是“读写任何数据库”。数据库特权选项将在下一节中详细解释。
- en: 'The `Add User` button completes the add new user process. Once the user account
    is created, it will appear in the MongoDB user list, as shown in *Figure 3.21*.
    The user account can be changed or deleted if required. The user account details
    can be changed or removed using the `EDIT` or `DELETE` options in the `Actions`
    tab:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '`添加用户`按钮完成了添加新用户的过程。一旦用户账户创建完成，它将出现在MongoDB用户列表中，如*图3.21*所示。如果需要，可以更改或删除用户账户。用户账户的详细信息可以使用`编辑`或`删除`选项在`操作`选项卡中进行更改或删除：'
- en: '![Figure 3.21: The Database Access window'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.21：数据库访问窗口'
- en: '](img/B15507_03_21.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_21.jpg)'
- en: 'Figure 3.21: The Database Access window'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.21：数据库访问窗口
- en: Note
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: As you may observe, in my example in *Figure 3.21*, the `my_user` account is
    set to automatically expire after 24 hours (23:57). The user account will be automatically
    deleted after the expiration time.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在*图3.21*中所看到的那样，`my_user`账户被设置为在24小时后自动过期（23:57）。用户账户将在到期时间后自动删除。
- en: Database Privileges and Roles
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据库特权和角色
- en: Database authorization is the part of database security that covers privileges
    and roles for MongoDB databases. Once you authenticate a user successfully and
    create a new database session, the database privileges and roles are assigned
    to the user. The accessibility of a database's collections and objects is verified
    against the database privileges that are assigned to the user.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库授权是数据库安全的一部分，涵盖了MongoDB数据库的特权和角色。一旦您成功验证用户并创建新的数据库会话，数据库特权和角色将分配给用户。数据库集合和对象的可访问性将根据分配给用户的数据库特权进行验证。
- en: A privilege (or action) is the right to perform a particular action or operation
    within the MongoDB database on a specific database resource. For example, the
    read privilege grants the right to query a specific database collection or view.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 特权（或操作）是在MongoDB数据库中对特定数据库资源执行特定操作或操作的权利。例如，读取特权授予对特定数据库集合或视图进行查询的权利。
- en: 'Multiple database privileges can be grouped within a role. There is a long
    list of database privileges, each one for a different function in MongoDB. Instead
    of directly assigning privileges to users, the privileges are assigned to roles,
    and these roles are then assigned to users. As a result, the management of privileges
    and roles in the database is easier to understand:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 多个数据库特权可以被分组在一个角色中。MongoDB中有一长串的数据库特权，每个特权都用于MongoDB中的不同功能。特权不是直接分配给用户，而是分配给角色，然后这些角色再分配给用户。因此，数据库中特权和角色的管理更容易理解：
- en: '![Figure 3.22: Pictorial representation of database privileges'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.22：数据库特权的图示表示'
- en: '](img/B15507_03_22.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_22.jpg)'
- en: 'Figure 3.22: Pictorial representation of database privileges'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.22：数据库特权的图示表示
- en: 'Roles can have a global or local scope:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 角色可以具有全局或本地范围：
- en: '`GLOBAL`: This role applies to all MongoDB databases and collections.'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GLOBAL`：此角色适用于所有MongoDB数据库和集合。'
- en: '`Database`: This role applies only to a specific database name.'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Database`：此角色仅适用于特定数据库名称。'
- en: '`Collection`: This role applies only to a specific collection name within a
    database. It has the most restrictive scope.'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Collection`：此角色仅适用于数据库中特定集合名称。它具有最严格的范围。'
- en: Predefined Roles
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 预定义角色
- en: There are a few predefined database roles, and for each role, there is a list
    of specific privileges assigned. For example, the administrator role contains
    all the privileges necessary to administer a MongoDB database. Assigning a predefined
    role is the most common way to manage your MongoDB database.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些预定义的数据库角色，对于每个角色，都有一系列特定的特权。例如，管理员角色包含了管理MongoDB数据库所需的所有特权。分配预定义角色是管理MongoDB数据库的最常见方式。
- en: 'If none of the predefined roles fit the security requirements for your application,
    custom roles can be defined in MongoDB. The following roles are predefined in
    the Atlas application, and can be assigned when new database users are created:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 如果预定义的角色都不符合应用程序的安全要求，可以在MongoDB中定义自定义角色。以下角色在Atlas应用程序中预定义，并且可以在创建新数据库用户时分配：
- en: '`dbAdminAnyDatabase`, `readWriteAnyDatabase`, and `clusterMonitor`.'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dbAdminAnyDatabase`、`readWriteAnyDatabase`和`clusterMonitor`。'
- en: Note
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The `Atlas admin` role is different from the MongoDB database `dbAdmin` role.
    The `Atlas admin` role includes the `dbAdmin` plus other roles, and is available
    only on the Atlas Cloud platform.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '`Atlas admin`角色与MongoDB数据库`dbAdmin`角色不同。`Atlas admin`角色包括`dbAdmin`以及其他角色，并且仅在Atlas
    Cloud平台上可用。'
- en: '**Read and write to any database**: This Atlas role has the read and write
    to any database role and is applicable to all database clusters created within
    one Atlas project account.'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**读写任何数据库**：此Atlas角色具有对任何数据库的读写权限，并适用于在一个Atlas项目账户中创建的所有数据库集群。'
- en: '**Only read any database**: This is a read-only Atlas role that is applicable
    to all database clusters created within one Atlas project account.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仅读取任何数据库**：这是一个只读的Atlas角色，适用于在一个Atlas项目帐户中创建的所有数据库集群。'
- en: Configuring Built-In Roles in Atlas
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Atlas中配置内置角色
- en: The simplest way to assign a built-in role is at the time when a new user is
    created. Atlas offers a very simple and intuitive interface to add new database
    users. The default `built-in role or privilege` is assigned when a new user is
    created. Nevertheless, the administrator can assign a different role for a new
    user or can edit the privileges for existing users.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建新用户时，分配内置角色的最简单方法是在创建新用户时。Atlas提供了一个非常简单直观的界面来添加新的数据库用户。在创建新用户时会分配默认的`内置角色或权限`。然而，管理员可以为新用户分配不同的角色，或者可以编辑现有用户的权限。
- en: Note
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: It is highly recommended to use only the Atlas web interface to manage database
    roles and privileges. Atlas will automatically disable and roll back any changes
    to database roles that are not made through the Atlas web interface.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议仅使用Atlas Web界面来管理数据库角色和权限。Atlas将自动禁用并回滚通过Atlas Web界面之外进行的任何更改数据库角色的更改。
- en: 'The user roles in Atlas can be managed in the `+ADD NEW USER` window or the
    `EDIT` user window, as presented in the previous section:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: Atlas中的用户角色可以在“+添加新用户”窗口或“编辑”用户窗口中进行管理，如前一节所述：
- en: '![Figure 3.23: Add New Database User window'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.23：添加新数据库用户窗口'
- en: '](img/B15507_03_23.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_23.jpg)'
- en: 'Figure 3.23: Add New Database User window'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.23：添加新数据库用户窗口
- en: 'By default, the built-in `Read and write any database` role is automatically
    selected in the window, as you can see in *Figure 3.23*. Nevertheless, the administrator
    can assign a different role (for example, `Atlas admin`) by clicking in the drop-down
    menu, as shown in *Figure 3.24*:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，在窗口中自动选择了内置的`读取和写入任何数据库`角色，如*图3.23*所示。然而，管理员可以通过单击下拉菜单来分配不同的角色（例如`Atlas管理员`），如*图3.24*所示：
- en: '![Figure 3.24: Selecting a role in the Add New User window'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.24：在“添加新用户”窗口中选择角色'
- en: '](img/B15507_03_24.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_24.jpg)'
- en: 'Figure 3.24: Selecting a role in the Add New User window'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.24：在“添加新用户”窗口中选择角色
- en: Advanced Privileges
  id: totrans-238
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 高级权限
- en: Sometimes, none of the built-in Atlas database roles are suitable for the access
    we need for the database. There are cases when the intended database design requires
    a special user access, or applications require a specific security policy that
    needs to be implemented.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，内置的Atlas数据库角色都不适合我们对数据库的访问需求。有时候，预期的数据库设计需要特殊的用户访问，或者应用程序需要实施特定的安全策略。
- en: Note
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Custom roles, which are presented later in this chapter, offer better functionality
    than advanced privileges. It is always recommended to create a custom role and
    assign individual permissions to a role rather than assigning specific privileges
    directly to users.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 稍后在本章中介绍的自定义角色比高级权限提供了���好的功能。始终建议创建自定义角色，并为角色分配单独的权限，而不是直接为用户分配特定的权限。
- en: 'If you select `Grant specific privileges` from the drop-down list, the interface
    changes:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 如果从下拉列表中选择`授予特定权限`，界面会发生变化：
- en: '![Figure 3.25: Granting specific privileges in the Add New User window'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.25：在“添加新用户”窗口中授予特定权限'
- en: '](img/B15507_03_25.jpg)'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_25.jpg)'
- en: 'Figure 3.25: Granting specific privileges in the Add New User window'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.25：在“添加新用户”窗口中授予特定权限
- en: As you can see in *Figure 3.25*, administrators can quickly assign specific
    MongoDB privileges to a user. This advanced functionality is covered in the custom
    roles later in this chapter. For the moment, let's configure database access in
    the following exercise.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 如*图3.25*所示，管理员可以快速为用户分配特定的MongoDB权限。这种高级功能将在本章后面的自定义角色中介绍。目前，让我们在以下练习中配置数据库访问。
- en: 'Exercise 3.02: Configuring Database Access'
  id: totrans-247
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习3.02：配置数据库访问
- en: The goal of this exercise is to enable database access for your new MongoDB
    database. Your database now allows connections, and it is asking for username
    and password validation. In order to enable access, you need to create a new user
    and grant appropriate database permissions for access.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 此练习的目标是为您的新MongoDB数据库启用数据库访问。您的数据库现在允许连接，并且正在请求用户名和密码验证。为了启用访问，您需要创建一个新用户，并为其授予适当的数据库权限。
- en: Create an admin user with the username `admindb`.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个用户名为`admindb`的管理员用户。
- en: 'Follow these steps to complete this exercise:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤完成此练习：
- en: Repeat *steps* *1*, *2*, and *3* from *Exercise 3.01*, *Enabling Network Access*,
    to log on to your new MongoDB Atlas web interface and select `project 0`.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复*步骤* *1*、*2*和*3*从*练习3.01*，*启用网络访问*，以登录到您的新MongoDB Atlas Web界面并选择`project 0`。
- en: 'From the `SECURITY` menu, select the `Database Access` option:![Figure 3.26:
    Selecting the Database Access option'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`安全`菜单中，选择`数据库访问`选项：![图3.26：选择数据库访问选项
- en: '](img/B15507_03_26.jpg)'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_26.jpg)'
- en: 'Figure 3.26: Selecting the Database Access option'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.26：选择数据库访问选项
- en: Click `ADD NEW DATABASE USER` in the `Database Users` tab to add a new database
    user. The `Add New User` window opens.
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`数据库用户`选项卡中单击`添加新数据库用户`以添加新的数据库用户。将打开“添加新用户”窗口。
- en: Keep the default authentication method, `Password`.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持默认的身份验证方法，`密码`。
- en: Provide a username or type `admindb` as the username.
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供用户名或输入`admindb`作为用户名。
- en: 'Provide the password or click `Autogenerate Secure Password` to generate the
    password. Click `SHOW` to see the autogenerated password:![Figure 3.27: Add New
    Database User window'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供密码或单击`自动生成安全密码`以生成密码。单击`显示`以查看自动生成的密码：![图3.27：添加新数据库用户窗口
- en: '](img/B15507_03_27.jpg)'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_27.jpg)'
- en: 'Figure 3.27: Add New Database User window'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.27：添加新数据库用户窗口
- en: Click on the drop-down menu under `Database User Privileges` and select the
    `Atlas admin` role.
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`数据库用户权限`下拉菜单，并选择`Atlas管理员`角色。
- en: 'Click `Add User`. The system will apply the changes to the databases:![Figure
    3.28: New admin user details'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`添加用户`。系统将对数据库应用更改：![图3.28：新管理员用户详细信息
- en: '](img/B15507_03_28.jpg)'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_28.jpg)'
- en: 'Figure 3.28: New admin user details'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.28：新管理员用户详细信息
- en: In *Figure 3.28*, you can see that a new user, `admindb`, has been created with
    `Authentication Method` of `SCRAM` and `MongoDB Role` (global) set to `atlasAdmin@admin`
    for all databases in the project.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 在*图3.28*中，您可以看到已创建了一个名为`admindb`的新用户，其`认证方法`为`SCRAM`，`MongoDB角色`（全局）设置为项目中所有数据库的`atlasAdmin@admin`。
- en: The new database user is now configured and deployed in Atlas.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 新的数据库用户现在已在Atlas中配置和部署。
- en: Configuring Custom Roles
  id: totrans-267
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置自定义角色
- en: As the name suggests, a custom role is a collection of selected database permissions
    that are not included in any of the built-in Atlas database roles. For example,
    if the read and update permissions are required, but without the right to delete
    and insert new documents, then a custom role needs to be created as this combination
    of permissions is not part of any built-in role.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 顾名思义，自定义角色是选定的数据库权限集合，不包括在任何内置的Atlas数据库角色中。例如，如果需要读取和更新权限，但没有删除和插入新文档的权限，则需要创建自定义角色，因为这种权限组合不是任何内置角色的一部分。
- en: From the `Database Access` window, click on the second tab in the application,
    `Custom Roles`. This option is used to create and modify custom Atlas roles.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 从“数据库访问”窗口中，单击应用程序中的第二个选项卡“自定义角色”。此选项用于创建和修改自定义Atlas角色。
- en: Note
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Custom roles need to be defined in Atlas before they can be assigned to users.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 在分配给用户之前，自定义角色需要在Atlas中定义。
- en: 'A new custom role can be created by clicking the `ADD NEW CUSTOM ROLE` button.
    The new custom role window appears:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过单击“添加新自定义角色”按钮来创建新的自定义角色。将出现新的自定义角色窗口：
- en: '![Figure 3.29: MongoDB custom roles'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.29：MongoDB自定义角色'
- en: '](img/B15507_03_29.jpg)'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_29.jpg)'
- en: 'Figure 3.29: MongoDB custom roles'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.29：MongoDB自定义角色
- en: 'Actions can be selected based on the following categories:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 可以根据以下类别选择操作：
- en: '**Collection Actions**: Actions that are applicable to a collection database
    object'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集合操作**：适用于集合数据库对象的操作'
- en: '**Database Actions**: Actions that are applicable to a database'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库操作**：适用于数据库的操作'
- en: '**Global Actions**: Actions that are applicable globally to all Atlas projects'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全局操作**：适用于所有Atlas项目的全局操作'
- en: For example, the database administrator permits users to only update a database
    collection. The user cannot delete or insert new documents in a collection. This
    specific combination of actions is not contained in any Atlas predefined role.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，数据库管理员只允许用户更新数据库集合。用户不能删除或插入新文档到集合中。这种特定的操作组合不包含在任何Atlas预定义角色中。
- en: 'There could be many combinations of Collection/Database/Global actions defined
    under one complex role. When the definition is complete, click the `Add Custom
    Role` button to create the new role in Atlas. The new role becomes visible in
    the list, as shown in *Figure 3.30*:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个复杂角色下可能定义许多集合/数据库/全局操作的组合。定义完成后，单击“添加自定义角色”按钮在Atlas中创建新角色。新角色将在列表中可见，如*图3.30*所示：
- en: '![Figure 3.30: Custom role list'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.30：自定义角色列表'
- en: '](img/B15507_03_30.jpg)'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_30.jpg)'
- en: 'Figure 3.30: Custom role list'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.30：自定义角色列表
- en: Note
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Once custom roles are created, they become visible in Atlas and can be assigned
    to database users. The new custom role can be assigned from the `ADD/EDIT` user
    window, in the `Database Privileges` drop-down list, under `Select pre-defined
    custom roles`.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 创建自定义角色后，它们将在Atlas中可见，并可以分配给数据库用户。可以从“添加/编辑”用户窗口中的“数据库权限”下拉列表中的“选择预定义的自定义角色”中分配新的自定义角色。
- en: The Database Client
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据库客户端
- en: 'Before we cover the specifics of the different types of clients of a MongoDB
    database, let''s look at a short introduction to clarify the basics of a database
    client. A database client is a software application that is designed to do the
    following:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们介绍MongoDB数据库不同类型的客户端之前，让我们先看一下简短的介绍，以澄清数据库客户端的基础知识。数据库客户端是一个旨在执行以下操作的软件应用程序：
- en: Connect to a MongoDB database server
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到MongoDB数据库服务器
- en: Request information from the database server
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从数据库服务器请求信息
- en: Modify data by sending MongoDB CRUD requests
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过发送MongoDB CRUD请求修改数据
- en: Send other database commands to the database server
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向数据库服务器发送其他数据库命令
- en: Interaction and compatibility with the MongoDB database server are essential.
    A difference in compatibility between the client and the server—for example, different
    versions—could produce unexpected results or generate database or application
    errors. This is the reason why clients are usually tested and certified for compatibility
    with a specific version of the MongoDB database.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 与MongoDB数据库服务器的交互和兼容性至关重要。例如，客户端和服务器之间的兼容性差异（例如，不同版本）可能会产生意外结果或生成数据库或应用程序错误。这就是为什么客户端通���会经过特定版本的MongoDB数据库的兼容性测试和认证的原因。
- en: 'Let''s categorize the MongoDB clients depending on the purpose for which they
    were created:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们根据创建目的对MongoDB客户端进行分类：
- en: '**Basic**: This is a minimalist version of the client. Usually delivered with
    the database software, basic clients provide an interactive application to work
    with the database server.'
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基本**：这是客户端的最简版本。通常随数据库软件一起提供，基本客户端提供一个交互式应用程序来与数据库服务器一起工作。'
- en: '**Data-oriented**: This type of client is designed to work with data. It usually
    provides a **Graphical User Interface** (**GUI**), and the tools that assist you
    to efficiently query, aggregate, and modify data.'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据导向**：这种类型的客户端旨在处理数据。通常提供**图形用户界面**（**GUI**）和辅助您高效查询、聚合和修改数据的工具。'
- en: '**Drivers**: These are designed to provide the interface between the MongoDB
    database and another software system, such as a general-use programming language.
    The main use of drivers is in software development and application deployments.'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**驱动程序**：这些驱动程序旨在提供MongoDB数据库与另一个软件系统（如通用编程语言）之间的接口。驱动程序的主要用途是在软件开发和应用部署中。'
- en: You now have all the configuration changes in place for the new MongoDB database
    deployed in the Atlas Cloud. The installation of MongoDB client on a local computer
    has already been covered in previous chapters. If necessary, review *Chapter 1*,
    *Introduction to MongoDB*, for basic MongoDB installation. The next step is to
    use your local MongoDB client to connect to your new database in the cloud. Secondly,
    a custom collection of Python scripts will be used for data migration, so you
    need to know how you can connect from Python to a MongoDB database in Atlas. The
    next section discusses all aspects regarding client connection in MongoDB.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已经完成了在Atlas Cloud中部署的新MongoDB数据库的所有配置更改。在之前的章节中已经介绍了在本地计算机上安装MongoDB客户端。如果需要，可以查看*第1章*
    *MongoDB简介*，了解基本的MongoDB安装。下一步是使用本地MongoDB客户端连接到云中的新数据库。其次，将使用一组自定义的Python脚本进行数据迁移，因此您需要知道如何从Python连接到Atlas中的MongoDB数据库。下一节将讨论MongoDB中客户端连接的所有方面。
- en: Connection Strings
  id: totrans-299
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连接字符串
- en: What exactly is a connection string and why is it important? A connection string
    is nothing more than a method to identify the database service address and its
    parameters so that clients can connect to the server over the network. It is important
    because without a connection string, the client would have no clue how to connect
    to the database service.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 连接字符串到底是什么，为什么它很重要？连接字符串只不过是一种标识数据库服务地址及其参数的方法，以便客户端可以通过网络连接到服务器。它很重要，因为没有连接字符串，客户端将不知道如何连接到数据库服务。
- en: Database clients, such as users and applications, need to form a valid connection
    string in order to be able to connect to the database service. Moreover, the MongoDB
    connection string follows the **Uniform Resource Identifier** (**URI**) format
    to pass all connection details to the database client.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库客户端，如用户和应用程序，需要形成一个有效的连接字符串，以便能够连接到数据库服务。此外，MongoDB连接字符串遵循**统一资源标识符**（**URI**）格式，以将所有连接详细信息传递给数据库客户端。
- en: 'Here is the general format of a MongoDB connection string: `mongodb+srv://user:pass@hostname:port/database_name?options`'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是MongoDB连接字符串的一般格式：`mongodb+srv://user:pass@hostname:port/database_name?options`
- en: 'The elements of the connection string are described in the following table:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 连接字符串的各个元素在下表中描述：
- en: '![Figure 3.31: Elements of the connection string'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.31：连接字符串的各个元素'
- en: '](img/B15507_03_31.jpg)'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_31.jpg)'
- en: 'Figure 3.31: Elements of the connection string'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.31：连接字符串的各个元素
- en: Note
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: More details about the new prefix `mongodb+srv` and how DNS SRV records are
    used for identifying the MongoDB service will be covered in *Chapter 10*, *Replication*.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 关于新前缀`mongodb+srv`以及如何使用DNS SRV记录来识别MongoDB服务的更多细节将在*第10章* *复制*中介绍。
- en: 'Let''s now look at some of the examples of connection strings, as follows:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看一些连接字符串的例子，如下所示：
- en: '`mongodb+srv://guest:passwd123@atlas1-u7xxx.mongodb.net:27017/data1`'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '`mongodb+srv://guest:passwd123@atlas1-u7xxx.mongodb.net:27017/data1`'
- en: 'This connection string is suitable to attempt a database connection with the
    following parameters:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 此连接字符串适合尝试使用以下参数进行数据库连接：
- en: The server is running on the Atlas Cloud (the hostname is `mongodb.net`).
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器在Atlas Cloud上运行（主机名为`mongodb.net`）。
- en: The database cluster name is `atlas1`.
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库集群名称为`atlas1`。
- en: The connection is attempted with the username `guest` and the password `passwd123`.
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试使用用户名`guest`和密码`passwd123`进行连接。
- en: The database service is presented on the standard TCP port `27017`.
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库服务在标准TCP端口`27017`上提供。
- en: The default database name on the server is `data1`.
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器上的默认数据库名称是`data1`。
- en: 'While the preceding connection string is valid for Atlas database connections,
    it is generally not a good idea to display the password in the connection string.
    Here is an example where the password is requested at connection time:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然前面的连接字符串对Atlas数据库连接是有效的，但通常不建议在连接字符串中显示密码。以下是一个在连接时请求密码的例子：
- en: '`mongodb+srv://guest@atlas1-u7xxx.mongodb.net:27017/data1`'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '`mongodb+srv://guest@atlas1-u7xxx.mongodb.net:27017/data1`'
- en: 'Another example is as follows:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子如下：
- en: '`mongodb+srv://atlas1-u7xxx.mongodb.net:27017/data1 --username guest`'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '`mongodb+srv://atlas1-u7xxx.mongodb.net:27017/data1 --username guest`'
- en: In this case, the connection is attempted with the `guest username`. However,
    the password is not part of the connection string, and it will be requested by
    the server at connection time.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，使用`guest用户名`尝试连接。但是，密码不是连接字符串的一部分，它将在连接时由服务器请求。
- en: 'If the database name is omitted (or is invalid), connection to the default
    database is attempted, which is the admin database. Also, if the TCP port is omitted,
    it will attempt to connect to the default TCP port 27017, as in the following
    example:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 如果省略了数据库名称（或者无效），则会尝试连接到默认数据库，即admin数据库。此外，如果省略了TCP端口，它将尝试连接到默认的TCP端口27017，如下例所示：
- en: '`mongodb+srv://guest@atlas1-u7xxx.mongodb.net`'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '`mongodb+srv://guest@atlas1-u7xxx.mongodb.net`'
- en: 'For non-cloud database connections or for legacy MongoDB connections, the simple
    `mongodb` prefix should be used instead. Here are a few examples of non-cloud
    connection strings:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 对于非云数据库连接或传统的MongoDB连接，应使用简单的`mongodb`前缀。以下是一些非云连接字符串的例子：
- en: '`mongodb://localhost/data1`'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '`mongodb://localhost/data1`'
- en: 'In this example, the hostname is `localhost`, which means that the database
    server is running on the same computer as the application, and connecting to the
    database `data1` is attempted. Here is another example of a remote network connection
    on the non-default TCP port `5500`:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，主机名是`localhost`，这意味着数据库服务器在与应用程序相同的计算机上运行，并尝试连接到数据库`data1`。以下是另一个在非默认TCP端口`5500`上进行远程网络连接的例子：
- en: '`mongodb://devsrv01.dev-domain-example.com:5500/data1`'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '`mongodb://devsrv01.dev-domain-example.com:5500/data1`'
- en: As no username is specified in the connection string, connection is attempted
    without a username. This type of connection works for databases that have no authorization
    mode (no user security configured). Authorization mode is always configured for
    cloud databases.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 如果连接字符串中未指定用户名，则尝试在没有用户名的情况下进行连接。这种类型的连接适用于没有授权模式（未配置用户安全）的数据库。授权模式始终针对云数据库进行配置。
- en: Note
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: A MongoDB connection string can be different if the database service is configured
    in a replication or sharded cluster. Examples of connection strings for MongoDB
    clusters will be provided later, in *Chapter 10*, *Replication*.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据库服务配置为复制或分片集群，则MongoDB连接字符串可能会有所不同。有关MongoDB集群的连接字符串示例将在*第10章* *复制*中提供。
- en: The Mongo Shell
  id: totrans-331
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Mongo Shell
- en: 'Probably the simplest way to connect to a MongoDB database is to use the mongo
    shell. The mongo shell offers a simple terminal mode client for a MongoDB database:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到MongoDB数据库最简单的方法可能是使用mongo shell。mongo shell为MongoDB数据库提供了一个简单的终端模式客户端：
- en: The mongo shell is included in all MongoDB installations.
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mongo shell包含在所有MongoDB安装中。
- en: It can be used to run server interactive commands in terminal mode.
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以用于在终端模式下运行服务器交互命令。
- en: It can be used to run JavaScript.
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以用于运行JavaScript。
- en: The mongo shell has its own commands.
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mongo shell有自己的命令。
- en: 'To start the mongo shell, run the `mongo` command in Command Prompt, as follows:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动mongo shell，请在命令提示符中运行`mongo`命令，如下所示：
- en: '[PRE1]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Exercise 3.03: Connecting to the Cloud Database Using the Mongo Shell'
  id: totrans-339
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习3.03：使用Mongo Shell连接到云数据库
- en: 'This simple exercise will show you the steps to connect to Atlas using the
    mongo shell. For this exercise, use the `mongodb+srv` prefix in the connection
    string. The first step is to obtain the cluster name (the DNS SRV record) for
    your Atlas Cloud database:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 这个简单的练习将向您展示使用mongo shell连接到Atlas的步骤。在这个练习中，使用连接字符串中的`mongodb+srv`前缀。第一步是获取Atlas
    Cloud数据库的集群名称（DNS SRV记录）：
- en: 'Log on to your new MongoDB Atlas web interface using your username and password,
    which was created when you registered for the Atlas Cloud:![Figure 3.32: MongoDB
    Atlas login page'
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到您的新MongoDB Atlas web界面，使用您在注册Atlas Cloud时创建的用户名和密码：![图3.32：MongoDB Atlas登录页面
- en: '](img/B15507_03_32.jpg)'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_32.jpg)'
- en: 'Figure 3.32: MongoDB Atlas login page'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.32：MongoDB Atlas登录页面
- en: Click on the `Clusters` tab in the `Atlas` project menu, as shown in *Figure
    3.33*.
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`Atlas`项目菜单中的`Clusters`选项卡，如*图3.33*所示。
- en: 'Click on the `CONNECT` button in the `Clusters` menu. In the case of M0 free-tier,
    there is a single cluster called `Cluster0`:![Figure 3.33: Clusters window'
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Clusters`菜单中点击`CONNECT`按钮。在M0免费版中，只有一个名为`Cluster0`的集群：![图3.33：集群窗口
- en: '](img/B15507_03_33.jpg)'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_33.jpg)'
- en: 'Figure 3.33: Clusters window'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.33：集群窗口
- en: 'The `Connect to Cluster0` window appears:![Figure 3.34: Connect to Cluster0
    window'
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`连接到Cluster0`窗口出现：![图3.34：连接到Cluster0窗口'
- en: '](img/B15507_03_34.jpg)'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_34.jpg)'
- en: 'Figure 3.34: Connect to Cluster0 window'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.34：连接到Cluster0窗口
- en: 'Click `Connect with the mongo shell`. The following window appears:![Figure
    3.35: Connect to Cluster0 page'
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`使用mongo shell连接`。将出现以下窗口：![图3.35：连接到Cluster0页面
- en: '](img/B15507_03_35.jpg)'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_35.jpg)'
- en: 'Figure 3.35: Connect to Cluster0 page'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.35：连接到Cluster0页面
- en: Select the `I have the mongo shell installed` option and select the correct
    mongo shell version (the latest mongo shell version is 4.4 at the time of writing).
    Alternatively, you can select `I do not have the mongo shell installed` and install
    the mongo shell, if you have not installed it yet.
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`我已安装mongo shell`选项，并选择正确的mongo shell版本（在撰写本文时，最新的mongo shell版本是4.4）。或者，如果您尚未安装mongo
    shell，可以选择`我尚未安装mongo shell`并安装mongo shell。
- en: Click `Copy` to copy the connection string to the clipboard.
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击`复制`以将连接字符串复制到剪贴板。
- en: Start a command prompt window or terminal in your operating system.
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的操作系统中启动命令提示符窗口或终端。
- en: 'Start the mongo shell with the new connection string command line:'
  id: totrans-357
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用新的连接字符串命令行启动mongo shell：
- en: '[PRE2]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The following details will appear:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 以下详细信息将出现：
- en: '[PRE3]'
  id: totrans-360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: To connect to the Atlas database as the `admindb` database user created in *Exercise
    3.02*, *Configuring Database Access*, when prompted, provide the password for
    the `admindb` user and complete the connection.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 要作为*练习3.02*中创建的`admindb`数据库用户连接到Atlas数据库时，当提示时提供`admindb`用户的密码并完成连接。
- en: 'After the connection is established successfully, the shell prompt will display
    the following details:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 成功建立连接后，shell提示将显示以下详细信息：
- en: '[PRE4]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The details for this are as follows:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 具体细节如下：
- en: '`Enterprise`: This refers to the MongoDB Enterprise edition.'
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`企业`：这指的是MongoDB企业版。'
- en: '`atlas1-#####-shard-0`: This refers to the MongoDB replica set name. We will
    learn about this in more detail later.'
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`atlas1-#####-shard-0`：这指的是MongoDB副本集名称。我们将在后面更详细地了解这个。'
- en: '`PRIMARY>`: This refers to the state of the MongoDB instance, which is `PRIMARY`.'
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PRIMARY>`：这指的是MongoDB实例的状态，即`PRIMARY`。'
- en: Note
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'You may see a message saying `WARNING: shell and server versions do not match`.
    This is because the latest version of mongo shell is 4.4, while the M0 Atlas cloud
    database is version 4.2.8\. This warning can be ignored.'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会看到一条消息，上面写着`警告：shell和服务器版本不匹配`。这是因为mongo shell的最新版本是4.4，而M0 Atlas云数据库的版本是4.2.8。可以忽略此警告。
- en: Type `exit` to exit the mongo shell.
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`exit`退出mongo shell。
- en: In this exercise, you connected to a cloud database using the mongo shell client.
    For convenience, you used the Atlas interface to copy the connection string for
    our Atlas cluster. In practice, developers already have the database connection
    string prepared in advance, so they don't need to copy it from the Atlas application
    every time they connect to the database.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，您使用mongo shell客户端连接到了一个云数据库。为了方便起见，您使用Atlas界面复制了我们Atlas集群的连接字符串。在实践中，开发人员已经提前准备好了数据库连接字符串，因此他们不需要每次连接数据库时都从Atlas应用程序中复制它。
- en: MongoDB Compass
  id: totrans-372
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MongoDB Compass
- en: MongoDB Compass is a graphical tool for data visualization in MongoDB. It is
    installed together with MongoDB Server installation, as MongoDB Compass is part
    of the standard distribution. Alternatively, MongoDB Compass can be downloaded
    and installed separately, without the MongoDB Server software.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Compass是MongoDB中数据可视化的图形工具。它与MongoDB服务器安装一起安装，因为MongoDB Compass是标准发行版的一部分。另外，MongoDB
    Compass也可以单独下载和安装，而无需MongoDB服务器软件。
- en: The simple and powerful GUI interface of MongoDB Compass helps you to easily
    query and analyze data in the database. MongoDB Compass has a query builder graphical
    interface that greatly simplifies the work of creating complex JSON database queries.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Compass的简单而强大的图形用户界面帮助您轻松查询和分析数据库中的数据。MongoDB Compass具有一个查询构建器图形界面，大大简化了创建复杂的JSON数据库查询的工作。
- en: 'The MongoDB Compass version 1.23 is shown in the following screenshot:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Compass版本1.23如下截图所示：
- en: '![Figure 3.36: MongoDB Compass connected to Atlas cloud'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.36：MongoDB Compass连接到Atlas云'
- en: '](img/B15507_03_36.jpg)'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_36.jpg)'
- en: 'Figure 3.36: MongoDB Compass connected to Atlas cloud'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.36：MongoDB Compass连接到Atlas云
- en: 'The following are the most important MongoDB Compass features in the standard version:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是标准版本中最重要的MongoDB Compass功能：
- en: Easy management of database connections
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻松管理数据库连接
- en: Interaction with data, queries, and CRUD
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与数据、查询和CRUD的交互
- en: Efficient graphical query builder
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高效的图形查询构建器
- en: Management of query execution plans
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询执行计划的管理
- en: Aggregation builder
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聚合构建器
- en: Management of collection indexes
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集合索引的管理
- en: Schema Analysis
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模式分析
- en: Real Time Server Stats
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实时服务器统计信息
- en: 'Apart from standard MongoDB Compass standard version, at the time when this
    chapter was written there are other two versions of MongoDB Compass available
    for download:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 除了标准的MongoDB Compass版本外，在撰写本章时，还有其他两个版本的MongoDB Compass可供下载：
- en: 'Compass Isolated: For highly secure environments. The isolated version of Compass
    initiates network requests only to MongoDB server on which is connected.'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Compass隔离：用于高度安全的环境。Compass的隔离版本仅向连接的MongoDB服务器发起网络请求。
- en: 'Compass Read Only: As the name suggests, the read only version of Compass does
    not change any data in the database and it is used only for queries.'
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Compass只读：顾名思义，Compass的只读版本不会更改数据库中的任何数据，仅用于查询。
- en: 'Note:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：
- en: MongoDB Compass Community version is now deprecated. Instead you can use full
    version of MongoDB Compass, which is free to use and includes enterprise edition
    features like MongoDB schema analysis.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Compass社区版本现已停用。您可以使用免费的完整版本MongoDB Compass，其中包括MongoDB模式分析等企业版功能。
- en: MongoDB Drivers
  id: totrans-393
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MongoDB驱动程序
- en: There is a misconception that MongoDB is only a database for the JavaScript
    stack. It is inappropriate to minimize the power of MongoDB and to use it only
    for JavaScript applications.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种误解，即MongoDB只是JavaScript堆栈的数据库。将MongoDB的能力减小并仅将其用于JavaScript应用程序是不恰当的。
- en: MongoDB is a multi-platform database with a flexible data model that can be
    used for any type of application. Also, there is great support for MongoDB in
    almost every programming language.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB是一个多平台数据库，具有灵活的数据模型，可用于任何类型的应用程序。此外，几乎每种编程语言都对MongoDB有很好的支持。
- en: Probably the most useful and popular versions of MongoDB clients are represented
    by drivers. MongoDB drivers are the glue between the database and the world of
    software development. Currently, there are many drivers for the most popular programming
    languages, such as C/C++, C#, Java, Node, and Python.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，最有用和最受欢迎的MongoDB客户端版本是驱动程序。MongoDB驱动程序是数据库与软件开发世界之间的粘合剂。目前，对于最流行的编程语言，如C/C++、C#、Java、Node和Python，都有许多驱动程序。
- en: The Driver API, which is the software library interface, makes it possible to
    use MongoDB database functions directly in programming language structures. For
    example, specific BSON data types from MongoDB are translated into a data format
    that can be used in a programming language such as Python.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 驱动程序API是软件库接口，它使得可以直接在编程语言结构中使用MongoDB数据库功能。例如，来自MongoDB的特定BSON数据类型被转换为可以在诸如Python之类的编程语言中使用的数据格式。
- en: 'Exercise 3.04: Connecting to a MongoDB Cloud Database Using the Python Driver'
  id: totrans-398
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习3.04：使用Python驱动程序连接到MongoDB云数据库
- en: 'Business decisions are often made on the basis of data analysis. Sometimes,
    in order to obtain useful results, developers use a programming language such
    as Python to analyze data. Python is a powerful programming language, yet it is
    easy to learn and practice. In this exercise, you will connect to a MongoDB database
    from Python 3\. Before you connect to MongoDB using Python, note the following
    points:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 商业决策通常基于数据分析。有时，为了获得有用的结果，开发人员使用诸如Python之类的编程语言来分析数据。Python是一种强大的编程语言，但易于学习和实践。在这个练习中，您将从Python
    3连接到MongoDB数据库。在使用Python连接到MongoDB之前，请注意以下几点：
- en: You need not install MongoDB locally on your computer in order to connect using
    Python.
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您无需在计算机上本地安装MongoDB即可使用Python进行连接。
- en: The Python library uses the `pymongo` module to connect to MongoDB.
  id: totrans-401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python库使用`pymongo`模块连接到MongoDB。
- en: The `pymongo` module is available for both Python 2 and Python 3\. However,
    as Python 2 is now end-of-life, it is highly recommended to use Python 3 for new
    software development.
  id: totrans-402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pymongo`模块适用于Python 2和Python 3。但是，由于Python 2现在已经停止维护，强烈建议在新软件开发中使用Python 3。'
- en: MongoDB client is part of the `pymongo` Python library.
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MongoDB客户端是`pymongo` Python库的一部分。
- en: You also need to install the DNSPython module because the Atlas connection string
    is a DNS SRV record. Therefore, the DNSPython module is needed to perform a DNS
    lookup.
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您还需要安装DNSPython模块，因为Atlas连接字符串是DNS SRV记录。因此，需要DNSPython模块来执行DNS查找。
- en: 'Follow these steps to complete the exercise:'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤完成练习：
- en: 'Verify that the Python version is 3.6 or higher, as follows:'
  id: totrans-406
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证Python版本是否为3.6或更高，方法如下：
- en: '[PRE5]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For macOS or Linux, the Python shell can start with `python3` instead of `python`.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 对于macOS或Linux，Python shell可以使用`python3`而不是`python`来启动。
- en: 'Before installing `pymongo`, make sure the Python package manager, `pip`, is installed:'
  id: totrans-410
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`pymongo`之前，请确保安装了Python软件包管理器`pip`：
- en: '[PRE6]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Install `pymongo` `client`, as follows:'
  id: totrans-412
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`pymongo` `client`，如下：
- en: '[PRE7]'
  id: totrans-413
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Install the `dnspython` module, as follows:'
  id: totrans-414
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`dnspython`模块，如下：
- en: '[PRE8]'
  id: totrans-415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Now that you have prepared the Python environment, the next step is to get the
    correct connection string for your cloud database. Test the MongoDB connection
    to confirm this.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经准备好了Python环境，下一步是获取你的云数据库的正确连接字符串。测试MongoDB连接以确认这一点。
- en: 'Edit the connection string and add your database name and password. The connection
    is attempted with the `admindb` username created in *Exercise 3.02*, *Configuring
    Database Access*:'
  id: totrans-417
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑连接字符串并添加你的数据库名称和密码。使用在*Exercise 3.02*，*Configuring Database Access*中创建的`admindb`用户名尝试连接：
- en: '[PRE9]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Replace `<server_link>` with your server link.
  id: totrans-419
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用你的服务器链接替换`<server_link>`。
- en: Note
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'For example, consider this case in which the connection string is as follows:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑以下情况，连接字符串如下：
- en: '`"mongodb+srv://admindb:xxxxxx@cluster0-u7xxx.mongodb.net/test?retryWrites=true&w=majority"`'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: '`"mongodb+srv://admindb:xxxxxx@cluster0-u7xxx.mongodb.net/test?retryWrites=true&w=majority"`'
- en: 'Here, the server link can be quickly identified as : `cluster0-u7xxx.mongodb.net`'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，服务器链接可以快速识别为：`cluster0-u7xxx.mongodb.net`
- en: Replace `<database_name>` with your database name, in this case, `sample_mflix`.
  id: totrans-424
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用你的数据库名称替换`<database_name>`，在这种情况下是`sample_mflix`。
- en: Replace `<password>` with the `admindb` user password.
  id: totrans-425
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用`admindb`用户密码替换`<password>`。
- en: Note
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you want to connect with a different user—not `admindb`—replace `admindb`
    with your username, and `<password>` with your password.
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想用不同的用户连接，而不是`admindb`，请用你的用户名替换`admindb`，用你的密码替换`<password>`。
- en: 'Edit a test script in Python to test your connection and execute the Python
    script. In Windows, open the Notepad text editor and type in the following Python
    code:'
  id: totrans-428
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑一个Python测试脚本来测试你的连接并执行Python脚本。在Windows中，打开记事本文本编辑器，输入以下Python代码：
- en: '[PRE10]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Note:'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：
- en: Don't forget to update the URI with your Atlas connection details. If you use
    the URI provided in this example, then you will receive a connection error.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记使用你的Atlas连接详细信息更新URI。如果你使用本例中提供的URI，那么你将收到连接错误。
- en: Save the text script with the name `mongo4_atlas.py`—for example, in `C:\Temp\mongo4_atlas.py`.
  id: totrans-432
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文本脚本保存为`mongo4_atlas.py`，例如在`C:\Temp\mongo4_atlas.py`中。
- en: Run the test script.
  id: totrans-433
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行测试脚本。
- en: 'In Windows'' Command Prompt, type:'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows的命令提示符中，键入：
- en: '[PRE11]'
  id: totrans-435
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'In a macOS/Linux shell prompt, type:'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 在macOS/Linux shell提示符中，键入：
- en: '[PRE12]'
  id: totrans-437
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The output of the script will show the collections in the database, as follows:'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本的输出将显示数据库中的集合，如下所示：
- en: '[PRE13]'
  id: totrans-439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In this exercise, you practiced working with MongoDB in the cloud in practical
    terms using a programming language such as Python. The possibilities are unlimited
    in terms of using the extended Python library; you can create web applications,
    perform data analytics, and much more.
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，你通过使用Python等编程语言在云中实际操作MongoDB。在使用扩展的Python库方面，可能性是无限的；你可以创建Web应用程序，进行数据分析等。
- en: Server Commands
  id: totrans-441
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务器命令
- en: MongoDB is a database server that has clients that connect to the server over
    the network. The database server manages the database, while clients are used
    by applications or users to query data from the database. If you're wondering
    whether there are only databases (without a server), then yes, there are. For
    example, Microsoft Access is an example of a relational database without a database
    server. The main advantage of the client-server architecture is that the server
    consolidates control data management, user security, and concurrency for parallel
    access.
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB是一个数据库服务器，它有客户端通过网络连接到服务器。数据库服务器管理数据库，而客户端被应用程序或用户用来从数据库查询数据。如果你想知道是否只有数据库（没有服务器），那么是的，有的。例如，Microsoft
    Access就是一个没有数据库服务器的关系型数据库的例子。客户端-服务器架构的主要优势在于服务器整合了控制数据管理、用户安全和并行访问的并发性。
- en: There is also a separation of physical and logical structures. The database
    server manages the database's physical structures, such as storage and memory.
    On the other hand, database clients usually have access only to logical database
    structures, such as collections, indexes, and views.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 还有物理和逻辑结构的分离。数据库服务器管理数据库的物理结构，如存储和内存。另一方面，数据库客户端通常只能访问逻辑数据库结构，如集合、索引和视图。
- en: This section will briefly explain the physical and logical structures in MongoDB
    4.4.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将简要解释MongoDB 4.4中的物理和逻辑结构。
- en: Physical Structure
  id: totrans-445
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 物理结构
- en: The physical structure of the database consists of computing resources allocated
    for MongoDB Server, such as processor threads, memory allocation, and database
    file storage. Computing requirements and tuning are important parts of database
    management, especially for on-premises database servers. Nevertheless, in the
    case of databases deployed on the MongoDB Atlas Cloud, the physical structure
    of the database is not visible to users. The database is managed internally by
    MongoDB. Therefore, cloud users can focus exclusively on database utilization
    and application development rather than spending time on the database management
    of physical resources such as storage and memory.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库的物理结构由为MongoDB服务器分配的计算资源组成，例如处理器线程、内存分配和数据库文件存储。计算需求和调整是数据库管理的重要部分，特别是对于本地部署的数据库服务器。然而，在部署在MongoDB
    Atlas云上的数据库的情况下，数据库的物理结构对用户不可见。数据库由MongoDB在内部管理。因此，云用户可以专注于数据库利用和应用开发，而不是花时间在物理资源的数据库管理上，比如存储和内存。
- en: As described in the introduction, MongoDB Atlas allocates physical resources
    based on cluster tier size. Resource management is done entirely through the cloud
    Atlas application. If more resources are needed, the cluster can be extended to
    a larger size.
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 如介绍所述，MongoDB Atlas根据集群层大小分配物理资源。资源管理完全通过云Atlas应用程序进行。如果需要更多资源，集群可以扩展到更大的大小。
- en: The free-tier M0 cluster has no dedicated resources (only shared CPU and memory).
    However, the free-tier M0 cluster is a great database cluster because it's always
    available for learning about and testing MongoDB.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 免费的M0集群没有专用资源（只有共享的CPU和内存）。但是，免费的M0集群是一个很好的数据库集群，因为它始终可用于学习和测试MongoDB。
- en: Database Files
  id: totrans-449
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据库文件
- en: 'MongoDB automatically creates many types of files, such as data files and log
    files, on disk. In the case of Atlas Cloud databases, all database files are managed
    internally by MongoDB:'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB会在磁盘上自动创建许多类型的文件，如数据文件和日志文件。在Atlas云数据库的情况下，所有数据库文件都由MongoDB内部管理：
- en: '**Datafiles:** These are files used for database collections and other database
    objects. MongoDB has a configurable storage engine for data files, and WiredTiger
    is a high-performance storage engine, that has been introduced in MongoDB since
    version 3.0.'
  id: totrans-451
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据文件：** 这些文件用于数据库集合和其他数据库对象。MongoDB有一个可配置的数据文件存储引擎，WiredTiger是一个高性能的存储引擎，自MongoDB
    3.0版本以来就被引入。'
- en: '**Oplog:** These are files used for transaction replication between cluster
    members. We will learn about these in detail in *Chapter 10*, *Replication.*'
  id: totrans-452
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Oplog：** 这些文件用于集群成员之间的事务复制。我们将在*第10章*中详细学习这些。'
- en: '**Other files:** These are files such as config files, database logs, and audit
    files.'
  id: totrans-453
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他文件：** 这些文件包括配置文件、数据库日志和审计文件。'
- en: Database Metrics
  id: totrans-454
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据库指标
- en: While data files and memory management are not topics for databases deployed
    in the cloud, it is necessary to monitor the utilization of allocated cloud resources.
    Atlas resource monitoring provides a graphical interface where performance metrics
    are displayed. There are many metrics available in Atlas, such as logical database
    metrics, physical database metrics, and network bandwidth.
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然云部署的数据库不涉及数据文件和内存管理，但有必要监视分配的云资源的利用情况。Atlas资源监控提供了一个图形界面，显示性能指标。在Atlas中有许多可用的指标，如逻辑数据库指标、物理数据库指标和网络带宽。
- en: The content coverage of this topic is beyond the scope of this book. For more
    details, you can refer to the MongoDB Atlas documentation, *Monitoring and Alerts*
    ([https://docs.atlas.mongodb.com/monitoring-alerts/](https://docs.atlas.mongodb.com/monitoring-alerts/)).
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 此主题的内容超出了本书的范围。有关更多详细信息，您可以参考MongoDB Atlas文档，*监控和警报* ([https://docs.atlas.mongodb.com/monitoring-alerts/](https://docs.atlas.mongodb.com/monitoring-alerts/))。
- en: Logical Structure
  id: totrans-457
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 逻辑结构
- en: 'The logical structure of the database consists of databases, collections, and
    other database objects. The following diagram represents the main logical structure
    of MongoDB:'
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库的逻辑结构包括数据库、集合和其他数据库对象。以下图表示了MongoDB的主要逻辑结构：
- en: '![Figure 3.37: Logical structure of MongoDB'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.37：MongoDB的逻辑结构'
- en: '](img/B15507_03_37.jpg)'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_37.jpg)'
- en: 'Figure 3.37: Logical structure of MongoDB'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.37：MongoDB的逻辑结构
- en: '**MongoDB Server:** Physical or virtual computer where the MongoDB server instance
    is running. For a MongoDB cluster, there is a set of few MongoDB instances when
    a client connects to MongoDB'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '**MongoDB服务器：** 运行MongoDB服务器实例的物理或虚拟计算机。对于MongoDB集群，当客户端连接到MongoDB时，会有一组少量的MongoDB实例'
- en: '**Database:** A MongoDB cluster contains many databases. Each database is a
    logical storage container in MongoDB for database objects. There are a few system
    databases, created when a database is deployed. System databases are used internally
    by MongoDB Server for database configuration and security, and they cannot be
    used for user data.'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据库：** MongoDB集群包含许多数据库。每个数据库是MongoDB中的逻辑存储容器，用于数据库对象。在部署数据库时会创建一些系统数据库。系统数据库由MongoDB服务器内部用于数据库配置和安全，不能用于用户数据。'
- en: '**Objects:** A database contains the following objects:'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: '**对象：** 一个数据库包含以下对象：'
- en: Collections of JSON documents
  id: totrans-465
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JSON文档的集合
- en: Indexes
  id: totrans-466
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引
- en: Views
  id: totrans-467
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视图
- en: The basic logical entity in MongoDB is the JSON document. Multiple documents
    are grouped in a collection, and multiple collections are grouped in a database.
    In MongoDB version 4, more objects were introduced, such as database views, which
    add more functionality to the database. We will learn about database view objects
    with a suitable example in *Exercise 3.05*, *Creating a Database View Object*.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB中的基本逻辑实体是JSON文档。多个文档被分组在一个集合中，多个集合被分组在一个数据库中。在MongoDB版本4中，引入了更多的对象，如数据库视图，这为数据库增加了更多功能。我们将在*练习3.05*中使用一个合适的示例来学习数据库视图对象的内容，*创建数据库视图对象*。
- en: Server Commands
  id: totrans-469
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 服务器命令
- en: In a client-server database server architecture, such as MongoDB Server, clients
    send requests to the database server and MongoDB Server executes the requests
    on the server side. Therefore, there is no client processing involved when a server
    executes a client request. Once the request is complete, the server sends the
    execution results or messages back to the client.
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 在客户端-服务器数据库服务器架构中，例如MongoDB服务器，客户端向数据库服务器发送请求，MongoDB服务器在服务器端执行请求。因此，当服务器执行客户端请求时，不涉及客户端处理。一旦请求完成，服务器将执行结果或消息发送回客户端。
- en: 'While MongoDB Server has many functions, there are a few different categories:'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB服务器有许多功能，但有几个不同的类别：
- en: '**CRUD operations**: Database **Create, Read, Update, Delete** (**CRUD**) operations
    are commands that modify data documents.'
  id: totrans-472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CRUD操作**：数据库**创建、读取、更新、删除**（**CRUD**）操作是修改数据文档的命令。'
- en: '**Database Commands**: These are all the commands that differ from data queries
    and CRUD operations. Database commands have other functions, such as database
    management, security, and replication.'
  id: totrans-473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库命令**：这些命令与数据查询和CRUD操作不同。数据库命令有其他功能，如数据库管理、安全和复制。'
- en: Most database commands are executed in the background by Atlas every time a
    user changes a database configuration. For example, when the Atlas project owner
    adds a new user, the Atlas application runs database commands in the background
    to create the user in the database. Nevertheless, it is possible to execute server
    commands from MongoDB Shell or from MongoDB Driver.
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数数据库命令都是由Atlas在用户更改数据库配置时在后台执行的。例如，当Atlas项目所有者添加新用户时，Atlas应用程序会在后台运行数据库命令，以在数据库中创建用户。然而，也可以从MongoDB
    Shell或MongoDB Driver中执行服务器命令。
- en: 'In general, the syntax to run a database command is as follows:'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，运行数据库命令的语法如下：
- en: '[PRE14]'
  id: totrans-476
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '`db_command` is the database command.'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: '`db_command`是数据库命令。'
- en: 'For example, if we want to retrieve the current operations being executed in
    MongoDB, we can run a command with the following syntax:'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们想要检索在MongoDB中正在执行的当前操作，我们可以使用以下语法运行命令：
- en: '[PRE15]'
  id: totrans-479
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The server will return a JSON formatted document with the operations in progress.
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器将返回一个JSON格式的文档，其中包含正在进行的操作。
- en: 'Some database commands have their own shorter syntax and can run without the
    general `db.runCommand` syntax. This is used for convenience to remember the syntax
    for commands that are used more often. For example, the syntax for the command
    to list all collections in the current database is:'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 一些数据库命令有自己的更短的语法，并且可以在没有一般`db.runCommand`语法的情况下运行。这是为了方便记住更常用的命令的语法。例如，列出当前数据库中所有集合的命令的语法是：
- en: '[PRE16]'
  id: totrans-482
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: For databases deployed in the Atlas Cloud, there are some database admin commands
    that cannot be executed directly from the mongo shell. The complete list of commands
    is available in the MongoDB Atlas documentation, *Unsupported Commands in M0/M2/M5
    Clusters* ([https://docs.atlas.mongodb.com/reference/unsupported-commands/](https://docs.atlas.mongodb.com/reference/unsupported-commands/)).
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 对于部署在Atlas Cloud中的数据库，有一些数据库管理命令无法直接从mongo shell中执行。完整的命令列表可在MongoDB Atlas文档中找到，*M0/M2/M5集群中不支持的命令*（[https://docs.atlas.mongodb.com/reference/unsupported-commands/](https://docs.atlas.mongodb.com/reference/unsupported-commands/)）。
- en: 'Exercise 3.05: Creating a Database View Object'
  id: totrans-484
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 练习3.05：创建数据库视图对象
- en: 'In this exercise, you will practice database commands. The goal of the exercise
    is to create a new database object from the mongo shell terminal. You will create
    a database view object to display only three columns: movie name, release year,
    and collection information. You will use the MongoDB console to execute all the
    database commands.'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，您将练习数据库命令。练习的目标是从mongo shell终端创建一个新的数据库对象。您将创建一个数据库视图对象，仅显示三列：电影名称，发行年份和集合信息。您将使用MongoDB控制台执行所有数据库命令。
- en: 'The following are the steps to execute this exercise:'
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是执行此练习的步骤：
- en: Connect to the Atlas database using the connection string for the MongoDB console.
    Repeat *steps 1 to 9* from *Exercise 3.03*, *Connecting to the Cloud Database
    using the Mongo Shell*, to connect using the mongo shell client. If you have the
    connection string already prepared for your Atlas database, start the mongo shell
    and connect as described in *step 8* of *Exercise 3.03*, *Connecting to the Cloud
    Database using the Mongo Shell*.
  id: totrans-487
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用MongoDB控制台的连接字符串连接到Atlas数据库。重复*练习3.03*中的*步骤1到9*，*使用Mongo Shell连接到云数据库*，使用mongo
    shell客户端进行连接。如果您已经为Atlas数据库准备好了连接字符串，请启动mongo shell并按照*练习3.03*中的*步骤8*描述的方式进行连接，*使用Mongo
    Shell连接到云数据库*。
- en: 'Select the `mflix` movie database using the `use` database command:'
  id: totrans-488
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`use`数据库命令选择`mflix`电影数据库：
- en: '[PRE17]'
  id: totrans-489
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'List the existing collections using the `getCollectionNames` database command
    to return a list of all the collections in the current database:'
  id: totrans-490
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`getCollectionNames`数据库命令列出现有的集合，以返回当前数据库中所有集合的列表：
- en: '[PRE18]'
  id: totrans-491
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Create a `short_movie_info` view from the movies collection:'
  id: totrans-492
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从电影集合创建一个`short_movie_info`视图：
- en: '[PRE19]'
  id: totrans-493
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Note
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The `$project` operator is used to select only three fields (`year`, `title`,
    and `plot`) from the movie collection.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: '`$project`运算符用于从电影集合中选择仅三个字段（`year`，`title`和`plot`）。'
- en: 'Execute the `createView` code:'
  id: totrans-496
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行`createView`代码：
- en: '[PRE20]'
  id: totrans-497
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'A response of `"ok" : 1` indicates that the command to create and view the
    database was executed successfully with no errors, as in the following code output:'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: '响应`"ok" : 1`表示成功执行创建和查看数据库的命令，没有错误，如下代码输出所示：'
- en: '[PRE21]'
  id: totrans-499
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Note
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The output details may vary based on the server runtime values.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的详细信息可能会根据服务器运行时的值而有所不同。
- en: 'Verify that the view was created. The view just shows as a collection:'
  id: totrans-502
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证视图是否已创建。视图只显示为一个集合：
- en: '[PRE22]'
  id: totrans-503
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: This command returns an array with the view name in the collection list.
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令返回一个包含集合列表中视图名称的数组。
- en: 'Query the view, as follows:'
  id: totrans-505
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查询视图，如下：
- en: '[PRE23]'
  id: totrans-506
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The view database object behaves exactly like a normal collection. You can query
    a view in the same way you query a database collection. You will run a short query
    to return just one document.
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 视图数据库对象的行为与普通集合完全相同。您可以以与查询数据库集合相同的方式查询视图。您将运行一个简短的查询，只返回一个文档。
- en: 'The output for this query will show only the document `id`, `plot`, `year`,
    and `title`. The complete session output is as follows:'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 此查询的输出将只显示文档`id`，`plot`，`year`和`title`。完整的会话输出如下：
- en: '![Figure 3.38: Session output'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.38：会话输出'
- en: '](img/B15507_03_38.jpg)'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_38.jpg)'
- en: 'Figure 3.38: Session output'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.38：会话输出
- en: This was an example of how to create a new database object, such as a simple
    view. Views can be very useful for users and developers to join multiple collections
    and to limit visibility to just some fields in JSON documents. Once we have learned
    more about MongoDB queries and aggregation, we can apply all those techniques
    to create more complex views in the database, from multiple collections to using
    the aggregation pipeline.
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个创建新数据库对象的示例，比如一个简单的视图。视图对于用户和开发人员来说非常有用，可以连接多个集合，并且可以限制JSON文档中的某些字段的可见性。一旦我们学习了更多关于MongoDB查询和聚合的知识，我们就可以应用所有这些技术来在数据库中创建更复杂的视图，从多个集合到使用聚合管道。
- en: 'Activity 3.01: Managing Your Database Users'
  id: totrans-513
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 活动3.01：管理您的数据库用户
- en: Imagine you are in charge of managing your company's MongoDB database, which
    is in the MongoDB Atlas Cloud infrastructure in **Amazon Web Services** (**AWS**).
    Recently, you've been informed that a new developer, Mark, has joined the team.
    As a new team member, Mark needs access to the MongoDB movie database for a new
    project.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您负责管理公司的MongoDB数据库，该数据库位于**亚马逊网络服务**（**AWS**）的MongoDB Atlas云基础设施中。最近，您收到通知，新开发人员Mark已加入团队。作为新团队成员，Mark需要访问MongoDB电影数据库，用于一个新项目。
- en: 'Execute the following high-level steps to complete the activity:'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下高级步骤以完成此活动：
- en: Create a new database called `dev_mflix`, which will be used for development.
  id: totrans-516
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`dev_mflix`的新数据库，该数据库将用于开发。
- en: Create a new custom role for developers, called `developers`.
  id: totrans-517
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为开发人员创建一个名为`developers`的新自定义角色。
- en: Grant read-write permissions on the `dev_mflix` database to the `developers` role.
  id: totrans-518
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向`developers`角色授予对`dev_mflix`数据库的读写权限。
- en: Grant read-only permissions on the `sample_mflix` movie database to the `developers`
    role.
  id: totrans-519
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向`developers`角色授予对`sample_mflix`电影数据库的只读权限。
- en: Create a new database account for Mark.
  id: totrans-520
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为Mark创建一个新的数据库帐户。
- en: Grant the `developers` custom role to Mark.
  id: totrans-521
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`developers`自定义角色授予Mark。
- en: Verify the account by connecting to the database with Mark as the user and verify
    the access permissions.
  id: totrans-522
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过使用Mark作为用户连接到数据库来验证帐户，并验证访问权限。
- en: Mark should not be able to modify the production movie database, nor should
    he see any other databases on the server except `sample_mflix` and `dev_mflix`.
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: Mark不应能够修改生产电影数据库，也不应该能够看到服务器上除`sample_mflix`和`dev_mflix`之外的任何其他数据库。
- en: 'Once Mark is successfully added to the Atlas project, you should be able to
    test the connection with that account. Connect with the mongo shell using the
    following command:'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Mark成功添加到Atlas项目中，您应该能够使用该帐户测试连接。使用以下命令使用mongo shell进行连接：
- en: '[PRE24]'
  id: totrans-525
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Note
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Your actual connection string is different and needs to be copied from the Atlas
    connect window, as explained in this chapter.
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 您的实际连接字符串不同，需要从Atlas连接窗口中复制，如本章所述。
- en: 'This is an example of the output terminal (from the mongo shell):'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 这是输出终端的一个示例（来自mongo shell）：
- en: '![Figure 3.39: Connecting the MongoDB Shell'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: '![图3.39：连接MongoDB Shell'
- en: '](img/B15507_03_39.jpg)'
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/B15507_03_39.jpg)'
- en: 'Figure 3.39: Connecting the MongoDB Shell'
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.39：连接MongoDB Shell
- en: Note
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The solution for this activity can be found via [this link](B15507_Solution_Final_SZ_ePub.xhtml#_idTextAnchor465)
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: 此活动的解决方案可以通过[此链接](B15507_Solution_Final_SZ_ePub.xhtml#_idTextAnchor465)找到
- en: Summary
  id: totrans-534
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned the basics of Atlas service management. As security
    is a very important aspect of cloud computing, controlling network access and
    database access is essential for the Atlas platform, and you should now be able
    to set up new users and grant permissions to database resources. Database connections
    and MongoDB database commands were also explored in detail. The next chapter will
    introduce you to the world of MongoDB query syntax. The MongoDB NoSQL language
    is a rich and powerful database language that integrates very well with all programming
    languages.
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习了Atlas服务管理的基础知识。由于安全性是云计算的一个非常重要的方面，控制网络访问和数据库访问对于Atlas平台至关重要，您现在应该能够设置新用户并授予对数据库资源的权限。还详细探讨了数据库连接和MongoDB数据库命令。下一章将向您介绍MongoDB查询语法的世界。MongoDB
    NoSQL语言是一种功能丰富且强大的数据库语言，与所有编程语言都非常好地集成在一起。
