["```js\nuse sample_mflix;\nvar pipeline = [] // The pipeline is an array of stages.\nvar options  = {} // We will explore the options later in the   chapter.\nvar cursor   = db.movies.aggregate(pipeline, options);\n```", "```js\nvar cursor = db.movies.aggregate(pipeline);\n```", "```js\nvar cursor = db.movies.aggregate([])\n```", "```js\nvar MyAggregation_A = function() {\n\u00a0\u00a0\u00a0\u00a0print(\"Running Aggregation Script Ch7.1\");\n\u00a0\u00a0\u00a0\u00a0var pipeline = [];\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// This next line stores our result in a cursor.\n\u00a0\u00a0\u00a0\u00a0var cursor = db.movies.aggregate(pipeline);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// This line will print the next iteration of our cursor.\n\u00a0\u00a0\u00a0\u00a0printjson(cursor.next())\n};\nMyAggregation_A();\n```", "```js\nvar pipeline = [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ . . . },\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ . . . },\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ . . . },\n];\n```", "```js\n{$stage : parameters}\n```", "```js\nvar pipeline = [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match:   { \"location.address.state\": \"MN\"} },\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $project: { \"location.address.city\": 1    } },\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort:    { \"location.address.city\": 1    } },\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $limit: 3 }\n\u00a0\u00a0\u00a0\u00a0\u00a0];\n```", "```js\nMongoDB Enterprise atlas-nb3biv-shard-0:PRIMARY> var pipeline = [\n...         { $match:   { \"location.address.state\": \"MN\"} },\n...         { $project: { \"location.address.city\": 1    } },\n...         { $sort:    { \"location.address.city\": 1    } },\n...         { $limit: 3 }\n...      ];\nMongoDB Enterprise atlas-nb3biv-shard-0:PRIMARY> \nMongoDB Enterprise atlas-nb3biv-shard-0:PRIMARY> db.theaters.aggregate(pipeline)\n{ \"_id\" : ObjectId(\"59a47287cfa9a3a73e51e94f\"), \"location\" :   { \"address\" : { \"city\" : \"Apple Valley\" } } }\n{ \"_id\" : ObjectId(\"59a47287cfa9a3a73e51eb8f\"), \"location\" :   { \"address\" : { \"city\" : \"Baxter\" } } }\n{ \"_id\" : ObjectId(\"59a47286cfa9a3a73e51e833\"), \"location\" :   { \"address\" : { \"city\" : \"Blaine\" } } }\nMongoDB Enterprise atlas-nb3biv-shard-0:PRIMARY>\n```", "```js\nMongoDB Enterprise atlas-nb3biv-shard-0:PRIMARY> db   .theaters.aggregate([\n... ...         { $match:   { \"location.address.state\": \"MN\"} },\n... ...         { $project: { \"location.address.city\": 1    } },\n... ...         { $sort:    { \"location.address.city\": 1    } },\n... ...         { $limit: 3 }\n... ...      ]\n... );\n{ \"_id\" : ObjectId(\"59a47287cfa9a3a73e51e94f\"), \"location\" :   { \"address\" : { \"city\" : \"Apple Valley\" } } }\n{ \"_id\" : ObjectId(\"59a47287cfa9a3a73e51eb8f\"), \"location\" :   { \"address\" : { \"city\" : \"Baxter\" } } }\n{ \"_id\" : ObjectId(\"59a47286cfa9a3a73e51e833\"), \"location\" :   { \"address\" : { \"city\" : \"Blaine\" } } }\nMongoDB Enterprise atlas-nb3biv-shard-0:PRIMARY> \n```", "```js\nvar simpleFind = function() {\n\u00a0\u00a0\u00a0\u00a0// Find command using filter, project, sort and limit.\n\u00a0\u00a0\u00a0\u00a0print(\"Find Result:\")\n\u00a0\u00a0\u00a0\u00a0db.theaters.find(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\"location.address.state\" : \"MN\"}, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\"location.address.city\" : 1})\n\u00a0\u00a0\u00a0\u00a0.sort({\"location.address.city\": 1})\n\u00a0\u00a0\u00a0\u00a0.limit(3)\n\u00a0\u00a0\u00a0\u00a0.forEach(printjson);\n}\nsimpleFind();\n```", "```js\nMongoDB Enterprise atlas-nb3biv-shard-0:PRIMARY> simpleFind();\nFind Result:\n{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"_id\" : ObjectId(\"59a47287cfa9a3a73e51e94f\"),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"location\" : {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"address\" : {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"city\" : \"Apple Valley\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n}\n{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"_id\" : ObjectId(\"59a47287cfa9a3a73e51eb8f\"),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"location\" : {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"address\" : {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"city\" : \"Baxter\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n}\n{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"_id\" : ObjectId(\"59a47286cfa9a3a73e51e7e2\"),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"location\" : {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"address\" : {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"city\" : \"Blaine\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```js\nvar simpleFindAsAggregate = function() {\n\u00a0\u00a0\u00a0\u00a0// Aggregation using match, project, sort and limit.\n\u00a0\u00a0\u00a0\u00a0print (\"Aggregation Result:\")\n\u00a0\u00a0\u00a0\u00a0var pipeline = [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match:   { \"location.address.state\": \"MN\"} },\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $project: { \"location.address.city\": 1    } },\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort:    { \"location.address.city\": 1    } },\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $limit: 3 }\n\u00a0\u00a0\u00a0\u00a0];\n\u00a0\u00a0\u00a0\u00a0db.theaters.aggregate(pipeline).forEach(printjson);\n};\nsimpleFindAsAggregate();\n```", "```js\n    { $match:   { \"location.address.state\": \"MN\"} },\n    ```", "```js\n    { $project: { \"location.address.city\": 1    } },\n    ```", "```js\n    { $sort:    { \"location.address.city\": 1    } },\n    ```", "```js\n    { $limit: 3 }\n    ```", "```js\n    db.movies.findOne();\n    ```", "```js\n    // Ch7_Exercise1.js   \n    var findTopRomanceMovies = function() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0print(\"Finding top Classic Romance Movies...\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $limit: 3 }, // Limit to 3 results.\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort: {\"imdb.rating\": -1}}, // Sort by IMDB rating.\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: {. . .}}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0];\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline).forEach(printjson);\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0findTopRomanceMovies();\n    ```", "```js\n    // Ch7_Exercise1.js\n    \u00a0\u00a0\u00a0\u00a0var findTopRomanceMovies = function() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0print(\"Finding top Classic Romance Movies...\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $limit: 3 },         // Limit to 3 results.\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort: {\"imdb.rating\": -1}}, // Sort by IMDB rating.\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0genres: {$in: [\"Romance\"]}, // Romance movies only.\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0released: {$lte: new ISODate(\"2001-01-01T00:00:                  00Z\") }}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0];\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline).forEach(printjson);\n    }\n    findTopRomanceMovies();\n    ```", "```js\n    MongoDB Enterprise atlas-nb3biv-shard-0:PRIMARY>   findTopRomanceMovies();\n    Finding top Classic Romance Movies...\n    MongoDB Enterprise atlas-nb3biv-shard-0:PRIMARY>\n    ```", "```js\n    // Our new pipeline.\n    var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort: {\"imdb.rating\": -1}}, // Sort by IMDB rating.\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0genres: {$in: [\"Romance\"]}, // Romance movies only.\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0released: {$lte: new ISODate(\"2001-01-01T00:00:                  00Z\") }}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $limit: 3 },  // Limit to 3 results (last stage)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0];\n    ```", "```js\n    var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0{ $sort:  {\"imdb.rating\": -1}}, // Sort by IMDB rating.\n    \u00a0\u00a0\u00a0\u00a0{ $match: {\n    \u00a0\u00a0\u00a0\u00a0genres: {$in: [\"Romance\"]}, // Romance movies only.\n    \u00a0\u00a0\u00a0\u00a0released: {$lte: new ISODate(\"2001-01-01T00:00:00Z\") }}},\n    \u00a0\u00a0\u00a0\u00a0{ $limit: 3 },     // Limit to 3 results.\n    \u00a0\u00a0\u00a0\u00a0{ $project: { genres: 1, released: 1, \"imdb.rating\": 1}}\n    ];\n    ```", "```js\n// Ch7_Exercise1.js\nvar findTopRomanceMovies = function() {\n\u00a0\u00a0\u00a0\u00a0print(\"Finding top Classic Romance Movies...\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var pipeline = [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort: {\"imdb.rating\": -1}}, // Sort by IMDB rating.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0genres: {$in: [\"Romance\"]}, // Romance movies only.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0released: {$lte: new ISODate(\"2001-01-01T00:00:              00Z\") }}},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $limit: 3 },          // Limit to 3 results.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $project: { genres: 1, released: 1, \"imdb.rating\": 1}}\n];\n\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline).forEach(printjson);\n}\nfindTopRomanceMovies();\n```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0genres: {$in: [\"Romance\"]}, // Romance movies only.\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0released: {$lte: new ISODate(\"2001-01-01T00:00:                  00Z\") }}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort: {\"imdb.rating\": -1}}, // Sort by IMDB rating.\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $limit: 3 },            // Limit to 3 results.\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $project: { genres: 1, released: 1,               \"imdb.rating\": 1}}\n    ];\n    ```", "```js\n    // Ch7_Exercise2.js\n    var findTopRomanceMovies = function() {\n    \u00a0\u00a0\u00a0\u00a0print(\"Finding top Classic Romance Movies...\");\n    \u00a0\u00a0\u00a0\u00a0var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0genres: {$in: [\"Romance\"]}, // Romance movies only.\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0released: {$lte: new ISODate(\"2001-01-01T00:00:              00Z\") }}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort: {\"imdb.rating\": -1}}, // Sort by IMDB rating.\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $limit: 3 },     // Limit to 3 results.\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $project: { title: 1, genres: 1, released: 1,           \"imdb.rating\": 1}}\n    \u00a0\u00a0\u00a0\u00a0];\n    \u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline).forEach(printjson);\n    }\n    findTopRomanceMovies();\n    ```", "```js\n\u00a0\u00a0\u00a0\u00a0var pipeline = [\n\u00a0\u00a0\u00a0\u00a0\u00a0{$group: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_id: \"$rated\"\n\u00a0\u00a0\u00a0\u00a0\u00a0}}\n\u00a0\u00a0\u00a0\u00a0];\n\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline).forEach(printjson);\n```", "```js\nfield: { accumulator: expression},\n```", "```js\n\u00a0\u00a0\u00a0\u00a0var pipeline = [\n\u00a0\u00a0\u00a0\u00a0\u00a0{$group: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_id: \"$rated\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"numTitles\": { $sum: 1},\n\u00a0\u00a0\u00a0\u00a0\u00a0}}\n\u00a0\u00a0\u00a0\u00a0];\n\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline).forEach(printjson);\n```", "```js\n\u00a0\u00a0\u00a0\u00a0var pipeline = [\n\u00a0\u00a0\u00a0\u00a0\u00a0{$group: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_id: \"$rated\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"sumRuntime\": { $sum: \"$runtime\"},\n\u00a0\u00a0\u00a0\u00a0\u00a0}}\n\u00a0\u00a0\u00a0\u00a0];\n\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline).forEach(printjson);\n```", "```js\n\u00a0\u00a0\u00a0\u00a0var pipeline = [\n\u00a0\u00a0\u00a0\u00a0\u00a0{$group: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_id: \"$rated\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"avgRuntime\": { $avg: \"$runtime\"},\n\u00a0\u00a0\u00a0\u00a0\u00a0}}\n\u00a0\u00a0\u00a0\u00a0];\n\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline).forEach(printjson);\n```", "```js\n\u00a0\u00a0\u00a0\u00a0var pipeline = [\n\u00a0\u00a0\u00a0\u00a0\u00a0{$group: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_id: \"$rated\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"avgRuntime\": { $avg: \"$runtime\"},\n\u00a0\u00a0\u00a0\u00a0\u00a0}},\n\u00a0\u00a0\u00a0\u00a0\u00a0{$project: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"roundedAvgRuntime\": { $trunc: \"$avgRuntime\"}\n\u00a0\u00a0\u00a0\u00a0\u00a0}}\n\u00a0\u00a0\u00a0\u00a0];\n\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline).forEach(printjson);\n```", "```js\n{ \"_id\" : \"PG-13\", \"avgRuntime\" : 108 }\n```", "```js\n    // Ch7_Exercise3.js\n    var findGenrePopularity = function() {\n    \u00a0\u00a0print(\"Finding popularity of each genre\");\n    \u00a0\u00a0var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: {}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $group: {}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort: {}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $project: {}}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0];\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline).forEach(printjson);\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0findGenrePopularity();\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0released: {$lte: new ISODate(\"2001-01-01T00:00:                  00Z\") }}},\n    ```", "```js\n    { $group: {\n    \u00a0\u00a0\u00a0\u00a0_id: {\"$arrayElemAt\": [\"$genres\", 0]},\n    }},\n    ```", "```js\n    { $group: {\n    \u00a0\u00a0\u00a0\u00a0_id: {\"$arrayElemAt\": [\"$genres\", 0]},\n    \u00a0\u00a0\u00a0\u00a0\"popularity\": {  $avg: \"$imdb.rating\"},\n    \u00a0\u00a0\u00a0\u00a0\"top_movie\": { $max: \"$imdb.rating\"},\n    \u00a0\u00a0\u00a0\u00a0\"longest_runtime\": { $max: \"$runtime\"}\n    }},\n    ```", "```js\n    { $sort: { popularity: -1}},\n    ```", "```js\n    { $project: {\n    \u00a0\u00a0\u00a0\u00a0_id: 1,\n    \u00a0\u00a0\u00a0\u00a0popularity: 1, \n    \u00a0\u00a0\u00a0\u00a0top_movie: 1, \n    \u00a0\u00a0\u00a0\u00a0adjusted_runtime: { $add: [ \"$longest_runtime\", 12 ] } } }\n    ```", "```js\n    var findGenrePopularity = function() {\n    \u00a0\u00a0\u00a0\u00a0print(\"Finding popularity of each genre\");\n    \u00a0\u00a0\u00a0\u00a0var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0released: {$lte: new ISODate(\"2001-01-01T00:00:00Z\") }}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $group: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_id: {\"$arrayElemAt\": [\"$genres\", 0]},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"popularity\": {  $avg: \"$imdb.rating\"},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"top_movie\": { $max: \"$imdb.rating\"},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"longest_runtime\": { $max: \"$runtime\"}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort: { popularity: -1}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $project: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_id: 1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0popularity: 1, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0top_movie: 1, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0adjusted_runtime: { $add: [ \"$longest_runtime\",                   12 ] } } }\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0];\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline).forEach(printjson);\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0findGenrePopularity();\n    ```", "```js\n    { $match: {\n    \u00a0\u00a0released: {$lte: new ISODate(\"2001-01-01T00:00:00Z\") },\n    \u00a0\u00a0runtime:  {$lte: 218},\n    \u00a0\u00a0\"imdb.rating\": {$gte: 7.0}\n    \u00a0\u00a0}\n    },\n    ```", "```js\n    { $sort: {\"imdb.rating\": -1}},\n    ```", "```js\n    { $group: {\n    \u00a0\u00a0_id: {\"$arrayElemAt\": [\"$genres\", 0]},\n    \u00a0\u00a0\"recommended_title\": {$first: \"$title\"},\n    \u00a0\u00a0\"recommended_rating\": {$first: \"$imdb.rating\"},\n    \u00a0\u00a0\"recommended_raw_runtime\": {$first: \"$runtime\"},\n    \u00a0\u00a0\"popularity\": {  $avg: \"$imdb.rating\"},\n    \u00a0\u00a0\"top_movie\": { $max: \"$imdb.rating\"},\n    \u00a0\u00a0\"longest_runtime\": { $max: \"$runtime\"}\n    }},\n    ```", "```js\n    { $project: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0_id: 1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0popularity: 1, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0top_movie: 1, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0recommended_title: 1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0recommended_rating: 1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0recommended_raw_runtime: 1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0adjusted_runtime: { $add: [ \"$longest_runtime\", 12 ] } } }\n    ```", "```js\n    // Ch7_Exercise4js\n    var findGenrePopularity = function() {\n    \u00a0\u00a0\u00a0\u00a0print(\"Finding popularity of each genre\");\n    \u00a0\u00a0\u00a0\u00a0var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0released: {$lte: new ISODate(\"2001-01-01T00:00:00Z\") },\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0runtime:  {$lte: 218},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"imdb.rating\": {$gte: 7.0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort: {\"imdb.rating\": -1}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $group: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_id: {\"$arrayElemAt\": [\"$genres\", 0]},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"recommended_title\": {$first: \"$title\"},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"recommended_rating\": {$first: \"$imdb.rating\"},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"recommended_raw_runtime\": {$first: \"$runtime\"},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"popularity\": {  $avg: \"$imdb.rating\"},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"top_movie\": { $max: \"$imdb.rating\"},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"longest_runtime\": { $max: \"$runtime\"}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort: { popularity: -1}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $project: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_id: 1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0popularity: 1, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0top_movie: 1, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0recommended_title: 1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0recommended_rating: 1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0recommended_raw_runtime: 1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0adjusted_runtime: { $add: [ \"$longest_runtime\",                    12 ] } } }\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0];\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline).forEach(printjson);\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0findGenrePopularity();\n    ```", "```js\n{ $sample: {size: 100}}, // This will reduce the scope to   100 random docs.\n```", "```js\nvar findWithSample = function() { \n\u00a0\u00a0\u00a0\u00a0print(\"Finding all documents WITH sampling\") \n\u00a0\u00a0\u00a0\u00a0var now = Date.now(); \n\u00a0\u00a0\u00a0\u00a0var pipeline = [ \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sample: {size: 100}}, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: { \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"plot\": { $regex: /around/} \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}} \n\u00a0\u00a0\u00a0\u00a0]; \n\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline) \n\u00a0\u00a0\u00a0\u00a0var duration = Date.now() - now; \n\u00a0\u00a0\u00a0\u00a0print(\"Finished WITH sampling in \" + duration+\"ms\"); \n}\nfindWithSample();\n```", "```js\nFinding all documents WITH sampling\nFinished WITH sampling in 194ms\n```", "```js\nvar findWithoutSample = function() {\n\u00a0\u00a0\u00a0\u00a0print(\"Finding all documents WITHOUT sampling\")\n\u00a0\u00a0\u00a0\u00a0var now = Date.now();\n\u00a0\u00a0\u00a0\u00a0var pipeline =[\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"plot\": { $regex: /around/}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}},\n\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline)\n\u00a0\u00a0\u00a0\u00a0var duration = Date.now() - now;\n\u00a0\u00a0\u00a0\u00a0print(\"Finished WITHOUT sampling in \" + duration+ \"ms\");\n}\nfindWithoutSample();\n```", "```js\nFinding all documents WITHOUT sampling\nFinished WITHOUT sampling in 862ms\n```", "```js\nFinding all documents WITH sampling\u00a0\nFinished WITH sampling in 194ms\u00a0\nFinding all documents WITHOUT sampling\nFinished WITHOUT sampling in 862ms\n```", "```js\nvar lookupExample = function() {\n\u00a0\u00a0\u00a0\u00a0var pipeline = [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match:  { $or: [{\"name\": \"Catelyn Stark\"},           {\"name\": \"Ned Stark\"}]}},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $lookup: { \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0from: \"comments\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0localField: \"name\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0foreignField: \"name\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0as: \"comments\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}},\n\u00a0\u00a0{ $limit: 2},\n\u00a0\u00a0\u00a0\u00a0];\n\u00a0\u00a0\u00a0\u00a0db.users.aggregate(pipeline).forEach(printjson);\n}\nlookupExample();\n```", "```js\n{a: 1, b: 2, c: [1, 2, 3, 4]}\n```", "```js\n{\"a\" : 1, \"b\" : 2, \"c\" : 1 }\n{\"a\" : 1, \"b\" : 2, \"c\" : 2 }\n{\"a\" : 1, \"b\" : 2, \"c\" : 3 }\n{\"a\" : 1, \"b\" : 2, \"c\" : 4 }\n```", "```js\nvar lookupExample = function() {\n\u00a0\u00a0\u00a0\u00a0var pipeline = [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match:  { $or: [{\"name\": \"Catelyn Stark\"},           {\"name\": \"Ned Stark\"}]}},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $lookup: { \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0from: \"comments\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0localField: \"name\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0foreignField: \"name\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0as: \"comments\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $unwind: \"$comments\"},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $limit: 3},\n\u00a0\u00a0\u00a0\u00a0];\n\u00a0\u00a0\u00a0\u00a0db.users.aggregate(pipeline).forEach(printjson);\n}\nlookupExample();\n```", "```js\n// Available from v2.6\n{ $out: \"myOutputCollection\"}\n// Available from version 4.2\n{ $merge: {\n\u00a0\u00a0\u00a0\u00a0// This can also accept {db: <db>, coll: <coll>} to       merge into a different db\n\u00a0\u00a0\u00a0\u00a0into: \"myOutputCollection\", \n}}\n```", "```js\nvar findTopRomanceMovies = function() {\n\u00a0\u00a0\u00a0\u00a0var pipeline = [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort:  {\"imdb.rating\": -1}}, // Sort by IMDB rating.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0genres: {$in: [\"Romance\"]}, // Romance movies only.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0released: {$lte: new ISODate(\"2001-01-01T00:00:              00Z\") }}},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $limit: 5 },\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Limit to 5 results.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $project: { title: 1, genres: 1, released: 1,           \"imdb.rating\": 1}},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $out: \"movies_top_romance\"}\n\u00a0\u00a0\u00a0\u00a0];\n\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline).forEach(printjson);\n}\nfindTopRomanceMovies();\n```", "```js\nMongoDB Enterprise atlas-nb3biv-shard-0:PRIMARY>   findTopRomanceMovies();\nMongoDB Enterprise atlas-nb3biv-shard-0:PRIMARY>\n```", "```js\nMongoDB Enterprise atlas-nb3biv-shard-0:PRIMARY> show collections\ncomments\nmovies\nmovies_top_romance\nsessions\ntheaters\nusers\n```", "```js\nMongoDB Enterprise atlas-nb3biv-shard-0:PRIMARY> db.movies_top_romance.findOne({})\n{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"_id\" : ObjectId(\"573a1399f29313caabceeead\"),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"genres\" : [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Drama\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Romance\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"title\" : \"Pride and Prejudice\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"released\" : ISODate(\"1996-01-14T00:00:00Z\"),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"imdb\" : {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"rating\" : 9.1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```js\n    // Ch7_Exercise5.js\n    var findMostCommentedMovies = function() {\n    \u00a0\u00a0\u00a0\u00a0print(\"Finding the most commented on movies.\");\n    \u00a0\u00a0\u00a0\u00a0var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sample: {}}, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $group: {}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort: {}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $limit: 5},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $lookup: {}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $unwind: },\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $project: {}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $out: {}}\n    \u00a0\u00a0\u00a0\u00a0];\n    \u00a0\u00a0\u00a0\u00a0db.comments.aggregate(pipeline).forEach(printjson);\n    }\n    findMostCommentedMovies();\n    ```", "```js\n    MongoDB Enterprise atlas-nb3biv-shard-0:PRIMARY>   db.comments.count()\n    50303\n    ```", "```js\n    { $sample: {size: 5000}}, \n    ```", "```js\n    { $group: {\n    \u00a0\u00a0\u00a0\u00a0_id: \"$movie_id\",\n    \u00a0\u00a0\u00a0\u00a0\"sumComments\": { $sum: 1}\n    }},\n    ```", "```js\n    { $sort: { \"sumComments\": -1}},\n    ```", "```js\n    { $lookup: {\n    \u00a0\u00a0\u00a0\u00a0from: \"movies\",\n    \u00a0\u00a0\u00a0\u00a0localField: \"_id\",\n    \u00a0\u00a0\u00a0\u00a0foreignField: \"_id\",\n    \u00a0\u00a0\u00a0\u00a0as: \"movie\"\n    }},\n    ```", "```js\n    { $unwind: \"$movie\" },\n    { $project: {\n    \u00a0\u00a0\u00a0\u00a0\"movie.title\": 1,\n    \u00a0\u00a0\u00a0\u00a0\"movie.imdb.rating\": 1,\n    \u00a0\u00a0\u00a0\u00a0\"sumComments\": 1,\n    }}\n    ```", "```js\n    { $out: \"most_commented_movies\" }\n    ```", "```js\n    // Ch7_Exercise5.js\n    var findMostCommentedMovies = function() {\n    \u00a0\u00a0\u00a0\u00a0print(\"Finding the most commented on movies.\");\n    \u00a0\u00a0\u00a0\u00a0var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sample: {size: 5000}}, \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $group: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_id: \"$movie_id\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"sumComments\": { $sum: 1}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort: { \"sumComments\": -1}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $limit: 5},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $lookup: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0from: \"movies\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0localField: \"_id\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0foreignField: \"_id\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0as: \"movie\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $unwind: \"$movie\" },\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $project: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"movie.title\": 1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"movie.imdb.rating\": 1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"sumComments\": 1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $out: \"most_commented_movies\" }\n    \u00a0\u00a0\u00a0\u00a0];\n    \u00a0\u00a0\u00a0\u00a0db.comments.aggregate(pipeline).forEach(printjson);\n    }\n    findMostCommentedMovies();\n    ```", "```js\nvar badlyOrderedQuery = function() {\n\u00a0\u00a0print(\"Running query in bad order.\")\n\u00a0\u00a0var pipeline = [\n\u00a0\u00a0\u00a0\u00a0{ $sort: {\"imdb.rating\": -1}}, // Sort by IMDB rating.\n\u00a0\u00a0\u00a0\u00a0{ $match:\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0genres: {$in: [\"Romance\"]}, // Romance movies only.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0released: {$lte: new ISODate(\"2001-01-01T00:00:00Z\") }}},\n\u00a0\u00a0\u00a0\u00a0{ $project: { title: 1, genres: 1, released: 1,       \"imdb.rating\": 1}},\n\u00a0\u00a0\u00a0\u00a0{ $limit:\u00a01\u00a0},                 // Limit to 1 result.\n\u00a0\u00a0];\n\u00a0\u00a0db.movies.aggregate(pipeline).forEach(printjson);\n}\nbadlyOrderedQuery();\n```", "```js\nMongoDB Enterprise atlas-nb3biv-shard-0:PRIMARY>   badlyOrderedQuery();\nRunning query in bad order.\n{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"_id\" : ObjectId(\"573a1399f29313caabceeead\"),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"genres\" : [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Drama\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Romance\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"title\" : \"Pride and Prejudice\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"released\" : ISODate(\"1996-01-14T00:00:00Z\"),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"imdb\" : {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"rating\" : 9.1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```js\nvar wellOrderedQuery = function() {\nprint(\"Running query in better order.\")\nvar pipeline = [\n\u00a0\u00a0\u00a0\u00a0{ $match: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0genres: {$in: [\"Romance\"]}, // Romance movies only.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0released: {$lte: new ISODate(\"2001-01-01T00:00:00Z\") }}},\n\u00a0\u00a0\u00a0\u00a0{ $sort:  {\"imdb.rating\":\u00a0-1}}, // Sort by IMDB rating.\n\u00a0\u00a0\u00a0\u00a0{ $limit: 1 },\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Limit to 1 result.\n\u00a0\u00a0\u00a0\u00a0{ $project: { title: 1, genres: 1, released: 1,       \"imdb.rating\": 1}},\n];\ndb.movies.aggregate(pipeline).forEach(printjson);\n}\nwellOrderedQuery();\n```", "```js\n\u00a0\u00a0\u00a0\u00a0var options = { \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0maxTimeMS: 30000,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0allowDiskUse: true\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline, options);\n```", "```js\nvar findAwardWinningDocumentaries = function() {\n\u00a0\u00a0\u00a0\u00a0print(\"Finding award winning documentary Movies...\");\n\u00a0\u00a0\u00a0\u00a0var pipeline = [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort: {\"awards.wins\": -1}}, // Sort by award wins.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: {\"awards.wins\": { $gte: 1}}},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $limit: 20}, // Get the top 20 movies with more than           one award\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0genres: {$in: [\"Documentary\"]}, // Documentary               movies only.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $project: { title: 1, genres: 1, awards: 1}},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $limit: 3}, \n\u00a0\u00a0\u00a0\u00a0];\n\u00a0\u00a0\u00a0\u00a0var options = { }\n\u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline, options).forEach(printjson);\n}\nfindAwardWinningDocumentaries();\n```", "```js\n    var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0{ $match: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"awards.wins\": { $gte: 1},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0genres: {$in: [\"Documentary\"]},\n    \u00a0\u00a0\u00a0\u00a0}},\n    \u00a0\u00a0\u00a0\u00a0{ $sort: {\"awards.wins\": -1}}, // Sort by award wins.\n    \u00a0\u00a0\u00a0\u00a0{ $limit: 20}, // Get the top 20 movies. \n    \u00a0\u00a0\u00a0\u00a0{ $project: { title: 1, genres: 1, awards: 1}},\n    \u00a0\u00a0\u00a0\u00a0{ $limit: 3},\n    ];\n    ```", "```js\n    var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0{ $match: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"awards.wins\": { $gte: 1},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0genres: {$in: [\"Documentary\"]},\n    \u00a0\u00a0\u00a0\u00a0}},\n    \u00a0\u00a0\u00a0\u00a0{ $limit: 20}, // Get the top 20 movies. \n    \u00a0\u00a0\u00a0\u00a0{ $project: { title: 1, genres: 1, awards: 1}},\n    \u00a0\u00a0\u00a0\u00a0{ $sort: {\"awards.wins\": -1}}, // Sort by award wins.\n    \u00a0\u00a0\u00a0\u00a0{ $limit: 3},\n    ];\n    ```", "```js\n    var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0{ $match: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"awards.wins\": { $gte: 1},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0genres: {$in: [\"Documentary\"]},\n    \u00a0\u00a0\u00a0\u00a0}},\n    \u00a0\u00a0\u00a0\u00a0{ $project: { itle: 1, genres: 1, awards: 1}},\n    \u00a0\u00a0\u00a0\u00a0{ $sort: {\"awards.wins\": -1}}, // Sort by award wins.\n    \u00a0\u00a0\u00a0\u00a0{ $limit: 3},\n    ];\n    ```", "```js\n    var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0{ $match:\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"awards.wins\": { $gte: 1},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0genres: {$in: [\"Documentary\"]},\n    \u00a0\u00a0\u00a0\u00a0}},\n    \u00a0\u00a0\u00a0\u00a0{ $sort: {\"awards.wins\": -1}}, // Sort by award wins.\n    \u00a0\u00a0\u00a0\u00a0{ $limit: 3},\n    \u00a0\u00a0\u00a0\u00a0{ $project: { title: 1, genres: 1, awards: 1}},\n    ];\n    ```", "```js\n    var options ={\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0maxTimeMS: 30000,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0allowDiskUse: true,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0comment: \"Find Award Winning Documentary Films\"\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline, options).forEach(printjson);\n    ```", "```js\n    var findAwardWinningDocumentaries = function() {\n    \u00a0\u00a0\u00a0\u00a0print(\"Finding award winning documentary Movies...\");\n    \u00a0\u00a0\u00a0\u00a0var pipeline = [\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $match: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"awards.wins\": { $gte:\u00a01},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0genres: {$in: [\"Documentary\"]},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $sort:  {\"awards.wins\": -1}}, // Sort by award wins.\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $limit: 3},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{ $project:\u00a0{\u00a0title: 1, genres: 1, awards: 1}},\n    \u00a0\u00a0\u00a0\u00a0];\n\n    \u00a0\u00a0\u00a0\u00a0var options ={\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0maxTimeMS: 30000,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0allowDiskUse: true,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0comment: \"Find Award Winning Documentary Films\"\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0db.movies.aggregate(pipeline, options).forEach(printjson);\n    }\n    findAwardWinningDocumentaries();\n    ```"]