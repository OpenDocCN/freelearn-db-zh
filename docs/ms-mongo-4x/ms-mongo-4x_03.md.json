["```go\ndb.account.find( { \"balance\" : { $type : 16 } } );\ndb.account.find( { \"balance\" : { $type : \"integer\" } } );\n```", "```go\n> db.types.find()\n{ \"_id\" : ObjectId(\"5908d58455454e2de6519c49\"), \"a\" : [ 1, 2, 3 ] }\n{ \"_id\" : ObjectId(\"5908d59d55454e2de6519c4a\"), \"a\" : [ 2, 5 ] }\n```", "```go\n> db.types.find().sort({a:1})\n{ \"_id\" : ObjectId(\"5908d58455454e2de6519c49\"), \"a\" : [ 1, 2, 3 ] }\n{ \"_id\" : ObjectId(\"5908d59d55454e2de6519c4a\"), \"a\" : [ 2, 5 ] }\n```", "```go\n> db.types.find().sort({a:-1})\n{ \"_id\" : ObjectId(\"5908d59d55454e2de6519c4a\"), \"a\" : [ 2, 5 ] }\n{ \"_id\" : ObjectId(\"5908d58455454e2de6519c49\"), \"a\" : [ 1, 2, 3 ] }\n```", "```go\n> db.types.insert({\"a\":4})\nWriteResult({ \"nInserted\" : 1 })\n```", "```go\n> db.types.find().sort({a:-1})\n{ \"_id\" : ObjectId(\"5908d59d55454e2de6519c4a\"), \"a\" : [ 2, 5 ] }\n{ \"_id\" : ObjectId(\"5908d73c55454e2de6519c4c\"), \"a\" : 4 }\n{ \"_id\" : ObjectId(\"5908d58455454e2de6519c49\"), \"a\" : [ 1, 2, 3 ] }\n```", "```go\n> db.types.find().sort({a:1})\n{ \"_id\" : ObjectId(\"5908d58455454e2de6519c49\"), \"a\" : [ 1, 2, 3 ] }\n{ \"_id\" : ObjectId(\"5908d59d55454e2de6519c4a\"), \"a\" : [ 2, 5 ] }\n{ \"_id\" : ObjectId(\"5908d73c55454e2de6519c4c\"), \"a\" : 4 }\n```", "```go\nvar now = new Date();\ndb.page_views.save({date: now,\n offset: now.getTimezoneOffset()});\n```", "```go\nvar record = db.page_views.findOne();\nvar localNow = new Date( record.date.getTime() - ( record.offset * 60000 ) );\n```", "```go\n> db.Person.findOne()\n{\n\"_id\" : ObjectId(\"590a530e3e37d79acac26a41\"), \"name\" : \"alex\"\n}\n> db.Address.findOne()\n{\n\"_id\" : ObjectId(\"590a537f3e37d79acac26a42\"),\n\"person_id\" : ObjectId(\"590a530e3e37d79acac26a41\"),\n\"address\" : \"N29DD\"\n}\n```", "```go\n> db.Person.find({\"_id\": db.Address.findOne({\"address\":\"N29DD\"}).person_id})\n{\n\"_id\" : ObjectId(\"590a530e3e37d79acac26a41\"), \"name\" : \"alex\"\n}\n```", "```go\n{ \"_id\" : ObjectId(\"590a55863e37d79acac26a43\"), \"name\" : \"alex\", \"address\" : [ \"N29DD\", \"SW1E5ND\" ] }\n```", "```go\n{ \"_id\" : ObjectId(\"590a56743e37d79acac26a44\"),\n\"name\" : \"alex\",\n\"address\" : [ { \"description\" : \"home\", \"postcode\" : \"N29DD\" },\n{ \"description\" : \"work\", \"postcode\" : \"SW1E5ND\" } ] }\n```", "```go\n> db.Person.findOne()\n{ \"_id\" : ObjectId(\"590a530e3e37d79acac26a41\"), \"name\" : \"alex\", addresses:\n[ ObjectID('590a56743e37d79acac26a44'),\nObjectID('590a56743e37d79acac26a46'),\nObjectID('590a56743e37d79acac26a54') ] }\n```", "```go\n> person = db.Person.findOne({\"name\":\"mary\"})\n> addresses = db.Addresses.find({_id: {$in: person.addresses} })\n```", "```go\n> db.Address.find()\n{ \"_id\" : ObjectId(\"590a55863e37d79acac26a44\"), \"person\":  ObjectId(\"590a530e3e37d79acac26a41\"), \"address\" : [ \"N29DD\" ] }\n{ \"_id\" : ObjectId(\"590a55863e37d79acac26a46\"), \"person\":  ObjectId(\"590a530e3e37d79acac26a41\"), \"address\" : [ \"SW1E5ND\" ] }\n{ \"_id\" : ObjectId(\"590a55863e37d79acac26a54\"), \"person\":  ObjectId(\"590a530e3e37d79acac26a41\"), \"address\" : [ \"N225QG\" ] }\n> person = db.Person.findOne({\"name\":\"alex\"})\n> addresses = db.Addresses.find({\"person\": person._id})\n```", "```go\n{ name : \"Macbook Pro late 2016 15in\" ,\n  manufacturer : \"Apple\" ,\n  price: 2000 ,\n  keywords : [ \"Macbook Pro late 2016 15in\", \"2000\", \"Apple\", \"macbook\", \"laptop\", \"computer\" ]\n }\n```", "```go\n> db.products.createIndex( { keywords: 1 } )\n```", "```go\ndb.products.createIndex({\n name: \"text\",\n manufacturer: \"text\",\n price: \"text\"\n },\n {\n weights: { name: 10,\n manufacturer: 5,\n price: 1 },\n name: \"ProductIndex\"\n })\n```", "```go\ndb.collection.createIndex( { \"$**\": \"text\" } )\n```", "```go\ngem 'mongo', '~> 2.6'\n```", "```go\nrequire 'mongo'\nclient = Mongo::Client.new([ '127.0.0.1:27017' ], database: 'test')\n```", "```go\nclient_host = ['server1_hostname:server1_ip, server2_hostname:server2_ip']\n client_options = {\n  database: 'YOUR_DATABASE_NAME',\n  replica_set: 'REPLICA_SET_NAME',\n  user: 'YOUR_USERNAME',\n  password: 'YOUR_PASSWORD'\n }\nclient = Mongo::Client.new(client_host, client_options)\n```", "```go\ngem 'mongoid', '~> 7.0'\n```", "```go\nconfig.generators do |g|\ng.orm :mongoid\nend\n```", "```go\nclass Person\n  include Mongoid::Document\n End\n```", "```go\ninclude Mongoid::Timestamps\n```", "```go\nclass Canvas\n  include Mongoid::Document\n  field :name, type: String\n  embeds_many :shapes\nend\n\nclass Shape\n  include Mongoid::Document\n  field :x, type: Integer\n  field :y, type: Integer\n  embedded_in :canvas\nend\n\nclass Circle < Shape\n  field :radius, type: Float\nend\n\nclass Rectangle < Shape\n  field :width, type: Float\n  field :height, type: Float\nend\n```", "```go\npython -m pip install pymongo\npython -m easy_install pymongo\n```", "```go\n>>> from pymongo import MongoClient\n>>> client = MongoClient()\n```", "```go\nclient = pymongo.MongoClient('mongodb://user:passwd@node1:p1,node2:p2/?replicaSet=rsname')\n```", "```go\npip install pymodm\n```", "```go\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.dummy'\n    }\n}\n```", "```go\nfrom pymodm import connect\nconnect(\"mongodb://localhost:27017/myDatabase\", alias=\"MyApplication\")\n```", "```go\nmongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]\n```", "```go\nfrom pymodm import MongoModel, fields\nclass User(MongoModel):\n    email = fields.EmailField(primary_key=True)\n    first_name = fields.CharField()\n    last_name = fields.CharField()\n```", "```go\nfrom pymodm import EmbeddedMongoModel, MongoModel, fields\n\nclass Comment(EmbeddedMongoModel):\n    author = fields.ReferenceField(User)\n    content = fields.CharField()\n\nclass Post(MongoModel):\n    title = fields.CharField()\n    author = fields.ReferenceField(User)\n    revised_on = fields.DateTimeField()\n    content = fields.CharField()\n    comments = fields.EmbeddedDocumentListField(Comment)\n```", "```go\nbrew install php70-mongodb\n```", "```go\ncomposer require mongodb/mongodb\n```", "```go\n$client = new MongoDB\\Client($uri = 'mongodb://127.0.0.1/', array $uriOptions = [], array $driverOptions = [])\n```", "```go\n$client = new MongoDB\\Client('mongodb://myUsername:myPassword@rs1.example.com,rs2.example.com/?ssl=true&replicaSet=myReplicaSet&authSource=admin');\n```", "```go\n$client = new MongoDB\\Client(\n 'mongodb://rs1.example.com,rs2.example.com/'\n [\n 'username' => 'myUsername',\n 'password' => 'myPassword',\n 'ssl' => true,\n 'replicaSet' => 'myReplicaSet',\n 'authSource' => 'admin',\n ],\n);\n```", "```go\nuse Doctrine\\ORM\\Mapping AS ORM;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\n/**\n* @ORM\\Entity\n* @ORM\\Table(name=\"scientist\")\n*/\nclass Scientist\n{\n   /**\n    * @ORM\\Id\n    * @ORM\\GeneratedValue\n    * @ORM\\Column(type=\"integer\")\n    */\n   protected $id;\n   /**\n    * @ORM\\Column(type=\"string\")\n    */\n   protected $firstname;\n   /**\n    * @ORM\\Column(type=\"string\")\n    */\n   protected $lastname;\n   /**\n   * @ORM\\OneToMany(targetEntity=\"Theory\", mappedBy=\"scientist\", cascade={\"persist\"})\n   * @var ArrayCollection|Theory[]\n   */\n   protected $theories;\n   /**\n   * @param $firstname\n   * @param $lastname\n   */\n   public function __construct($firstname, $lastname)\n   {\n       $this->firstname = $firstname;\n       $this->lastname  = $lastname;\n       $this->theories = new ArrayCollection;\n   }\n...\n   public function addTheory(Theory $theory)\n   {\n       if(!$this->theories->contains($theory)) {\n           $theory->setScientist($this);\n           $this->theories->add($theory);\n       }\n   }\n```", "```go\n/** @Document */\nclass User\n{\n   // ...\n   /** @EmbedMany(targetDocument=\"Phonenumber\") */\n   private $phonenumbers = array();\n   // ...\n}\n/** @EmbeddedDocument */\nclass Phonenumber\n{\n   // ...\n}\n```", "```go\n/** @Document */\nclass User\n{\n   // ...\n   /**\n    * @ReferenceMany(targetDocument=\"Account\")\n    */\n   private $accounts = array();\n   // ...\n}\n/** @Document */\nclass Account\n{\n   // ...\n}\n```"]