- en: MongoDB Tooling
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MongoDB Tooling
- en: 'Features, stability, and great driver support are all important; however, there
    is another area that is key to a software product succeeding, and that is the
    ecosystem built around it. MongoDB (originally under the name 10gen Inc.) introduced
    the MMS more than 8 years ago, in 2011, and it was seen as an innovation at the
    time. In this chapter, we will go through the following suite of different tools
    that are available for MongoDB and explore how they can improve productivity:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 功能、稳定性和良好的驱动程序支持都很重要；然而，另一个对软件产品成功至关重要的领域是围绕它构建的生态系统。MongoDB（最初名为10gen Inc.）在8年前的2011年推出了MMS，并当时被视为一项创新。在本章中，我们将介绍MongoDB可用的一套不同工具，并探讨它们如何提高生产力：
- en: MongoDB Enterprise Kubernetes Operator
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MongoDB企业Kubernetes运算符
- en: MongoDB Mobile
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MongoDB Mobile
- en: MongoDB Stitch
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MongoDB Stitch
- en: MongoDB Sync
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MongoDB Sync
- en: Introduction
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: '**MongoDB Monitoring Service** (**MMS**) is a mostly free **Software as a Service** (**SaaS**)
    solution that can monitor and access the diagnostics of any database that is signed
    up to it. When it was introduced, it greatly helped 10gen''s engineers to troubleshoot
    any problems that the customers had. Since then, tooling has been a centerpiece
    of MongoDB''s evolution.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**MongoDB监控服务**（**MMS**）是一个大多数免费的**软件即服务**（**SaaS**）解决方案，可以监视和访问任何注册到它的数据库的诊断信息。当它推出时，它极大地帮助了10gen的工程师解决客户遇到的任何问题。从那时起，工具已成为MongoDB演进的核心。'
- en: MongoDB Atlas
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MongoDB Atlas
- en: MongoDB Atlas is MongoDB's **Database as a Service** (**DBaaS**) offering. It
    is available as a multi-cloud offering, supporting **Amazon Web Service** (**AWS**),
    Microsoft Azure, and Google Cloud Platform.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Atlas是MongoDB的**数据库即服务**（**DBaaS**）产品。它作为多云产品提供，支持**亚马逊网络服务**（**AWS**）、微软Azure和谷歌云平台。
- en: Using DBaaS, patches and minor version upgrades are applied automatically, without
    any downtime. Using the **graphical user interface** (**GUI**), a developer can
    deploy geographically distributed database instances to avoid having any single
    point of failure. For websites with significant traffic, this can also help by
    placing database servers closer to the users who are accessing their data. This
    is a key part of MongoDB's strategy and offering as they embrace having data close
    to the user.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 使用DBaaS，补丁和小版本升级会自动应用，无需任何停机时间。使用**图形用户界面**（**GUI**），开发人员可以部署地理分布式数据库实例，以避免任何单点故障。对于访问量大的网站，这也可以通过将数据库服务器放置在接近访问其数据的用户的地方来帮助。这是MongoDB战略和产品的关键部分，因为他们支持让数据靠近用户。
- en: Similar to most DBaaS offerings, Atlas allows users to scale a deployment using
    a GUI. Every deployment lives on its own **Virtual Private Cloud** (**VPC**) and
    can leverage MongoDB Enterprise Server features such as encryption key management,
    **Lightweight Directory Access Protocol** (**LDAP**), and auditing features.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 与大多数DBaaS产品类似，Atlas允许用户使用GUI扩展部署。每个部署都位于自己的**虚拟专用云**（**VPC**）上，并可以利用MongoDB企业服务器的功能，如加密密钥管理、**轻量目录访问协议**（**LDAP**）和审计功能。
- en: The live migration service can be used to migrate datasets from existing deployments
    on-premises, in any of the three supported cloud providers or other DBaaS services,
    such as **mLab**, **Compose**, and **ObjectRocket**, using the same GUI.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 实时迁移服务可用于从现有部署（本地部署、三个支持的云提供商之一或其他DBaaS服务，如**mLab**、**Compose**和**ObjectRocket**）迁移数据集，使用相同的GUI。
- en: Creating a new cluster
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建新的集群
- en: 'Creating a new cluster using MongoDB Atlas is as simple as clicking and selecting
    through configuration options. In the following screenshot, we can see all the
    options that are available when creating a new cluster:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 使用MongoDB Atlas创建新的集群就像点击并通过配置选项进行选择一样简单。在下面的屏幕截图中，我们可以看到创建新集群时可用的所有选项：
- en: '![](img/dd6861db-5e28-4df0-947d-1c276c700cce.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dd6861db-5e28-4df0-947d-1c276c700cce.png)'
- en: 'The following screenshot shows Zone configuration summary:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了区域配置摘要：
- en: '![](img/bce328e1-6820-4a6a-a483-919dc3d5e484.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bce328e1-6820-4a6a-a483-919dc3d5e484.png)'
- en: One of the game-changing settings in MongoDB Atlas is the ability to instantly
    provision geographically distributed servers across different zones and date centers
    (for all three major cloud providers) with the goal of having our data closest
    to our users. This can be useful for performance and regulatory reasons (such
    as **General Data Protection Regulation** (**GDPR**), for the European Union).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Atlas中的一个改变游戏规则的设置是能够立即在不同区域和日期中心（对于三个主要云提供商）之间提供地理分布式服务器，目标是使我们的数据尽可能靠近我们的用户。这对性能和法规原因（如**通用数据保护条例**（**GDPR**）对欧盟）都很有用。
- en: By enabling global writes, we can start configuring this setting. Using any
    of the two templates—global performance or excellent global performance—an admin
    can create server configurations that will be less than 120 or less than 80 milliseconds
    from any user around the world. An administrator can also define their own custom
    assignments from regions to data centers.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 通过启用全局写入，我们可以开始配置此设置。使用任何两个模板——全局性能或优秀的全局性能——管理员可以创建服务器配置，使其距离世界各地的任何用户都不到120毫秒或80毫秒。管理员还可以定义自己的自定义分配，从区域到数据中心。
- en: In Zone configuration summary, we can see an overview of how our settings will
    affect performance. M30 is the shard-enabled MongoDB Atlas plan and this configuration
    is creating (under the hood) a shard per zone. We can create more shards per zone
    but this is not recommended at this time.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在区域配置摘要中，我们可以看到我们的设置将如何影响性能的概述。M30是启用了分片的MongoDB Atlas计划，该配置正在（在幕后）为每个区域创建一个分片。我们可以在每个区域创建更多的分片，但目前不建议这样做。
- en: Enabling configure local reads in all zones will create local read-only replica
    set nodes in every region other than the zone that is used to write data to. So,
    if we have three zones (*A*, *B*, and *C)*, we end up with writes for *A* going
    to *A,* but reads from *A* happening either from a server in zone *A*, or *B*
    or *C*, depending on which server is geographically closer to the user. The same
    goes for zones *B* and *C*.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有区域启用本地读取配置将在除了用于写入数据的区域之外的每个区域创建本地只读副本集节点。因此，如果我们有三个区域（*A*，*B*和*C*），我们最终会发现*A*的写入会发送到*A*，但来自*A*的读取将在*A*区域的服务器上进行，或者*B*或*C*，取决于哪个服务器对用户更近。对于*B*和*C*区域也是一样的。
- en: This section is probably the most important for complex, multi-region deployments
    and should be treated with extreme care.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分对于复杂的多区域部署可能是最重要的，应该非常小心对待。
- en: 'The next section is configuring the servers that we want to use for our clusters:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是配置我们想要用于我们集群的服务器：
- en: '![](img/3bb9b097-6595-41af-9dfe-06cf6e2bca3f.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3bb9b097-6595-41af-9dfe-06cf6e2bca3f.png)'
- en: This is similar to how we will select servers in EC2 or Microsoft Azure. The
    main point to note is that we can select custom IOPS (the number of I/O operations
    per second) performance, and that we should select the Auto-expand Storage option
    to avoid running out of disk capacity. Together with this option, it's always
    useful to keep an eye on storage allocation to avoid excessive charges at the
    end of a billing cycle.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这类似于我们在EC2或Microsoft Azure中选择服务器的方式。需要注意的主要点是我们可以选择自定义的IOPS（每秒I/O操作数）性能，并且我们应该选择自动扩展存储选项，以避免磁盘容量不足。除此选项外，始终有必要关注存储分配，以避免在结算周期结束时产生过多费用。
- en: 'In the next panel, we can configure backup and advanced options for our cluster.
    The following screenshot shows Additional Settings for continuous backup:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个面板中，我们可以为我们的集群配置备份和高级选项。以下截图显示了连续备份的附加设置：
- en: '![](img/56ffb570-80cb-4f6b-aa62-5a39e447282c.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/56ffb570-80cb-4f6b-aa62-5a39e447282c.png)'
- en: 'The following screenshot shows the Advanced Settings option for enabling BI
    Connector:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了启用BI连接器的高级设置选项：
- en: '![](img/8ad297ed-73fb-406d-90f0-018948a81e54.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8ad297ed-73fb-406d-90f0-018948a81e54.png)'
- en: 'The following screenshot shows More Configuration Options that are available:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了可用的更多配置选项：
- en: '![](img/15ca0080-fc75-4d04-b01d-41697b6f5d7a.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/15ca0080-fc75-4d04-b01d-41697b6f5d7a.png)'
- en: Important notes
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'MongoDB has provided some useful tips for in MongoDB Atlas, including the following:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB在MongoDB Atlas中提供了一些有用的提示，包括以下内容：
- en: Use the latest version of MongoDB whenever possible.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽可能使用最新版本的MongoDB。
- en: Use the latest **Transport Layer Security** (**TLS**) version available, which
    is 1.3 at the time of writing.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在撰写时，使用最新的**传输层安全性**（**TLS**）版本，即1.3。
- en: Encryption at rest cannot be used together with continuous backups. We need
    to select cloud provider snapshots to be able to use this feature.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 静态加密不能与连续备份一起使用。我们需要选择云提供商的快照才能使用此功能。
- en: It's probably a good idea to disable server-side JavaScript, unless we know
    why we need it, for example, when we have legacy MapReduce jobs in place.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除非我们知道为什么需要，否则最好禁用服务器端JavaScript，例如当我们有传统的MapReduce作业时。
- en: Requiring indexes for all queries can be useful if we have a well-defined business
    case and requirements for how we will use the database, and/or we expect our dataset
    to be so large that querying without indexes is practically impossible.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对所有查询需要索引可能是有用的，如果我们有一个明确定义的业务案例和对如何使用数据库的要求，和/或者我们预期我们的数据集会非常大，以至于在没有索引的情况下查询几乎是不可能的。
- en: Finally, we get to select the name of our cluster. This cannot be changed after
    creation so it's important to agree with fellow team members before we click on
    the Create Cluster button.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，我们可以选择我们的集群名称。创建后无法更改，因此在单击“创建集群”按钮之前与团队成员达成一致意见非常重要。
- en: After a bit of waiting, our cluster will be operational, and we will be able
    to connect to it via a plain old MongoDB URI.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 经过一段时间的等待，我们的集群将投入运行，我们将能够通过普通的旧MongoDB URI连接到它。
- en: MongoDB Cloud Manager
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MongoDB Cloud Manager
- en: Formerly known as **MongoDB Management Service** (**MMS**) and before that as
    **MongoDB Monitoring Service** (**MMS**), Cloud Manager is a managed SaaS for
    on-premises MongoDB deployments.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Cloud Manager以前被称为**MongoDB管理服务**（**MMS**），在此之前被称为**MongoDB监控服务**（**MMS**），是一个托管的SaaS，用于本地部署的MongoDB。
- en: Atlas as a DBaaS solution can provide an end-to-end solution for database management.
    For many use cases this may not be feasible. In this case, it may make sense to
    use some of the features in a pay-as-you-go fashion.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 作为DBaaS解决方案的Atlas可以为数据库管理提供端到端的解决方案。对于许多用例来说，这可能是不可行的。在这种情况下，可能有意义以按需付费的方式使用一些功能。
- en: Cloud Manager has a limited free tier and several paid ones.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Cloud Manager有一个有限的免费层和几个付费层。
- en: 'Here are some of the key features of Cloud Manager:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是Cloud Manager的一些关键特性：
- en: Automated backups
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动备份
- en: More than 100 database metrics and **Key Performance Indicators** (**KPIs**)
    that can be used to track MongoDB's performance
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超过100个数据库指标和**关键绩效指标**（**KPIs**）可用于跟踪MongoDB的性能
- en: Customized alerts that integrate with third-party systems such as PagerDuty,
    email, and SMS
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定制的警报，可以与PagerDuty、电子邮件和短信等第三方系统集成
- en: A unified operations view, either via directly querying its JSON API, or by
    integrating it with popular performance tracking solutions such as New Relic ([https://www.newrelic.com](https://www.newrelic.com))
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 统一的操作视图，可以通过直接查询其JSON API，或者将其与New Relic等流行的性能跟踪解决方案集成
- en: Premium plans also offer advice around performance and indexing. Cloud Manager's
    only requirement is to install the required agents in our application.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 高级计划还提供关于性能和索引的建议。Cloud Manager的唯一要求是在我们的应用程序中安装所需的代理。
- en: MongoDB Ops Manager
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MongoDB Ops Manager
- en: Ops Manager is, in many ways, different to Cloud Manager. In contrast to Cloud
    Manager, it is a downloadable executable for Windows Server, **Red Hat Enterprise
    Linux** (**RHEL**), or Ubuntu.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多方面，Ops Manager与Cloud Manager不同。与Cloud Manager相比，它是一个可下载的可执行文件，适用于Windows
    Server、**Red Hat Enterprise Linux**（**RHEL**）或Ubuntu。
- en: Following on this, users need to install and manage the service within their
    own infrastructure.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在此基础上，用户需要在自己的基础设施中安装和管理服务。
- en: 'Aside from this difference, Ops Manager can also help achieve similar goals
    to Cloud Manager:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这个区别，Ops Manager还可以帮助实现与Cloud Manager类似的目标：
- en: Monitoring on more than 100 performance metrics
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控超过100个性能指标
- en: Automation on installing and upgrading clusters; plus index maintenance can
    be achieved with zero downtime
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动安装和升级集群；加索引维护可以实现零停机
- en: For continuous, incremental backups with point-in-time recovery
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于连续、增量备份和恢复到特定时间点
- en: Query optimization
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询优化
- en: Index suggestions
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引建议
- en: 'A sample Ops Manager topology is as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Ops Manager的一个示例拓扑如下：
- en: '![](img/3cfdade5-29d8-4951-b2f9-f9d735320e56.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3cfdade5-29d8-4951-b2f9-f9d735320e56.png)'
- en: Aside from the Ops Manager and the MongoDB nodes, we also need snapshot storage
    if we have enabled backups.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 除了Ops Manager和MongoDB节点，如果启用了备份，我们还需要快照存储。
- en: Ops Manager can be a better alternative to Cloud Manager if we want an on-premises
    solution for security, or for other reasons. This is included as part of the MongoDB
    Enterprise Server paid solution.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们需要一个本地解决方案来保障安全性或其他原因，Ops Manager可能是Cloud Manager的更好选择。这是MongoDB Enterprise
    Server付费解决方案的一部分。
- en: MongoDB Charts
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MongoDB Charts
- en: MongoDB Charts is a tool to generate visualizations from MongoDB data. It enables
    non-technical people to query a MongoDB database using a GUI and share the results
    with colleagues.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Charts是一个从MongoDB数据生成可视化的工具。它使非技术人员可以使用GUI查询MongoDB数据库，并与同事分享结果。
- en: 'MongoDB Charts can create a series of charts, including the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Charts可以创建一系列图表，包括以下内容：
- en: A column and bar chart reference
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 柱状图和条形图参考
- en: A line and area chart reference
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线性和面积图参考
- en: 'Grid charts:'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网格图表：
- en: A heatmap reference
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 热力图参考
- en: A scatter chart reference
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 散点图参考
- en: A donut chart reference
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 圆环图参考
- en: 'Text charts: Number chart reference'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本图表：数字图表参考
- en: Like Ops Manager, it's a standalone executable utilizing Docker that needs to
    be installed and managed on-premises.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 与Ops Manager类似，它是一个独立的可执行文件，利用Docker在本地安装和管理。
- en: Use replica set secondaries for charts queries. Ideally, use a secondary, hidden,
    non-electable node as an analytics node in replica sets.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 使用副本集辅助节点进行图表查询。理想情况下，使用辅助、隐藏、不可选举节点作为副本集中的分析节点。
- en: MongoDB Compass
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MongoDB Compass
- en: MongoDB Compass is similar to MongoDB Charts, with less functionality around
    charting, but more heavily oriented towards running ad hoc queries and connecting
    to our database without the need for a command-line interface.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Compass类似于MongoDB Charts，但在图表功能方面功能较少，更加重视运行临时查询并连接到我们的数据库，而无需使用命令行界面。
- en: Compass provides the ability to query MongoDB through a GUI and visually construct
    queries. It can provide rich visualizations on result datasets, and help with
    constructing aggregation queries through a point and click interface.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Compass提供了通过GUI查询MongoDB和可视化构建查询的功能。它可以对结果数据集提供丰富的可视化，并帮助通过点和点击界面构建聚合查询。
- en: Compass also provides visualizations for most administrative queries around
    query and index performance, so that it can be used to monitor and troubleshoot
    clusters from a database administrator perspective. It exposes an API that can
    be used to import or develop plugins.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Compass还为大多数围绕查询和索引性能的管理查询提供可视化，因此可以从数据库管理员的角度监视和排除集群。它公开了一个API，可用于导入或开发插件。
- en: A useful feature for non-technical users is the ability to download a read-only
    edition so that we can limit access to non-destructive operations. There is also
    an isolated edition of this tool that can be used to restrict connections to a
    single chosen server. These requests will also be TLS-encrypted.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 非技术用户的一个有用功能是能够下载一个只读版本，以限制对非破坏性操作的访问。此工具还有一个隔离版本，可用于限制连接到单个选择的服务器。这些请求也将进行TLS加密。
- en: Compass is available for Windows, OSX, Red Hat, and Ubuntu as an executable
    download. MongoDB Compass has a limited free edition, and the full feature set
    is available via a MongoDB subscription package.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Compass可在Windows、OSX、Red Hat和Ubuntu上作为可执行下载文件提供。MongoDB Compass有一个有限的免费版本，完整功能集可通过MongoDB订阅包获得。
- en: MongoDB Connector for Business Intelligence (BI)
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MongoDB业务智能连接器（BI）
- en: MongoDB Connector for BI is one of the most useful tools for non-developers.
    It is a part of the MongoDB Enterprise Advanced subscription and enables integration
    with BI tools using standard SQL queries.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Connector for BI是非开发人员最有用的工具之一。它是MongoDB Enterprise Advanced订阅的一部分，可以使用标准SQL查询与BI工具集成。
- en: It enables MongoDB integrations with enterprise tools such as Tableau, Qlik,
    Spotfire, Cognos, MicroStrategy, and SAP BusinessObjects.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 它使MongoDB能够与Tableau、Qlik、Spotfire、Cognos、MicroStrategy和SAP BusinessObjects等企业工具集成。
- en: It is available as an executable download for Amazon Linux, Debian, OSX, Red
    Hat, SUSE, Ubuntu, and Windows platforms, and can work with both on-premises databases
    and MongoDB Atlas. Once installed and configured correctly, it can provide an
    **Open Database Connectivity** (**ODBC**) **Data Source Name** (**DSN**) that
    most BI tools can use to connect to.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 它可作为可执行下载文件提供给Amazon Linux、Debian、OSX、Red Hat、SUSE、Ubuntu和Windows平台，并且可以与本地数据库和MongoDB
    Atlas一起使用。一旦安装和配置正确，它可以提供大多数BI工具可以使用的**开放数据库连接**（**ODBC**）**数据源名称**（**DSN**）。
- en: An introduction to Kubernetes
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kubernetes简介
- en: Kubernetes ([https://kubernetes.io](https://kubernetes.io)) is an open source
    container-orchestration system for automating deployment, scaling, and the management
    of containerized applications. In layman's terms, we can use Kubernetes (often
    referred to as k8s) to manage applications deployed via containers. Kubernetes
    was initially developed at Google and is now maintained by the **Cloud Native
    Computing Foundation** (**CNCF**).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Kubernetes ([https://kubernetes.io](https://kubernetes.io))是一个用于自动化部署、扩展和管理容器化应用程序的开源容器编排系统。通俗地说，我们可以使用Kubernetes（通常称为k8s）来管理通过容器部署的应用程序。Kubernetes最初是在Google开发的，现在由**Cloud
    Native Computing Foundation** (**CNCF**)维护。
- en: The most widely-used container technology is probably Docker. We can download
    and install Docker on any PC and, through a few commands, install a Docker image
    that will be isolated from our host system and contain our application code. Docker
    performs operating system level virtualization, where all containers are run by
    the host's operating system kernel. This results in containers being more lightweight
    than a full virtual machine (VM).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 最广泛使用的容器技术可能是Docker。我们可以在任何PC上下载和安装Docker，并通过几个命令安装一个与我们的主机系统隔离并包含我们的应用程序代码的Docker镜像。Docker执行操作系统级虚拟化，所有容器都由主机的操作系统内核运行。这导致容器比完整虚拟机（VM）更轻量级。
- en: Multiple Docker containers can be orchestrated using **Docker Swarm**. This
    is similar to Kubernetes and sometimes the two systems are directly compared with
    each other.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用**Docker Swarm**来编排多个Docker容器。这类似于Kubernetes，有时这两个系统会直接进行比较。
- en: MongoDB provides tools that can help administrators deploy and manage MongoDB
    clusters using Kubernetes.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB提供了可以帮助管理员使用Kubernetes部署和管理MongoDB集群的工具。
- en: Enterprise Kubernetes Operator
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 企业Kubernetes Operator
- en: Starting from MongoDB 4.0, the MongoDB Enterprise Operator for Kubernetes enables
    a user to deploy and manage MongoDB clusters directly from the Kubernetes API.
    This circumvents the need to directly connect to Cloud Manager or Ops Manager,
    and simplifies the deployment and management of Kubernetes clusters.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 从MongoDB 4.0开始，**MongoDB Enterprise Operator for Kubernetes**使用户能够直接从Kubernetes
    API部署和管理MongoDB集群。这避免了直接连接到Cloud Manager或Ops Manager的需要，并简化了Kubernetes集群的部署和管理。
- en: Cloud Manager is, in most aspects, the SaaS equivalent of Ops Manager.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Cloud Manager在大多数方面相当于Ops Manager的SaaS版本。
- en: Enterprise Kubernetes Operator can be installed using Helm, the package manager
    for Kubernetes. First, we have to clone the GitHub repository from MongoDB: [https://github.com/mongodb/mongodb-enterprise-kubernetes.git](https://github.com/mongodb/mongodb-enterprise-kubernetes.git).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用Helm，Kubernetes的软件包管理器，安装企业Kubernetes Operator。首先，我们必须从MongoDB克隆GitHub存储库：[https://github.com/mongodb/mongodb-enterprise-kubernetes.git](https://github.com/mongodb/mongodb-enterprise-kubernetes.git)。
- en: 'After we change the directory to our local copy, we can issue the following
    command:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将目录更改为我们的本地副本后，我们可以发出以下命令：
- en: '[PRE0]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We will then have the local copy installed; the next step is to configure it.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将安装本地副本；下一步是配置它。
- en: 'By configuring our local installation, we need to apply a Kubernetes `ConfigMap`
    file. The configuration settings that we need to copy from Ops Manager or Cloud
    Manager are as follows:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 通过配置我们的本地安装，我们需要应用一个Kubernetes `ConfigMap`文件。我们需要从Ops Manager或Cloud Manager复制的配置设置如下：
- en: '**Base URL**: The URL of your Ops Manager or Cloud Manager. For Cloud Manager,
    this will be [http://cloud.mongodb.com](http://cloud.mongodb.com); for Ops Manager,
    this should be similar to `http://<MY_SERVER_NAME>:8080/`.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基本URL**：Ops Manager或Cloud Manager的URL。对于Cloud Manager，这将是[http://cloud.mongodb.com](http://cloud.mongodb.com)；对于Ops
    Manager，这应该类似于`http://<MY_SERVER_NAME>:8080/`。'
- en: '**Project ID**: The ID of an Ops Manager project that the Enterprise Kubernetes
    Operator will deploy into. This should be created within the Ops Manager or Cloud
    Manager, and is a unique ID to organize a MongoDB cluster and provide a security
    boundary for the project. It should be a 24-digit hexadecimal string.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**项目ID**：Ops Manager项目的ID，Enterprise Kubernetes Operator将部署到该项目中。这应该在Ops Manager或Cloud
    Manager中创建，并且是用于组织MongoDB集群并为项目提供安全边界的唯一ID。它应该是一个24位十六进制字符串。'
- en: '**User**: An existing Ops Manager username. This is the email of a user in
    Ops Manager that we want the Enterprise Kubernetes Operator to use when connecting
    to Ops Manager.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户**：现有的Ops Manager用户名。这是Ops Manager中用户的电子邮件，我们希望Enterprise Kubernetes Operator在连接到Ops
    Manager时使用。'
- en: '**Public API key**: This is used by the Enterprise Kubernetes Operator to connect
    to the Ops Manager REST API endpoint.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公共API密钥**：这是Enterprise Kubernetes Operator用于连接到Ops Manager REST API端点的密钥。'
- en: This is created by clicking on the username on the Ops Manager console and selecting
    Account. On the next screen, we can click on Public API Access, and then click
    on the Generate key button and provide a description. The next screen will display
    the public API key that we need.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过在Ops Manager控制台上点击用户名并选择帐户来创建的。在下一个屏幕上，我们可以点击公共API访问，然后点击“生成”按钮并提供描述。下一个屏幕将显示我们需要的公共API密钥。
- en: This is the only chance that we will ever have to view this API key, so we need
    to write it down, otherwise, we will need to regenerate a new key.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们唯一一次查看此API密钥的机会，所以我们需要把它写下来，否则我们将需要重新生成一个新的密钥。
- en: Once we have these values, we can create the Kubernetes `ConfigMap` file with
    any name we want, as long as it's a `.yaml` file. In our case, we will name it
    `mongodb-project.yaml`.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了这些值，我们就可以创建Kubernetes `ConfigMap`文件，文件名可以任意，只要是`.yaml`文件即可。在我们的情况下，我们将命名为`mongodb-project.yaml`。
- en: 'Its structure will be as follows:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 其结构将如下所示：
- en: '[PRE1]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then we can apply this file to Kubernetes using the following command:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以使用以下命令将此文件应用到Kubernetes：
- en: '[PRE2]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The last step we need to take is to create the Kubernetes secret. This can
    be done using the following command:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要采取的最后一步是创建Kubernetes秘钥。可以使用以下命令来完成：
- en: '[PRE3]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We need to note down the credentials name as we will need it in the subsequent
    steps.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要记下凭据名称，因为我们在后续步骤中会用到它。
- en: 'Now we are ready to deploy our replica set using Kubernetes! We can create
    a `replica-set.yaml` file with the following structure:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备使用Kubernetes部署我们的副本集！我们可以创建一个名为`replica-set.yaml`的文件，其结构如下：
- en: '[PRE4]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We apply the new configuration using `kubectl apply`:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`kubectl apply`应用新配置：
- en: '[PRE5]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: We will be able to see our new replica set in Ops Manager.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将能够在Ops Manager中看到我们的新副本集。
- en: To troubleshoot and identify issues in MongoDB using Kubernetes we can use
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Kubernetes对MongoDB进行故障排除和识别问题，我们可以使用
- en: '`kubectl logs` to inspect logs, and `kubectl exec` to shell into one of the
    containers that is running MongoDB.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '`kubectl logs`用于检查日志，`kubectl exec`用于进入运行MongoDB的容器之一。'
- en: MongoDB Mobile
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MongoDB Mobile
- en: 'MongoDB Mobile is the mobile version of the MongoDB database. It''s aimed at
    smartphones and IoT sensors via Embedded MongoDB. MongoDB Mobile has two core
    parts:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Mobile是MongoDB数据库的移动版本。它针对智能手机和物联网传感器，通过嵌入式MongoDB。MongoDB Mobile有两个核心部分：
- en: A MongoDB database server that runs locally on the device, enabling offline
    access to data. This database is a stripped-down version of the MongoDB Server
    Community Edition, without any of the features that are not needed for Mobile
    (for example, replication).
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在设备上本地运行的MongoDB数据库服务器，实现对数据的离线访问。该数据库是MongoDB Server Community Edition的精简版本，不包含Mobile不需要的任何功能（例如复制）。
- en: Native Java and Android SDKs to provide low-level access to the database and
    interact with the local Mobile database and any MongoDB Stitch backend.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本机Java和Android SDK提供对数据库的低级访问，并与本地Mobile数据库和任何MongoDB Stitch后端进行交互。
- en: Mobile SDK has two modes of operation. In local mode, the SDK only allows access
    to the local Mobile database, and cannot sync with any external source in Atlas.
    In remote mode, the SDK can access both MongoDB Atlas and MongoDB Mobile databases
    and Sync between them.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Mobile SDK有两种操作模式。在本地模式下，SDK只允许访问本地Mobile数据库，并且无法与Atlas中的任何外部源进行同步。在远程模式下，SDK可以访问MongoDB
    Atlas和MongoDB Mobile数据库，并在它们之间进行同步。
- en: 'Here are some limitations of MongoDB Mobile over the server version:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是MongoDB Mobile相对于服务器版本的一些限制：
- en: No support for replication
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持复制
- en: No support for sharding
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持分片
- en: No database authentication; however, the MongoDB Mobile database only accepts
    connections originating from the application
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有数据库身份验证；但是，MongoDB Mobile数据库只接受源自应用程序的连接
- en: No SSL
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有SSL
- en: No encryption at rest
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 静态加密
- en: No change streams support
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持更改流
- en: No server-side JavaScript evaluation (this is for performance reasons)
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有服务器端JavaScript评估（出于性能原因）
- en: No multi-document ACID transactions
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有多文档ACID事务
- en: 'To set up MongoDB Mobile, we need to download and install the MongoDB Stitch
    SDK first. Then, creating and querying a local MongoDB database is as easy as
    a few lines of code (this example is in Android):'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置MongoDB Mobile，我们需要先下载并安装MongoDB Stitch SDK。然后，创建和查询本地MongoDB数据库就像几行代码一样简单（此示例为Android）：
- en: '[PRE6]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Initialize the database as follows:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化数据库如下：
- en: '[PRE7]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Next, get a reference to the database:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，获取对数据库的引用：
- en: '[PRE8]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Insert `document` as follows:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 插入`document`如下：
- en: '[PRE9]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Then, find the first document by using `first()`:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用`first()`找到第一个文档：
- en: '[PRE10]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: MongoDB Mobile is most powerful when used in conjunction with MongoDB Stitch,
    which we will explore in the next section.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 与MongoDB Stitch一起使用时，MongoDB Mobile的功能最强大，我们将在下一节中探讨。
- en: MongoDB Stitch
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MongoDB Stitch
- en: 'MongoDB Stitch is MongoDB''s serverless platform offering. It is based on four
    distinct areas of functionality:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Stitch是MongoDB的无服务器平台。它基于功能的四个不同领域：
- en: The first area is QueryAnywhere. QueryAnywhere allows client-side applications
    to access MongoDB using its query language. We can define data access rules on
    the Stitch server on a per collection basis to allow us to filter results based
    on user data (`userId`).
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个领域是QueryAnywhere。QueryAnywhere允许客户端应用程序使用其查询语言访问MongoDB。我们可以在Stitch服务器上按照每个集合的基础定义数据访问规则，以允许我们根据用户数据（`userId`）过滤结果。
- en: The second area is Stitch functions. These are simple JavaScript functions that
    can execute without a server inside the Stitch platform. By using Stitch functions,
    we can implement application logic, expose APIs, and build integrations with third-party
    services. This service is mostly similar to Amazon's AWS Lambda.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个领域是Stitch函数。这些是简单的JavaScript函数，可以在Stitch平台内部无需服务器执行。通过使用Stitch函数，我们可以实现应用程序逻辑，公开API，并与第三方服务构建集成。这项服务与亚马逊的AWS
    Lambda非常相似。
- en: The third area is Stitch triggers. Similar to MongoDB server's change streams
    and triggers as they are used in relational databases, Stitch triggers execute
    user-defined functions in real time by responding to changes in database state.
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三个领域是Stitch触发器。类似于MongoDB服务器的更改流和触发器，它们用于关系数据库，Stitch触发器通过响应数据库状态的变化实时执行用户定义的函数。
- en: Finally, there is Stitch Mobile Sync, which bridges the Stitch serverless offering
    with Mobile MongoDB. By using it, we can develop a Mobile service with a local
    MongoDB database residing in the smartphone, which is perfectly synced with our
    MongoDB Atlas-powered database in the cloud.
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，还有Stitch Mobile Sync，它将Stitch无服务器提供与Mobile MongoDB的桥接。通过使用它，我们可以开发一个在智能手机上具有本地MongoDB数据库的Mobile服务，该数据库与我们在云中的MongoDB
    Atlas数据库完美同步。
- en: This way, we can query data locally in the app with no lag, or even while being
    offline, and rely on Stitch Mobile Sync to keep our data store up to date.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，我们可以在应用程序中本地查询数据，无需延迟，甚至在离线状态下，依靠Stitch Mobile Sync来保持我们的数据存储最新。
- en: Stitch can be used on the web (JavaScript), Android, and macOS (Swift).
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Stitch可用于Web（JavaScript）、Android和macOS（Swift）。
- en: QueryAnywhere
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: QueryAnywhere
- en: QueryAnywhere allows querying MongoDB server data directly from a client application.
    A key differentiation and functionality that allows us to do this securely is
    the ability to define data access rules to filter results based on the content
    of a document or the logged-in user.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: QueryAnywhere允许直接从客户端应用程序查询MongoDB服务器数据。一个关键的区分和功能，允许我们安全地定义数据访问规则，以根据文档内容或登录用户过滤结果。
- en: Rules
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 规则
- en: MongoDB rules are a combination of a role, and the permissions assigned to that
    role. Roles define a set of users that will have the same read/write access to
    a document. Roles in Stitch can be defined with an **apply-when** rule.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB规则是角色和分配给该角色的权限的组合。角色定义了一组用户，这些用户将具有对文档的相同读/写访问权限。Stitch中的角色可以使用**apply-when**规则进行定义。
- en: 'This can be defined using the `%%` variable notation:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以使用`%%`变量表示法来定义：
- en: '[PRE11]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Each role can have one or more permissions that define which fields they can
    read and/or write in a document.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 每个角色可以有一个或多个权限，定义了他们可以在文档中读取和/或写入哪些字段。
- en: 'MongoDB Stitch also offers four templates that have predefined roles and permissions
    around the most common use cases:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Stitch还提供了四个预定义角色和权限的模板，围绕最常见的用例。
- en: Users can only read and write their own data.
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户只能读取和写入自己的数据。
- en: Users can read all data, but only write their own data.
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以读取所有数据，但只能写入自己的数据。
- en: Users can only read all data.
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户只能读取所有数据。
- en: Users can read and write their own data. Users that belong to a sharing list
    can read that data.
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户可以读取和写入自己的数据。属于共享列表的用户可以读取该数据。
- en: Authorization is applied before the rules. If a user is not authorized to access
    a collection, their rules will not be evaluated at all.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 授权在规则之前应用。如果用户未经授权访问集合，它们的规则将根本不会被评估。
- en: Functions
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 函数
- en: Stitch functions can be used to execute server-side application logic. They
    are written in JavaScript ES6+ and don't require server.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: Stitch函数可用于执行服务器端应用程序逻辑。它们是用JavaScript ES6+编写的，不需要服务器。
- en: 'Here are some key limitations of functions:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是函数的一些关键限制：
- en: They stop execution once they return
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们一旦返回就停止执行
- en: They can run for up to 60 seconds, using up to 256 MB of memory
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们可以运行长达60秒，使用高达256 MB的内存
- en: They cannot import modules or use some of the core JavaScript functionality,
    such as global object types, mathematical, number, string, array, and object APIs
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们不能导入模块或使用一些核心JavaScript功能，例如全局对象类型、数学、数字、字符串、数组和对象API
- en: 'Stitch functions can be imported via the CLI or from Stitch UI. For a simple
    function that we have named `multiply`, we could add this code in the UI:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: Stitch函数可以通过CLI或从Stitch UI导入。对于我们命名为`multiply`的简单函数，我们可以在UI中添加以下代码：
- en: '[PRE12]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'And then we could call it from another function, webhook, or trigger within
    Stitch:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以从另一个函数、webhook或Stitch中的触发器调用它：
- en: '[PRE13]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We can also trigger its execution within a Stitch JSON expression using `%function`:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以在Stitch JSON表达式中使用`%function`触发其执行：
- en: '[PRE14]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'We can even call this function from our client application using Stitch SDK
    (JavaScript, Android, or macOS):'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 我们甚至可以使用Stitch SDK（JavaScript、Android或macOS）从我们的客户端应用程序调用此函数：
- en: '[PRE15]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Triggers
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 触发器
- en: Triggers are building upon Stitch functions to execute when a database collection
    changes for database triggers, or execute authentication logic when a user is
    modified using authentication triggers.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 触发器是基于Stitch函数构建的，用于在数据库触发器发生数据库集合更改时执行，或者在使用身份验证触发器修改用户时执行身份验证逻辑。
- en: Database triggers can execute on one or more of the `INSERT`, `UPDATE`, `REPLACE`,
    and `DELETE` database operations.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库触发器可以在`INSERT`，`UPDATE`，`REPLACE`和`DELETE`数据库操作中执行。
- en: These values all need to be case sensitive.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些值都需要区分大小写。
- en: We need to define the **linked function**, which is the function that will execute
    once the trigger fires. An interesting option for the `UPDATE` operation is `fullDocument`.
    When set to `true`, this will include the full result of the operation. This is,
    as always, subject to the 16 MB document size limit, so updates to documents really
    close to the 16 MB limit may fail as the result will exceed the limit.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要定义**链接函数**，即触发器触发后将执行的函数。对于`UPDATE`操作的一个有趣选项是`fullDocument`。当设置为`true`时，这将包括操作的完整结果。这始终受到16
    MB文档大小限制的限制，因此接近16 MB限制的文档的更新可能会失败，因为结果将超出限制。
- en: 'Authentication triggers, on the other hand, allow us to execute custom code
    on authentication events. These can be triggered on `CREATE`, `LOGIN`, and `DELETE`
    operation types from the following providers:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，身份验证触发器允许我们在身份验证事件上执行自定义代码。这些可以在以下提供程序的`CREATE`，`LOGIN`和`DELETE`操作类型上触发：
- en: '`oauth2-google`'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oauth2-google`'
- en: '`oauth2-facebook`'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`oauth2-facebook`'
- en: '`custom-token`'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`custom-token`'
- en: '`local-userpass`'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`local-userpass`'
- en: '`api-key`'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`api-key`'
- en: '`anon-user`'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`anon-user`'
- en: Authentication operation types are case sensitive and need to be all uppercase. Up
    to 50 triggers per second can be concurrently executed. If we try to invoke more,
    they will get into a queue to be processed in a **first-in first-out** (**FIFO**)
    fashion.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 身份验证操作类型区分大小写，需要全部大写。最多可以同时执行50个触发器。如果我们尝试调用更多，它们将排队等待以**先进先出**（**FIFO**）的方式进行处理。
- en: Triggers are quite similar to RDBMS trigger functionality, with the added bonus
    that they are easy and flexible to manage via the Stitch trigger's GUI console.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 触发器与RDBMS触发器功能非常相似，而且它们易于灵活地通过Stitch触发器的GUI控制台进行管理。
- en: Mobile Sync
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Mobile Sync
- en: 'One of the newest additions in MongoDB Stitch Mobile Sync can be used to sync
    data seamlessly between MongoDB Mobile and the server''s backend (at the moment
    of writing this, it has to be hosted on MongoDB Atlas). Mobile Sync is also based
    on change streams to listen to data changing between local and remote databases.
    As data changes in the local Mobile database, we may run into conflicts between
    the local and remote state. This is why we need to define some handlers to specify
    what should happen in that case. There are three interfaces that we need to implement
    for our models:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Stitch Mobile Sync中的最新添加之一可以在MongoDB Mobile和服务器后端之间无缝同步数据（在撰写本文时，它必须托管在MongoDB
    Atlas上）。Mobile Sync还基于更改流来监听本地和远程数据库之间的数据更改。随着本地Mobile数据库中的数据更改，我们可能会遇到本地和远程状态之间的冲突。这就是为什么我们需要定义一些处理程序来指定在这种情况下应该发生什么。我们需要为我们的模型实现三个接口：
- en: '`ConflictHandler`'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ConflictHandler`'
- en: '`ErrorListener`'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ErrorListener`'
- en: '`ChangeEventListener`'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ChangeEventListener`'
- en: '`ConflictHandler` has a method that arguments `documentId` of the document
    that conflicts the local and remote events, returns a resolution to the conflict
    as shown:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '`ConflictHandler`有一个方法，参数是冲突本地和远程事件的`documentId`，返回冲突的解决方案，如下所示：'
- en: '[PRE16]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '`ErrorListener` does not return anything and is called when an error happens
    for `documentId` and non-network related exception:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '`ErrorListener`不返回任何内容，并在发生`documentId`和非网络相关异常的错误时调用：'
- en: '[PRE17]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Finally, `ChangeEventListener` also does not return any values and is called
    when any change `event` happens for the given `documentId`:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`ChangeEventListener`也不返回任何值，并在给定`documentId`的任何更改`event`发生时调用：
- en: '[PRE18]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Summary
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we went through different MongoDB tools and learned how to
    use them to increase productivity. Starting from MongoDB Atlas, the hosted DBaaS
    solution, we followed on with Cloud Manager and Ops Manager, and explored how
    they differ from each other.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们通过不同的MongoDB工具，并学习如何使用它们来提高生产力。从MongoDB Atlas开始，这是托管的DBaaS解决方案，我们接着介绍了Cloud
    Manager和Ops Manager，并探讨了它们之间的区别。
- en: Then, we dived into MongoDB Charts and MongoDB Compass—the GUI-driven MongoDB
    administration tools. We learned about MongoDB Connector for BI and how can it
    prove to be useful for our purposes. Then we discussed Kubernetes, how it compares
    to Docker and Docker Swarm, and how we can use Kubernetes with MongoDB Enterprise
    Operator. The next section was dedicated to MongoDB Mobile and Stitch—two major
    enhancements in MongoDB 4.0\. We introduced practical examples of using Stitch's
    functionality, especially around QueryAnywhere, triggers, and functions. Finally,
    we briefly introduced Mobile Sync, one of the latest additions to MongoDB's arsenal,
    and looked at how it can be used to sync our Mobile applications with a cloud-based
    database.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们深入了解了MongoDB Charts和MongoDB Compass——基于GUI的MongoDB管理工具。我们了解了MongoDB Connector
    for BI以及它如何对我们的目的有用。然后我们讨论了Kubernetes，它与Docker和Docker Swarm的比较，以及我们如何将Kubernetes与MongoDB
    Enterprise Operator一起使用。接下来的部分专门介绍了MongoDB Mobile和Stitch——MongoDB 4.0中的两个重大增强。我们介绍了使用Stitch功能的实际示例，特别是QueryAnywhere、触发器和函数。最后，我们简要介绍了Mobile
    Sync，这是MongoDB武器库中最新的增加之一，并探讨了它如何用于将我们的移动应用程序与基于云的数据库同步。
- en: In the next chapter, we are going to switch gears and deal with how we can use
    big data with MongoDB to ingest and process large streaming and batch datasets.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将转变方向，处理如何使用MongoDB处理大数据，以摄取和处理大型流式和批处理数据集。
