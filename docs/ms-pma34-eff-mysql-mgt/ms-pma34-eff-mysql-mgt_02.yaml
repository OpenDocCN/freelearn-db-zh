- en: Chapter 2. Configuring Authentication and Security
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章。配置身份验证和安全
- en: There are many ways of configuring authentication in phpMyAdmin—depending on
    our goals, the presence of other applications, and the level of security we need.
    This chapter explores the available possibilities.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在phpMyAdmin中配置身份验证有许多种方式 - 取决于我们的目标、其他应用程序的存在以及我们需要的安全级别。本章探讨了可用的可能性。
- en: Logging in to MySQL through phpMyAdmin
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过phpMyAdmin登录MySQL
- en: When we type in a username and password, although it seems that we are logging
    in to phpMyAdmin, we are not! We are merely using phpMyAdmin (which is running
    on the web server) as an interface that sends our username and password information
    to the MySQL server. Strictly speaking, we do not log in *to* phpMyAdmin, but
    *through* phpMyAdmin.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们输入用户名和密码时，尽管看起来我们是在登录phpMyAdmin，但实际上我们并没有！我们只是使用phpMyAdmin（运行在web服务器上）作为一个界面，将我们的用户名和密码信息发送到MySQL服务器。严格来说，我们并没有登录*到*phpMyAdmin，而是*通过*phpMyAdmin。
- en: Note
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This is why in user-support forums about phpMyAdmin, people asking for help
    about authentication are often referred back to their MySQL server's administrator,
    because a lost MySQL user or password is not a phpMyAdmin problem.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么在关于phpMyAdmin的用户支持论坛中，询问身份验证帮助的人经常被引荐回他们的MySQL服务器管理员，因为丢失的MySQL用户名或密码不是phpMyAdmin的问题。
- en: This section explains the various authentication modes offered by phpMyAdmin.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本节解释了phpMyAdmin提供的各种身份验证模式。
- en: Logging in to an account without a password
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在没有密码的情况下登录账户
- en: MySQL's default installation leaves a server open to intrusion because it creates
    a MySQL account named `root` without a password—unless a password has been set
    by the MySQL distributor. The recommended remedy for this weakness in security
    is to set a password for the `root` account. In the eventuality that we cannot
    set one or do not want to set one, we will have to make a configuration change
    to phpMyAdmin. Indeed, a server-specific configuration parameter, `$cfg['Servers'][$i]['AllowNoPassword']`
    exists. Its default value is `false`, which means that no account is permitted
    to log in without a password. Generally, this directive should remain `false`
    to avoid this kind of access through phpMyAdmin, as hackers are actively probing
    the web for insecure MySQL servers. Go through the *Securing phpMyAdmin* section
    for other ideas about protecting your server.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL的默认安装会使服务器容易受到入侵，因为它创建了一个名为`root`的MySQL账户，而不设置密码 - 除非MySQL分发商已经设置了密码。对于这种安全性弱点的推荐解决方法是为`root`账户设置密码。如果我们无法设置密码或不想设置密码，我们将不得不对phpMyAdmin进行配置更改。事实上，存在一个特定于服务器的配置参数，`$cfg['Servers'][$i]['AllowNoPassword']`。它的默认值是`false`，这意味着不允许没有密码的账户登录。通常，这个指令应该保持为`false`，以避免通过phpMyAdmin进行这种访问，因为黑客正在积极地探测web上的不安全的MySQL服务器。查看*保护phpMyAdmin*部分，了解有关保护服务器的其他想法。
- en: Note
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If the `AllowNoPassword` parameter is left to `false` and a login attempt is
    made without a password, an **Access denied** message is displayed.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`AllowNoPassword`参数保持为`false`，并且尝试登录而没有密码，则会显示**拒绝访问**消息。
- en: Authenticating a single user with config
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用`config`身份验证对单个用户进行身份验证
- en: We might have the need to automatically connect to a MySQL server via phpMyAdmin,
    using a fixed username and password, without even having been asked for it. This
    is the precise goal of the `config` authentication type.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能需要通过固定的用户名和密码自动连接到MySQL服务器，而无需甚至被要求。这就是`config`身份验证类型的确切目标。
- en: For our first example, we will use this `config` authentication. However, in
    the *Authenticating multiple users* section, we will see more powerful and versatile
    ways of authenticating.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的第一个示例，我们将使用`config`身份验证。然而，在*身份验证多个用户*部分，我们将看到更强大和多功能的身份验证方式。
- en: Note
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Using the `config` authentication type leaves our phpMyAdmin open to intrusion,
    unless we protect it as explained in the *Securing phpMyAdmin* section of this
    chapter.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`config`身份验证类型会使我们的phpMyAdmin容易受到入侵，除非我们像本章的*保护phpMyAdmin*部分所解释的那样保护它。
- en: 'Here, we ask for `config` authentication, and enter our username and password
    for this MySQL server:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们要求`config`身份验证，并为这个MySQL服务器输入我们的用户名和密码：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We can then save the changes we made in `config.inc.php`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以保存我们在`config.inc.php`中所做的更改。
- en: Testing the MySQL connection
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试MySQL连接
- en: 'Now it''s time to start phpMyAdmin and try connecting to it with the values
    we configured. This will test the following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候启动phpMyAdmin并尝试使用我们配置的值连接到它。这将测试以下内容：
- en: The values we entered in the `config` file or on the web-based setup
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在`config`文件或基于web的设置中输入的值
- en: The setup of the PHP component inside the web server, if we did a manual configuration
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP组件在web服务器内的设置，如果我们进行了手动配置
- en: Communication between web and MySQL servers
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: web和MySQL服务器之间的通信
- en: We start our browser and point it to the directory where we installed phpMyAdmin,
    as in[http://www.mydomain.com/phpMyAdmin/](http://www.mydomain.com/phpMyAdmin/).
    If this does not work, we try[http://www.mydomain.com/phpMyAdmin/index.php](http://www.mydomain.com/phpMyAdmin/index.php).
    (This would mean that our web server is not configured to interpret `index.php`
    as the default starting document.)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们启动浏览器，并将其指向我们安装phpMyAdmin的目录，如[http://www.mydomain.com/phpMyAdmin/](http://www.mydomain.com/phpMyAdmin/)。如果这不起作用，我们尝试[http://www.mydomain.com/phpMyAdmin/index.php](http://www.mydomain.com/phpMyAdmin/index.php)。（这意味着我们的web服务器没有配置为将`index.php`解释为默认的起始文档。）
- en: If you still get an error, refer to the [Appendix A](apa.html "Appendix A. Troubleshooting
    and Support") for troubleshooting and support. We should now see phpMyAdmin's
    home page. [Chapter 3](ch03.html "Chapter 3. Over Viewing the Interface") gives
    an overview of the panels seen now.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果仍然出现错误，请参考[附录A](apa.html "附录A.故障排除和支持")进行故障排除和支持。现在我们应该看到phpMyAdmin的主页。[第3章](ch03.html
    "第3章.界面概述")概述了现在看到的面板。
- en: Authenticating multiple users
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 身份验证多个用户
- en: We might want to allow a single copy of phpMyAdmin to be used by a group of
    persons, each having their own MySQL username and password, and seeing only the
    databases they have rights to. Or we might prefer to avoid having our username
    and password in clear text in `config.inc.php`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能希望允许一份phpMyAdmin副本被一组人使用，每个人都有自己的MySQL用户名和密码，并且只能看到他们有权限的数据库。或者我们可能更喜欢避免在`config.inc.php`中以明文形式存储我们的用户名和密码。
- en: Instead of relying on a username and password stored in `config.inc.php`, phpMyAdmin
    will communicate with the browser and get authentication data from it. This enables
    true login for all users defined in a specific MySQL server, without having to
    define them in the configuration file. There are three modes offered that allow
    a controlled login to MySQL via phpMyAdmin— `http, cookie`, and `signon`. We will
    have to choose the one that suits our specific situation and environment (more
    on this in a moment). The `http` and `cookie` modes may require that we first
    define a control user, as covered in [Chapter 1](ch01.html "Chapter 1. Getting
    Started with phpMyAdmin").
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: phpMyAdmin不再依赖于`config.inc.php`中存储的用户名和密码，而是与浏览器通信，并从中获取认证数据。这使得所有在特定MySQL服务器中定义的用户都可以进行真正的登录，而无需在配置文件中定义它们。有三种模式可以允许通过phpMyAdmin对MySQL进行受控登录——`http，cookie`和`signon`。我们将不得不选择适合我们特定情况和环境的模式（稍后会详细介绍）。`http`和`cookie`模式可能需要我们首先定义一个控制用户，如[第1章](ch01.html
    "第1章。开始使用phpMyAdmin")中所述。
- en: Authenticating with HTTP
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用HTTP进行身份验证
- en: This mode`—http—`is the traditional mode offered in HTTP, in which the browser
    asks for the username and password, sends them to phpMyAdmin, and keeps sending
    them until all the browser windows are closed.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这种模式`—http—`是HTTP中提供的传统模式，其中浏览器请求用户名和密码，将它们发送到phpMyAdmin，并一直发送直到所有浏览器窗口关闭。
- en: 'To enable this mode, we simply use the following line:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用这种模式，我们只需使用以下行：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We can also define the HTTP **basic auth realm** ( [http://en.wikipedia.org/wiki/Basic_access_authentication](http://en.wikipedia.org/wiki/Basic_access_authentication)),
    which is a message to be displayed to the user at login time, via `$cfg['Servers'][$i]['auth_http_realm']`.
    This can help indicate the purpose of this server.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以通过`$cfg['Servers'][$i]['auth_http_realm']`定义HTTP的**基本认证领域**（[http://en.wikipedia.org/wiki/Basic_access_authentication](http://en.wikipedia.org/wiki/Basic_access_authentication)），这是在登录时向用户显示的消息，这可以帮助指示此服务器的目的。
- en: 'This mode has the following limitations:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这种模式有以下限制：
- en: PHP, depending on the version, might not support HTTP authentication for all
    kinds of web servers.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据版本不同，PHP可能不支持所有类型的Web服务器的HTTP身份验证。
- en: If we want to protect phpMyAdmin's directory with a `.htaccess` file (refer
    to the *Securing phpMyAdmin* section in this chapter), this will interfere with
    HTTP authentication type; we cannot use both.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们想要用`.htaccess`文件保护phpMyAdmin的目录（参考本章的*Securing phpMyAdmin*部分），这将干扰HTTP身份验证类型；我们不能同时使用两者。
- en: Browsers usually store the authentication information to save retyping credentials
    but bear in mind that these credentials are saved in an unencrypted format.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器通常会存储认证信息以节省重新输入凭据的时间，但请记住这些凭据是以未加密的格式保存的。
- en: There is no support for proper logout in the HTTP protocol; hence we have to
    close all browser windows to be able to log in again with the same username.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTTP协议中没有适当的注销支持；因此我们必须关闭所有浏览器窗口才能再次使用相同的用户名登录。
- en: Authenticating with cookie values
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用cookie值进行身份验证
- en: The `cookie` authentication mode is superior to `http` in terms of the functionalities
    it offers. This mode permits true login and logout, and can be used with PHP running
    on any kind of web server. It presents a login panel (as shown in the following
    screenshot) from within phpMyAdmin. This can be customized as we have the application
    source code. However, as you may have guessed, for `cookie` authentication, the
    browser must accept cookies coming from the web server—but this is the case for
    all authentication modes anyway.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`cookie`身份验证模式在提供的功能方面优于`http`。这种模式允许真正的登录和注销，并且可以与任何类型的Web服务器上运行的PHP一起使用。它在phpMyAdmin内部呈现登录面板（如下面的截图所示）。这可以根据应用程序源代码进行自定义。然而，正如你可能已经猜到的，对于`cookie`身份验证，浏览器必须接受来自Web服务器的cookie——但无论如何，这对所有身份验证模式都是如此。'
- en: This mode stores the username typed in the login screen into a permanent cookie
    in our browser while the password is stored as a temporary cookie. In a multi-server
    configuration, the username and password corresponding to each server are stored
    separately. To protect the username and password secrecy against attack methods
    that target cookie content, they are encrypted using the Blowfish cipher. So,
    to use this mode, we have to define (once) in `config.inc.php`, a secret string
    that will be used to securely encrypt all passwords stored as cookies from this
    phpMyAdmin installation.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这种模式将登录屏幕中输入的用户名存储为我们浏览器中的永久cookie，而密码则存储为临时cookie。在多服务器配置中，与每个服务器对应的用户名和密码是分开存储的。为了防止针对cookie内容的攻击方法泄露用户名和密码的机密性，它们使用Blowfish密码进行加密。因此，要使用这种模式，我们必须在`config.inc.php`中定义（一次）一个秘密字符串，该字符串将用于安全加密从此phpMyAdmin安装中存储为cookie的所有密码。
- en: 'This string is set via the `blowfish_secret` directive:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这个字符串是通过`blowfish_secret`指令设置的：
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In the previous example, an arbitrary string of characters was used; this string
    can be very complex as nobody will ever need to type it on a login panel. If we
    fail to configure this directive, a random secret string is generated by phpMyAdmin
    but it will last only for the current working session. Therefore, some features
    such as recalling the previous username on the login panel won't be available.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，使用了一串任意的字符；这个字符串可以非常复杂，因为没有人需要在登录面板上输入它。如果我们未能配置这个指令，phpMyAdmin将生成一个随机的秘密字符串，但它只会持续当前的工作会话。因此，一些功能，比如在登录面板上回忆上一个用户名，将不可用。
- en: 'Then, for each server-specific section, use the following:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，对于每个特定服务器的部分，使用以下内容：
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The next time we start phpMyAdmin, we will see the login panel as shown in
    the following screenshot:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 下次启动phpMyAdmin时，我们将看到如下截图所示的登录面板：
- en: '![Authenticating with cookie values](img/7782_02_01.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![使用cookie值进行身份验证](img/7782_02_01.jpg)'
- en: By default, phpMyAdmin displays (in the login panel) the last username for which
    a successful login was achieved for this particular server, as retrieved from
    the permanent cookie. If this behavior is not acceptable (someone else who logs
    in from the same workstation should not see the previous username), we can set
    the following parameter to `FALSE:`
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，phpMyAdmin在登录面板中显示上次成功登录到该特定服务器的用户名，从永久cookie中检索。如果这种行为不可接受（同一工作站上的其他用户不应该看到上一个用户名），我们可以将以下参数设置为`FALSE`：
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: There is a security feature to add a specific time limit for the validity of
    a password. This feature helps to protect the working session. After a successful
    login, our password is stored (encrypted) in a cookie, along with a timer. Every
    action in phpMyAdmin resets the timer. If we stay inactive for a certain number
    of seconds, as defined in `$cfg['LoginCookieValidity']`, we are disconnected and
    have to log in again. Increasing this parameter does not work in all cases, because
    PHP's own `session.gc_maxlifetime` directive can get in the way. Please refer
    to [http://php.net/manual/en/session.configuration.php](http://php.net/manual/en/session.configuration.php)
    for an explanation of this directive. Therefore, if phpMyAdmin detects that the
    value of `session.gc_maxlifetime` is less than the configured `$cfg['LoginCookieValidity']`,
    a warning is displayed on the main page. The default is 1440 seconds; this matches
    the `php.ini's` default value of the `session.gc_maxlifetime` parameter.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个安全功能，可以为密码的有效性添加特定的时间限制。这个功能有助于保护工作会话。成功登录后，我们的密码（加密）与计时器一起存储在cookie中。phpMyAdmin中的每个操作都会重置计时器。如果我们在一定数量的秒内保持不活动，就会被断开连接，必须重新登录，这个数量在`$cfg['LoginCookieValidity']`中定义。增加这个参数并不总是有效，因为PHP自己的`session.gc_maxlifetime`指令可能会有阻碍。请参考[http://php.net/manual/en/session.configuration.php](http://php.net/manual/en/session.configuration.php)来了解这个指令。因此，如果phpMyAdmin检测到`session.gc_maxlifetime`的值小于配置的`$cfg['LoginCookieValidity']`，则会在主页上显示警告。默认值为1440秒；这与`php.ini`中`session.gc_maxlifetime`参数的默认值相匹配。
- en: Note
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The Blowfish algorithm used to protect the username and password requires many
    computations. To achieve the best possible speed, the PHP's `mcrypt` extension
    and its accompanying library must be installed on our web server.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 用于保护用户名和密码的Blowfish算法需要进行许多计算。为了实现最佳速度，我们的Web服务器上必须安装PHP的`mcrypt`扩展及其相应的库。
- en: To help users realize that this extension is really important, a message is
    displayed on the main page when phpMyAdmin detects its absence. The `$cfg['McryptDisableWarning']`
    directive controls this message. By default, a value of `false` implies that the
    message is shown.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助用户意识到这个扩展是非常重要的，当phpMyAdmin检测到其缺失时，会在主页上显示一条消息。`$cfg['McryptDisableWarning']`指令控制这条消息。默认情况下，`false`的值意味着显示这条消息。
- en: Authenticating with signon mode
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用登录模式进行身份验证
- en: During the course of a working session, a user may encounter several requests
    to authenticate, from different web applications. The reason is these applications
    don't talk to each other and this situation inconveniences most users.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在工作会话期间，用户可能会遇到来自不同Web应用程序的多个身份验证请求。原因是这些应用程序之间不会相互通信，这种情况会给大多数用户带来不便。
- en: The `signon` mode enables us to use the credentials from another application
    to skip the authentication phase of phpMyAdmin. In order for this to work, this
    other application has to store the proper credentials into PHP's session data
    to be retrieved later by phpMyAdmin.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`signon`模式使我们能够使用另一个应用程序的凭据来跳过phpMyAdmin的身份验证阶段。为了使其工作，这个其他应用程序必须将正确的凭据存储到PHP的会话数据中，以便稍后由phpMyAdmin检索。'
- en: Note
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Storing credentials in PHP''s session is not guaranteed to be safe, according
    to the PHP manual: [http://php.net/manual/en/session.security.php](http://php.net/manual/en/session.security.php).'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 根据PHP手册，将凭据存储在PHP会话中并不一定安全：[http://php.net/manual/en/session.security.php](http://php.net/manual/en/session.security.php)。
- en: 'To enable this mode, we start with the following directive:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用这种模式，我们从以下指令开始：
- en: '[PRE5]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Let us suppose that the authenticating application has used a session named
    `FirstApp` to store the credentials. We tell this to phpMyAdmin by adding the
    following line of code:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 假设认证应用程序已经使用名为`FirstApp`的会话来存储凭据。我们通过添加以下代码行告诉phpMyAdmin：
- en: '[PRE6]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We must take care of users that would try to access phpMyAdmin before the other
    application; in this case, phpMyAdmin will redirect users to the authenticating
    application. This is done with:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须注意那些在其他应用程序之前尝试访问phpMyAdmin的用户；在这种情况下，phpMyAdmin将用户重定向到认证应用程序。这是通过以下方式完成的：
- en: '[PRE7]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'How does the authenticating application store credentials in a format that
    phpMyAdmin can understand? An example is included as `scripts/signon.php`. In
    this script, there is a simple HTML form to input the credentials and logic that
    initializes the session—we would use `FirstApp` as a session name, and create
    the user, password, host, and port information into this session, shown as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 认证应用程序如何以phpMyAdmin能够理解的格式存储凭据？一个示例包含在`scripts/signon.php`中。在这个脚本中，有一个简单的HTML表单来输入凭据和初始化会话的逻辑——我们将使用`FirstApp`作为会话名称，并将用户、密码、主机和端口信息创建到这个会话中，如下所示：
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that the authenticating first application does not need to ask the MySQL's
    credentials to the user. These could be hard coded inside the application, as
    they are secret or there is a known correspondence between the credentials of
    this application and that of MySQL's.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，认证的第一个应用程序不需要向用户询问MySQL的凭据。这些可以在应用程序内部硬编码，因为它们是机密的，或者这个应用程序的凭据与MySQL的凭据之间有已知的对应关系。
- en: To pass additional configuration parameters to the `signon` module, `$_SESSION['PMA_single_signon_cfgupdate']`
    can receive an array containing any additional server parameters that are permitted
    in `$cfg['Servers'][$i]`.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 要将附加的配置参数传递给`signon`模块，`$_SESSION['PMA_single_signon_cfgupdate']`可以接收一个包含在`$cfg['Servers'][$i]`中允许的任何附加服务器参数的数组。
- en: The authenticating application then uses a way of its choosing—a link or a button—to
    let its users start phpMyAdmin. If an error happens during the login (for example,
    a denied access), the `signon` module saves into `$_SESSION['PMA_single_signon_error_message']`
    the appropriate error message.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，认证应用程序使用自己选择的方式——链接或按钮——让其用户启动phpMyAdmin。如果在登录过程中发生错误（例如，拒绝访问），`signon`模块将适当的错误消息保存到`$_SESSION['PMA_single_signon_error_message']`中。
- en: In another example, `scripts/openid.php` shows how to log in using the popular
    OpenID mechanism.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一个示例中，`scripts/openid.php`展示了如何使用流行的OpenID机制进行登录。
- en: Configuring for multiple server support
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置多服务器支持
- en: The `config.inc.php` file contains at least one server-specific section; however,
    we can add more, enabling a single copy of phpMyAdmin to manage many MySQL servers.
    Let us see how to configure more servers.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`config.inc.php`文件至少包含一个特定服务器部分；但是，我们可以添加更多部分，使单个phpMyAdmin副本能够管理多个MySQL服务器。让我们看看如何配置更多服务器。'
- en: Defining servers in the configuration file
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在配置文件中定义服务器
- en: In the server-specific sections of the `config.inc.php` file, we see lines referring
    to `$cfg['Servers'][$i]` for each server. Here, the variable `$i` is used so that
    one can easily cut and paste whole sections of the configuration file to configure
    more servers. While copying such sections, we should take care that the `$i++`;
    instruction, which precedes each section and is crucial to delimit the server
    sections, is also copied.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在`config.inc.php`文件的特定服务器部分，我们看到了每个服务器的`$cfg['Servers'][$i]`的引用行。在这里，变量`$i`被使用，以便可以轻松地剪切和粘贴整个配置文件的部分来配置更多服务器。在复制这些部分时，我们应该注意复制`$i++`指令，这是在每个部分之前并且对于界定服务器部分至关重要的。
- en: 'Then, at the end of the sections, the following line controls the startup:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在各个部分的末尾，以下行控制启动：
- en: '[PRE9]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The default value, `1`, means that phpMyAdmin will use by default the first
    server defined. We can specify any number, for the corresponding server-specific
    section. We can also enter the value `0`, signifying no default server; in this
    case a list of available servers will be presented at login time.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 默认值`1`表示phpMyAdmin将默认使用第一个定义的服务器。我们可以指定任何数字，对应于特定服务器的部分。我们还可以输入值`0`，表示没有默认服务器；在这种情况下，登录时将呈现可用服务器的列表。
- en: This configuration can also be done via web-based setup. Given here is an example
    of a multi-server definition, with the default server being set to **let the user
    choose:**
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配置也可以通过基于web的设置来完成。这里给出了一个多服务器定义的示例，其中默认服务器设置为**让用户选择：**
- en: '![Defining servers in the configuration file](img/7782_02_02.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![在配置文件中定义服务器](img/7782_02_02.jpg)'
- en: 'With no default server defined, phpMyAdmin will present a server choice:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有定义默认服务器，phpMyAdmin将呈现服务器选择：
- en: '![Defining servers in the configuration file](img/7782_02_03.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![在配置文件中定义服务器](img/7782_02_03.jpg)'
- en: Authenticating through an arbitrary server
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过任意服务器进行身份验证
- en: 'Another mechanism can be used if we want to be able to connect to an undefined
    MySQL server. First, we have to set the following parameter:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要能够连接到未定义的MySQL服务器，可以使用另一种机制。首先，我们必须设置以下参数：
- en: '[PRE10]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: We also have to put back the default value of `1` into `$cfg['ServerDefault']`.
    Then, we need to use the `cookie` authentication type. We will be able to choose
    the server and enter a username and a password.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要将`$cfg['ServerDefault']`的默认值设置回`1`。然后，我们需要使用`cookie`认证类型。我们将能够选择服务器并输入用户名和密码。
- en: Note
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Allowing an arbitrary server implies that any MySQL server accessible from our
    web server could be connected to via phpMyAdmin. Therefore, this feature should
    be used in conjunction with a reinforced security mechanism (refer to the *Securing
    phpMyAdmin* section).
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 允许任意服务器意味着可以通过phpMyAdmin连接到我们的网页服务器可访问的任何MySQL服务器。因此，这个功能应该与加强的安全机制一起使用（参考*Securing
    phpMyAdmin*部分）。
- en: 'As seen here, we still can choose one of the defined servers in **Server Choice**.
    In addition, we can also enter an arbitrary server name, a username, and a password:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 正如在这里所看到的，我们仍然可以在**服务器选择**中选择一个已定义的服务器。此外，我们还可以输入一个任意的服务器名称、用户名和密码。
- en: '![Authenticating through an arbitrary server](img/7782_02_04.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![通过任意服务器进行身份验证](img/7782_02_04.jpg)'
- en: Logging out
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 登出
- en: 'A mechanism is available to tell phpMyAdmin which URL it should reach after
    a user has logged out. This feature eases integration with other applications
    and works for all authentication types that permit to log out. Here is an example:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个机制可以告诉phpMyAdmin用户注销后应该到达哪个URL。这个功能可以方便地与其他应用程序集成，并适用于所有允许注销的认证类型。这里是一个例子：
- en: '[PRE11]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This directive must contain an absolute URL, including the protocol.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这个指令必须包含一个绝对URL，包括协议。
- en: Securing phpMyAdmin
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护phpMyAdmin
- en: 'Security can be examined at the following various levels:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性可以在以下不同的级别进行检查：
- en: How we can protect the phpMyAdmin installation directory
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何保护phpMyAdmin安装目录
- en: Which workstations can access phpMyAdmin
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些工作站可以访问phpMyAdmin
- en: The databases that a legitimate user can see
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合法用户可以看到哪些数据库
- en: Protecting phpMyAdmin at directory level
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在目录级别保护phpMyAdmin
- en: Suppose an unauthorized person is trying to use our copy of phpMyAdmin. If we
    use the simple `config` authentication type, anyone knowing the URL of our phpMyAdmin
    will have the same effective rights to our data as we do. In this case, we should
    use the directory protection mechanism offered by our web server (for example,
    `.htaccess`, a file name with a leading dot) to add a level of protection. More
    details are available at [http://en.wikipedia.org/wiki/Basic_access_authentication](http://en.wikipedia.org/wiki/Basic_access_authentication).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 假设有人未经授权尝试使用我们的phpMyAdmin副本。如果我们使用简单的`config`认证类型，任何知道我们的phpMyAdmin URL的人都将具有与我们相同的数据访问权限。在这种情况下，我们应该使用网页服务器提供的目录保护机制（例如，`.htaccess`，以点开头的文件名）来增加一层保护。更多细节请参阅[http://en.wikipedia.org/wiki/Basic_access_authentication](http://en.wikipedia.org/wiki/Basic_access_authentication)。
- en: If we decide on using `http` or `cookie` authentication types, our data would
    be safe enough. However, we should take normal precautions with our password (including
    its periodic change).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们决定使用`http`或`cookie`身份验证类型，我们的数据将足够安全。但是，我们应该对密码采取正常的预防措施（包括定期更改密码）。
- en: The directory where phpMyAdmin is installed contains sensitive data. Not only
    the configuration file but also all scripts stored there must be protected from
    alteration. We should ensure that apart from us, only the web server effective
    user has read access to the files contained in this directory, and that only we
    can write to them.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: phpMyAdmin安装目录包含敏感数据。不仅配置文件，而且存储在那里的所有脚本都必须受到保护，以防止更改。我们应该确保除了我们之外，只有Web服务器有效用户可以读取该目录中包含的文件，并且只有我们可以对其进行写入。
- en: Note
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: phpMyAdmin's scripts never have to modify anything inside this directory, except
    when we use the **Save export file to server** feature (explained in [Chapter
    6)](ch06.html "Chapter 6. Exporting Structure and Data (Backup)").
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: phpMyAdmin的脚本永远不必修改此目录中的任何内容，除非我们使用**将导出文件保存到服务器**功能（在[第6章](ch06.html "第6章。导出结构和数据（备份）")中有解释）。
- en: Another recommendation is to rename the default `phpMyAdmin` directory to something
    less obvious; this discourages probing of our server. This is called security
    by obscurity and can be very effective—but avoid choosing other obvious names
    such as `admin`.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个建议是将默认的`phpMyAdmin`目录重命名为不太明显的名称；这可以阻止对我们服务器的探测。这被称为混淆安全，可以非常有效，但避免选择其他明显的名称，如`admin`。
- en: Another possible attack is from other developers having an account on the same
    web server as we do. In this kind of attack, someone can try to open our `config.inc.php`
    file. As this file is readable by the web server, someone could try to include
    our file from their PHP scripts. This is why it is recommended to use PHP's `open_basedir`
    feature, possibly applying it to all directories from which such attacks could
    originate. More details can be found at [http://php.net/manual/en/ini.core.php#ini.open-basedir](http://php.net/manual/en/ini.core.php#ini.open-basedir).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个可能的攻击来自与我们在同一Web服务器上拥有帐户的其他开发人员。在这种攻击中，某人可以尝试打开我们的`config.inc.php`文件。由于Web服务器可以读取此文件，因此某人可以尝试从其PHP脚本中包含我们的文件。这就是为什么建议使用PHP的`open_basedir`功能，可能将其应用于可能发起此类攻击的所有目录。更多细节可以在[http://php.net/manual/en/ini.core.php#ini.open-basedir](http://php.net/manual/en/ini.core.php#ini.open-basedir)找到。
- en: Displaying error messages
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 显示错误消息
- en: 'phpMyAdmin uses the PHP''s custom error-handler mechanism. One of the benefits
    of this error handler is to avoid path disclosure, which is considered a security
    weakness. The default settings related to this are:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: phpMyAdmin使用PHP的自定义错误处理机制。这个错误处理程序的好处之一是避免路径泄露，这被认为是一种安全弱点。与此相关的默认设置是：
- en: '[PRE12]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You should let the default value for display be `false`, unless you are developing
    a new phpMyAdmin feature and want to see all PHP errors and warnings.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 除非您正在开发新的phpMyAdmin功能并希望看到所有PHP错误和警告，否则应该让显示的默认值为`false`。
- en: Protecting with IP-based access control
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用基于IP的访问控制进行保护
- en: An additional level of protection can be implemented, this time verifying the
    **Internet Protocol (IP)** address of the machine from which the request is received.
    To achieve this level of protection, we construct rules allowing or denying access,
    and specify the order in which these rules will be applied.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 可以实施额外的保护级别，这次验证接收请求的机器的**Internet Protocol (IP)**地址。为了实现这种保护级别，我们构建允许或拒绝访问的规则，并指定这些规则将被应用的顺序。
- en: Defining rules
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义规则
- en: 'The format of a rule is:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 规则的格式是：
- en: '[PRE13]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The `from` keyword being optional; here are some examples:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`from`关键字是可选的；以下是一些示例：'
- en: '| Rule | Description |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| 规则 | 描述 |'
- en: '| --- | --- |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `allow Bob from 1.2.3/24` | User `Bob` is allowed from any address matching
    the network `1.2.3` (this is CIDR IP matching, more details at [http://en.wikipedia.org/wiki/CIDR_notation)](http://en.wikipedia.org/wiki/CIDR_notation)).
    |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| `allow Bob from 1.2.3/24` | 用户`Bob`允许从匹配网络`1.2.3`的任何地址访问（这是CIDR IP匹配，更多细节请参见[http://en.wikipedia.org/wiki/CIDR_notation)](http://en.wikipedia.org/wiki/CIDR_notation)）。
    |'
- en: '| `deny Alice from 4.5/16` | User `Alice` cannot access when located on network
    `4.5`. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| `deny Alice from 4.5/16` | 当用户`Alice`位于网络`4.5`时，无法访问。 |'
- en: '| `allow Melanie from all` | User `Melanie` can log in from anywhere. |'
  id: totrans-123
  prefs: []
  type: TYPE_TB
  zh: '| `allow Melanie from all` | 用户`Melanie`可以从任何地方登录。 |'
- en: '| `deny % from all` | `all` can be used as an equivalent to `0.0.0.0/0`, meaning
    any host. Here, the `%` sign means any user. |'
  id: totrans-124
  prefs: []
  type: TYPE_TB
  zh: '| `deny % from all` | `all`可以等同于`0.0.0.0/0`，表示任何主机。在这里，`%`符号表示任何用户。 |'
- en: 'Usually we will have several rules. Let us say we wish to have the following
    two rules:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 通常我们会有几个规则。假设我们希望有以下两个规则：
- en: '[PRE14]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'We have to put them in `config.inc.php` (in the related server-specific section)
    as follows:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须将它们放在`config.inc.php`（在相关的特定服务器部分）中，如下所示：
- en: '[PRE15]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: When defining a single rule or multiple rules, a PHP array is used. We must
    follow its syntax, enclosing each complete rule within single quotes and separating
    each rule from the next with a comma. Thus, if we have only one rule, we must
    still use an array to specify it. The next parameter explains the order in which
    rules are interpreted.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义单个规则或多个规则时，使用PHP数组。我们必须遵循其语法，将每个完整规则括在单引号中，并用逗号分隔每个规则。因此，如果我们只有一个规则，仍然必须使用数组来指定它。下一个参数解释了规则解释的顺序。
- en: Order of interpretation for rules
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 规则解释的顺序
- en: 'By default, this parameter is empty:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，此参数为空：
- en: '[PRE16]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This means that no IP-based verification is made.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着不进行基于IP的验证。
- en: 'Suppose we want to allow access by default, denying access only to some username/IP
    pairs, we should use:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们希望默认情况下允许访问，只拒绝对某些用户名/IP对的访问，我们应该使用：
- en: '[PRE17]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'In this case, all `deny` rules will be applied first, followed by `allow` rules.
    If a case is not mentioned in the rules, access is granted. Being more restrictive,
    we would want to deny by default. We can use:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，所有`deny`规则将首先应用，然后是`allow`规则。如果规则中没有提到的情况，将允许访问。为了更加严格，我们希望默认情况下拒绝。我们可以使用：
- en: '[PRE18]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'This time, all `allow` rules are applied first, followed by `deny` rules. If
    a case is not mentioned in the rules, access is denied. The third (and most restrictive)
    way of specifying rules order is:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，所有“allow”规则首先应用，然后是“deny”规则。如果规则中没有提到的情况，访问将被拒绝。指定规则顺序的第三种（也是最严格的）方式是：
- en: '[PRE19]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Now, `deny` rules are applied before `allow` rules. A username/IP address pair
    must be listed in the `allow` rules and must not be listed in the `deny` rules,
    for access to be granted.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，“deny”规则会在“allow”规则之前应用。用户名/IP地址对必须在“allow”规则中列出，并且不能在“deny”规则中列出，才能获得访问权限。
- en: Blocking root access
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阻止root访问
- en: 'As the `root` user is present in almost all MySQL installations, it''s often
    the target of attacks. A parameter permits us to easily block all phpMyAdmin logins
    of the MySQL''s `root` account, using the following:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 由于“root”用户几乎存在于所有的MySQL安装中，因此经常成为攻击目标。一个参数允许我们轻松地阻止MySQL的“root”账户的所有phpMyAdmin登录，使用以下设置：
- en: '[PRE20]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Some system administrators prefer to disable the `root` account at the MySQL
    server level, creating another less obvious account possessing the same privileges.
    This has the advantage of blocking `root` access from all sources, not just from
    phpMyAdmin.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 一些系统管理员更喜欢在MySQL服务器级别禁用“root”账户，创建另一个不太明显的账户，拥有相同的权限。这样做的好处是阻止了来自所有来源的“root”访问，而不仅仅是来自phpMyAdmin。
- en: Protecting in-transit data
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保护传输中的数据
- en: HTTP is not inherently immune to network sniffing (grabbing sensitive data off
    the wire). So, if we want to protect not only our username and password but all
    the data that travels between our web server and browser, then we have to use
    HTTPS.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: HTTP本身并不免疫网络嗅探（从传输中获取敏感数据）。因此，如果我们不仅想保护用户名和密码，而且想保护在Web服务器和浏览器之间传输的所有数据，那么我们必须使用HTTPS。
- en: 'To do so, assuming that our web server supports HTTPS, we just have to start
    phpMyAdmin by putting `https` instead of `http` in the URL as follows:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，假设我们的Web服务器支持HTTPS，我们只需在URL中使用“https”而不是“http”来启动phpMyAdmin，如下所示：
- en: '[PRE21]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'If we are using `PmaAbsoluteUri` auto-detection, shown as follows:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们正在使用“PmaAbsoluteUri”自动检测，如下所示：
- en: '[PRE22]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: phpMyAdmin will see that we are using HTTPS in the URL and react accordingly.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: phpMyAdmin将看到我们在URL中使用了HTTPS，并做出相应的反应。
- en: 'If not, we must put the `https` part in this parameter as follows:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有，我们必须按照以下方式在此参数中加入“https”部分：
- en: '[PRE23]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We can automatically switch users to an HTTPS connection with the following
    setting:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过以下设置自动将用户切换到HTTPS连接：
- en: '[PRE24]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Summary
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter gave us an overview of how to use a single copy of phpMyAdmin to
    manage multiple servers, and also of using authentication types to fulfill the
    needs of a users' group while protecting authentication credentials. The chapter
    also covered the ways of securing our phpMyAdmin installation.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 本章概述了如何使用单个副本的phpMyAdmin来管理多个服务器，以及使用认证类型来满足用户组的需求，同时保护认证凭据。本章还涵盖了保护我们的phpMyAdmin安装的方法。
- en: In the next chapter, we will have a look at all the panels and windows that
    comprise the user interface of phpMyAdmin.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看一下phpMyAdmin用户界面中包括的所有面板和窗口。
