- en: Chapter 4. Creating and Browsing Tables
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章。创建和浏览表
- en: Having seen the overall layout of phpMyAdmin, we are ready to create a database,
    create our first table, insert some data into it, and browse it. These first steps
    are intentionally simple, but they will give you the foundation on which more
    complex operations will be achieved later. At the end of the chapter, we will
    have at our disposal the two basic tables on which the remaining exercises are
    based.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在看到了phpMyAdmin的整体布局之后，我们准备创建一个数据库，创建我们的第一个表，向其中插入一些数据，并浏览它。这些第一步是故意简单的，但它们将为您提供更复杂操作的基础。在本章结束时，我们将拥有两个基本表，这是后续练习的基础。
- en: Creating a database
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建数据库
- en: 'Before creating a table, we must ensure that we have a database for which the
    MySQL server''s administrator has given us the `CREATE` privilege. The following
    possibilities exist:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建表之前，我们必须确保我们有一个数据库，MySQL服务器的管理员已经给了我们`CREATE`权限。存在以下可能性：
- en: The administrator has already created a database for us, and we see its name
    in the navigation panel; we don't have the right to create an additional database.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理员已经为我们创建了一个数据库，并且我们在导航面板中看到了它的名称；我们没有权利创建额外的数据库。
- en: We have the right to create databases from phpMyAdmin.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们有权从phpMyAdmin创建数据库。
- en: We are on a shared host, and the host provider has installed a general web interface
    (for example, cPanel) to create MySQL databases and accounts; in this case, we
    should visit this web interface now and ensure we have created at least one database
    and one MySQL account.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在一个共享主机上，主机提供商已经安装了一个通用的网络界面（例如cPanel）来创建MySQL数据库和账户；在这种情况下，我们现在应该访问这个网络界面，确保我们至少创建了一个数据库和一个MySQL账户。
- en: The **Databases** panel in `Server` view is the place to go to find the database
    creation dialog. Note that a configuration parameter, `$cfg['ShowCreateDb']`,
    controls the display of the **Create new database** dialog. By default, it is
    set to `true`, which shows the dialog.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`Server`视图中的**数据库**面板是查找数据库创建对话框的地方。请注意，配置参数`$cfg[''ShowCreateDb'']`控制**创建新数据库**对话框的显示。默认情况下，它设置为`true`，显示对话框。'
- en: No privileges
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无权限
- en: If you do not have the privilege to create a database, the panel displays a
    **No privileges** message under the **Create new database** label. This means
    that you must work with the databases already created for you, or ask the MySQL
    server's administrator to give you the necessary `CREATE` privilege.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有创建数据库的权限，面板在**创建新数据库**标签下显示**无权限**消息。这意味着您必须使用已为您创建的数据库，或者要求MySQL服务器的管理员给您必要的`CREATE`权限。
- en: Note
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you are the MySQL server's administrator, refer to [Chapter 19](ch19.html
    "Chapter 19. Administrating the MySQL Server").
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是MySQL服务器的管理员，请参阅[第19章](ch19.html "第19章。管理MySQL服务器")。
- en: First database creation is authorized
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第一个数据库创建已被授权
- en: 'If phpMyAdmin detects that we have the right to create a database, the dialog
    appears as shown in the following screenshot:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果phpMyAdmin检测到我们有权创建数据库，则对话框将显示如下截图所示：
- en: '![First database creation is authorized](img/7782_04_01.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![第一个数据库创建已被授权](img/7782_04_01.jpg)'
- en: In the input field, a suggested database name appears if the `$cfg['SuggestDBName']`
    parameter is set to `TRUE`, which is the default setting. The suggested database
    name is built according to the privileges we possess.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在输入字段中，如果`$cfg['SuggestDBName']`参数设置为`TRUE`，则会出现建议的数据库名称，这是默认设置。建议的数据库名称是根据我们拥有的权限构建的。
- en: If we are restricted to the use of a prefix, the prefix might be suggested in
    the input field. (A popular choice for this prefix is the username, which might
    or might not be followed by an underscore character.) Note that, in this case,
    the prefix is followed by an ellipsis mark, added by phpMyAdmin. We should remove
    this ellipsis mark and complete the input field with an appropriate name.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们受限于使用前缀，前缀可能会在输入字段中建议。在这种情况下，前缀后面可能会跟着一个省略号，由phpMyAdmin添加。我们应该删除这个省略号，并用适当的名称完成输入字段。
- en: '![First database creation is authorized](img/7782_04_02.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![第一个数据库创建已被授权](img/7782_04_02.jpg)'
- en: The **Collation** choice can be left unchanged for now. With this dialog, we
    could pick a default character set and collation for this database. This setting
    can be changed later (refer to [Chapter 9](ch09.html "Chapter 9. Performing Table
    and Database Operations") for more information on this).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**排序**选择现在可以保持不变。通过这个对话框，我们可以为这个数据库选择一个默认的字符集和排序规则。这个设置可以稍后更改（参考[第9章](ch09.html
    "第9章。执行表和数据库操作")了解更多信息）。'
- en: 'We will assume here that we have the right to create a database named **marc_book**.
    We enter **marc_book** in the input field and click on **Create**. Once the database
    has been created, we will see the following screen:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设我们有权创建一个名为**marc_book**的数据库。我们在输入字段中输入**marc_book**并点击**创建**。一旦数据库创建完成，我们将看到以下屏幕：
- en: '![First database creation is authorized](img/7782_04_03.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![第一个数据库创建已被授权](img/7782_04_03.jpg)'
- en: 'Notice the following:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意以下内容：
- en: The title of the main panel has changed to reflect the fact that we are now
    located in this database
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主面板的标题已经更改，以反映我们现在位于这个数据库中
- en: A confirmation message regarding the creation is displayed
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示有关创建的确认消息
- en: The navigation panel has been updated; we see **marc_book**
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导航面板已更新；我们看到**marc_book**
- en: By default, the SQL query sent to the server by phpMyAdmin to create the database
    is displayed in color
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，phpMyAdmin向服务器发送的用于创建数据库的SQL查询以彩色显示
- en: Note
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: phpMyAdmin displays the query it generated, because `$cfg['ShowSQL']` is set
    to `TRUE`. Looking at the generated queries can be a good way of learning SQL.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: phpMyAdmin显示它生成的查询，因为`$cfg['ShowSQL']`设置为`TRUE`。查看生成的查询可以是学习SQL的好方法。
- en: As the generated queries could be large and take much of the on-screen room,
    the `$cfg['MaxCharactersInDisplayedSQL']` acts as a limit. Its default value of
    `1000` should be a good balance between seeing too few and seeing too many of
    the queries, especially when doing large imports.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 由于生成的查询可能很大并且占用屏幕空间很多，`$cfg['MaxCharactersInDisplayedSQL']`充当一个限制。其默认值为`1000`应该是在查看查询时看到太少或太多查询之间的一个良好平衡，特别是在进行大量导入时。
- en: It is important to examine the phpMyAdmin feedback to ascertain the validity
    of the operations we make through the interface. This way, we can detect errors
    like typos in the names, or creation of a table in the wrong database. phpMyAdmin
    retrieves error messages from the MySQL server and displays them on the interface.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 检查phpMyAdmin的反馈以确定我们通过界面进行的操作的有效性是很重要的。这样，我们可以检测到错误，比如名称中的拼写错误，或者在错误的数据库中创建表。phpMyAdmin从MySQL服务器检索错误消息并在界面上显示它们。
- en: Creating our first table
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建我们的第一个表
- en: Now that we have a new database, it's time to create a table in it. The example
    table we will create is named **book**.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了一个新的数据库，是时候在其中创建一个表了。我们将创建的示例表名为**book**。
- en: Choosing the columns
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择列
- en: 'Before creating a table, we should plan the information we want to store. This
    is usually done during database design. In our case, a simple analysis leads us
    to the following book-related data we want to keep:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建表之前，我们应该计划我们想要存储的信息。这通常是在数据库设计期间完成的。在我们的情况下，简单的分析导致我们想要保留以下与书籍相关的数据：
- en: International Standard Book Number (ISBN)
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 国际标准图书编号（ISBN）
- en: Title
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标题
- en: Number of pages
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页数
- en: Author identification
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作者识别
- en: For now, it is not important to have the complete list of columns for our **book**
    table. We will modify it by prototyping the structure now and refining it later.
    At the end of the chapter, we will add a second table, `author`, containing information
    about each author.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，对于我们的**book**表来说，拥有完整的列列表并不重要。我们将通过原型设计结构，然后稍后进行修改。在本章结束时，我们将添加第二个表`author`，其中包含有关每个作者的信息。
- en: Creating a table
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建表
- en: We have chosen our table name and we know the number of columns. We enter this
    information in the **Create table** dialog and click on **Go** to start creating
    the table. At this point, it does not matter if the number of columns is exactly
    known, as a subsequent panel will permit us to add columns while creating the
    table.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经选择了我们的表名，并且知道了列的数量。我们在“创建表”对话框中输入这些信息，然后点击“Go”开始创建表。此时，列的数量是否完全知道并不重要，因为后续的面板将允许我们在创建表时添加列。
- en: '![Creating a table](img/7782_04_04.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![创建表](img/7782_04_04.jpg)'
- en: 'We then see a panel specifying column information. As we asked for four columns,
    we get four input rows. Each row refers to information specific to one column.
    The following screenshot represents the left side of this panel:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们看到一个指定列信息的面板。因为我们要求四列，所以我们得到了四个输入行。每一行都指的是一个特定列的信息。下面的屏幕截图代表了这个面板的左侧：
- en: '![Creating a table](img/7782_04_05.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![创建表](img/7782_04_05.jpg)'
- en: 'And the next one represents the right side:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的内容代表右侧：
- en: '![Creating a table](img/7782_04_06.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![创建表](img/7782_04_06.jpg)'
- en: The MySQL documentation explains valid characters for the table and column names
    (if we search for "Legal names"). This may vary depending on the MySQL version.
    Usually, any character that is allowed in a file name (except the dot and the
    slash) is acceptable in a table name, and the length of the name must not exceed
    64 characters. The 64-character limit exists for column names as well, but we
    can use any character.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL文档解释了表和列名的有效字符（如果我们搜索“合法名称”）。这可能会根据MySQL版本而有所不同。通常，文件名中允许的任何字符（除了点和斜杠）在表名中都是可以接受的，名称的长度不能超过64个字符。列名也存在64个字符的限制，但我们可以使用任何字符。
- en: We enter our column names under the **Column** column. Each column has a type,
    and the most commonly used types are located at the beginning of the drop-down
    list.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在“列”列下输入我们的列名。每个列都有一个类型，最常用的类型位于下拉列表的开头。
- en: 'The **VARCHAR** (variable character) type is widely used when the column content
    is alphanumeric, because the contents will occupy only the space needed for it.
    This type requires a maximum length, which we specify. If we forget to do so,
    a small pop-up message reminds us later when we save. For the page count and the
    author identification, we have chosen **INT** type (integer), as depicted in the
    following screenshot:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 当列的内容是字母数字时，**VARCHAR**（可变字符）类型被广泛使用，因为内容只会占用所需的空间。这种类型需要一个最大长度，我们需要指定。如果忘记这样做，当我们保存时会有一个小弹出消息提醒我们。对于页面计数和作者识别，我们选择了**INT**类型（整数），如下面的屏幕截图所示：
- en: '![Creating a table](img/7782_04_07.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![创建表](img/7782_04_07.jpg)'
- en: There are other attributes for columns, but we will leave them empty in this
    example. You might notice the **Add 1 column(s)** dialog at the bottom of the
    screen. We can use it to add some columns to this table-creation panel by entering
    the appropriate value and hitting **Go**. The number of input rows would change
    according to the new number of columns, leaving intact the information already
    entered about the first four columns. Before saving the page, let us define some
    keys.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 列还有其他属性，但在这个例子中我们将它们留空。您可能会注意到屏幕底部的“添加1列”对话框。我们可以使用它通过输入适当的值并点击“Go”来向这个创建表面板添加一些列。输入行的数量会根据新的列数而改变，但已经输入的关于前四列的信息不变。在保存页面之前，让我们定义一些键。
- en: Choosing keys
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择键
- en: A table should normally have a primary key (a column with unique content that
    represents each row). Having a primary key is recommended for row identification,
    better performance, and possible cross-table relations. A good value here is the
    ISBN; so, in the **Index** dialog we select **PRIMARY** for the **isbn** column.
    Other possibilities for index type include **INDEX, UNIQUE**, and **FULLTEXT**
    (more on this in [Chapter 5)](ch05.html "Chapter 5. Changing Data and Structure").
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 表通常应该有一个主键（具有唯一内容的列，代表每一行）。拥有主键对于行标识、更好的性能和可能的跨表关系是推荐的。在这里一个很好的值是ISBN；因此，在**索引**对话框中，我们选择**PRIMARY**作为**isbn**列的索引类型。索引类型的其他可能性包括**INDEX,
    UNIQUE**和**FULLTEXT**（在[第5章](ch05.html "第5章。更改数据和结构")中有更多关于此的内容）。
- en: Note
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Index management** (also referred to as Key management) can be done at initial
    table creation, or later in the **Structure** page of `Table` view.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**索引管理**（也称为键管理）可以在初始表创建时进行，也可以在`Table`视图的**结构**页面中进行。'
- en: 'To improve the speed of the queries that we will make by **author_id**, we
    should add an index on this column. The right part of our screen now looks as
    shown in the following screenshot:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高我们将通过**author_id**进行的查询的速度，我们应该在该列上添加一个索引。我们屏幕右侧现在的样子如下截图所示：
- en: '![Choosing keys](img/7782_04_08.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![选择键](img/7782_04_08.jpg)'
- en: At this point, we could pick a different **Storage Engine** from the corresponding
    drop-down menu. However, for the time being, we will just accept the default storage
    engine.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们可以从相应的下拉菜单中选择不同的**存储引擎**。但是，目前我们将接受默认的存储引擎。
- en: Now we are ready to create the table by clicking on **Save**. If all goes well,
    the next screen confirms that the table has been created; we are now in the **Structure**
    page of the current database.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们点击**保存**来创建表。如果一切顺利，下一个屏幕将确认表已创建；我们现在位于当前数据库的**结构**页面。
- en: '![Choosing keys](img/7782_04_09.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![选择键](img/7782_04_09.jpg)'
- en: Of the various links shown for the **book** table, some are not active, because
    it would not make sense to browse or search a table if there are no rows in it.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在**book**表的各种链接中，有些是不活跃的，因为如果其中没有行，则浏览或搜索表是没有意义的。
- en: Inserting data manually
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手动插入数据
- en: 'Now that we have a table, let us put some data in it manually. Before we do
    that, here are some useful references on data manipulation within this book:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们有了一张表，让我们手动在其中插入一些数据。在这样做之前，这本书中有一些有用的关于数据操作的参考资料：
- en: '[Chapter 5](ch05.html "Chapter 5. Changing Data and Structure") explains how
    to change data and structure, including how to use the **Function** selector'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第5章介绍了如何更改数据和结构，包括如何使用**Function**选择器
- en: '[Chapter 7](ch07.html "Chapter 7. Importing Structure and Data") explains how
    to import data from existing files'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章。导入结构和数据")解释了如何从现有文件导入数据'
- en: '[Chapter 9](ch09.html "Chapter 9. Performing Table and Database Operations")
    explains how to copy data from other tables'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章。执行表和数据库操作")解释了如何从其他表复制数据'
- en: '[Chapter 10](ch10.html "Chapter 10. Benefiting from the Relational System")
    explains the relational system (in our case, we will want to link to the `author`
    table)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第10章介绍了关系系统（在我们的情况下，我们将要链接到`author`表）
- en: For now, click on the **Insert** link, which will lead us to the data-entry
    (or edit) panel. This screen has room to enter information for two rows, that
    is, two books in our example. This is because the default value of `$cfg['InsertRows']`
    is `2`. In the lower part of the screen, the dialog **Continue insertion with
    2 rows** can be used if the default number of rows does not suit our needs. By
    default, the **Ignore** checkbox is ticked, which means that the second group
    of input fields will be ignored. As soon as we enter some information in one field
    of this group and exit the field, the **Ignore** box is automatically unchecked
    if JavaScript is enabled in the browser.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，点击**插入**链接，这将带我们进入数据输入（或编辑）面板。该屏幕有空间可以输入两行信息，也就是说，在我们的示例中有两本书。这是因为`$cfg['InsertRows']`的默认值是`2`。在屏幕的下部，如果默认的行数不适合我们的需求，可以使用对话框**继续插入2行**。默认情况下，**忽略**复选框被选中，这意味着第二组输入字段将被忽略。一旦我们在该组的一个字段中输入一些信息并退出该字段，如果浏览器中启用了JavaScript，则**忽略**框将自动取消选中。
- en: 'We can enter the following sample information for two books:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以为两本书输入以下示例信息：
- en: 'ISBN: 1-234567-89-0, title: A hundred years of cinema (volume 1), 600 pages,
    author ID: 1'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ISBN：1-234567-89-0，标题：一百年的电影（第1卷），600页，作者ID：1
- en: 'ISBN: 1-234567-22-0, title: Future souvenirs, 200 pages, author ID: 2'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ISBN：1-234567-22-0，标题：未来的纪念品，200页，作者ID：2
- en: The **Value** column width obeys the maximum length for the character columns.
    For this example, we keep the lower drop-down selector to its default value of
    **Insert as new row**. We then click on **Go** to insert the data. There is a
    **Go** button after each set of columns that represent a row, and another one
    on the lower part of the screen. All these have the same effect of saving the
    entered data but are provided for convenience.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**值**列的宽度遵循字符列的最大长度。在这个例子中，我们将较低的下拉选择器保持为**插入为新行**的默认值。然后，我们点击**Go**来插入数据。在每组代表一行的列后面都有一个**Go**按钮，屏幕的下部也有一个。所有这些都有相同的效果，即保存输入的数据，但为了方便起见提供了这些按钮。'
- en: '![Inserting data manually](img/7782_04_10.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![手动插入数据](img/7782_04_10.jpg)'
- en: If our intention had been to enter data for more books after these two, we would
    have selected **Insert another new row** from the second drop-down before clicking
    on **Go**. This would then insert the data we have provided and reload the screen
    to insert more.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的意图是在这两本书之后输入更多书的数据，我们将在点击**Go**之前从第二个下拉菜单中选择**插入另一行**。然后这将插入我们提供的数据并重新加载屏幕以插入更多数据。
- en: Data entry panel tuning for CHAR and VARCHAR
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CHAR和VARCHAR的数据输入面板调整
- en: 'By default, phpMyAdmin displays an input field on a single line for the column
    types `CHAR` and `VARCHAR`. This is controlled by setting `$cfg[''CharEditing'']`
    to`''input''`. Sometimes, we may want to insert line breaks (new lines) within
    the field. This can be done by setting `$cfg[''CharEditing'']` to`''textarea''`.
    This is a global setting, and will apply to all the columns of all the tables,
    for all users of this copy of phpMyAdmin. In this mode, insertion of line breaks
    may be done manually with the *Enter* key, or by copying and pasting lines of
    text from another on-screen source. Applying this setting would generate a different
    **Insert** screen, shown as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，phpMyAdmin为`CHAR`和`VARCHAR`列类型显示单行输入字段。通过将`$cfg['CharEditing']`设置为`'input'`来控制。有时，我们可能希望在字段内插入换行符（新行）。这可以通过将`$cfg['CharEditing']`设置为`'textarea'`来实现。这是一个全局设置，将适用于此副本的所有用户的所有表的所有列。在此模式下，可以通过*Enter*键手动插入换行符，或者通过从屏幕上的其他源复制和粘贴文本行来完成。应用此设置将生成不同的**插入**屏幕，如下所示：
- en: '![Data entry panel tuning for CHAR and VARCHAR](img/7782_04_11.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![CHAR和VARCHAR的数据输入面板调整](img/7782_04_11.jpg)'
- en: With this entry mode, the maximum length of each column no longer applies visually.
    It would be enforced by MySQL at insert time.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此输入模式，每个列的最大长度在视觉上不再适用。它将在插入时由MySQL强制执行。
- en: Browse mode
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 浏览模式
- en: There are many ways to enter this mode. In fact, it is used each time the query
    results are displayed. We can enter this mode by clicking on the table name on
    the navigation panel, or by clicking **Browse** when we are in `Table` view for
    a specific table.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多种方式可以进入这种模式。实际上，每次显示查询结果时都会使用这种模式。我们可以通过在导航面板上点击表名，或者在特定表的`表`视图中点击**浏览**来进入这种模式。
- en: '![Browse mode](img/7782_04_12.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![浏览模式](img/7782_04_12.jpg)'
- en: SQL query links
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SQL查询链接
- en: In the **Browse** results, the first part displayed is the query itself, along
    with a few links. The displayed links may vary depending on our actions and some
    configuration parameters.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在**浏览**结果中，显示的第一部分是查询本身，以及一些链接。显示的链接可能会根据我们的操作和一些配置参数而有所不同。
- en: '![SQL query links](img/7782_04_13.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![SQL查询链接](img/7782_04_13.jpg)'
- en: 'The following points describe the function of each link:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 以下几点描述了每个链接的功能：
- en: The **Profiling** checkbox is covered in the *Profiling queries* section of
    this chapter.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分析**复选框在本章的*分析查询*部分中有详细介绍。'
- en: The **Inline** link permits to put the query inside a text area without reloading
    the page; then the query may be edited and the new query may be executed.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内联**链接允许将查询放入文本区域，而无需重新加载页面；然后可以编辑查询并执行新的查询。'
- en: The **Edit** link appears if `$cfg['SQLQuery']['Edit']` is set to `TRUE`. Its
    purpose is to open the **Query window** so that you can edit this query (refer
    to [Chapter 11](ch11.html "Chapter 11. Entering SQL Statements") for more details).
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果将`$cfg['SQLQuery']['Edit']`设置为`TRUE`，则会显示**编辑**链接。其目的是打开**查询窗口**，以便编辑此查询（有关详细信息，请参阅[第11章](ch11.html
    "第11章。输入SQL语句")）。
- en: '**Explain SQL** is displayed if `$cfg[''SQLQuery''][''Explain'']` is set to
    `TRUE`. We will see in [Chapter 5](ch05.html "Chapter 5. Changing Data and Structure")
    what this link can be used for.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '如果将`$cfg[''SQLQuery''][''Explain'']`设置为`TRUE`，则会显示**解释SQL**。我们将在[第5章](ch05.html
    "第5章。更改数据和结构")中看到此链接可以用于什么。 '
- en: The **Create PHP Code** link can be clicked to reformat the query to the syntax
    expected in a PHP script. It can then be copied and pasted directly at the place
    where we need the query in the PHP script we are working on. Note that after a
    click, this link changes to **Without PHP Code** (as shown in the following screenshot),
    which would bring back the normal query display. This link is available if `$cfg['SQLQuery']['ShowAsPHP']`
    is set to `TRUE`.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以点击**创建PHP代码**链接，将查询重新格式化为PHP脚本中预期的语法。然后可以直接复制并粘贴到我们正在工作的PHP脚本中需要查询的地方。请注意，点击后，此链接会更改为**无PHP代码**（如下截图所示），这将恢复正常的查询显示。如果将`$cfg['SQLQuery']['ShowAsPHP']`设置为`TRUE`，则此链接可用。
- en: '![SQL query links](img/7782_04_14.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![SQL查询链接](img/7782_04_14.jpg)'
- en: '**Refresh** is used to execute the same query again. The results might change,
    as a MySQL server is a multi-user server, and other users or processes might be
    modifying the same tables. This link is shown if `$cfg[''SQLQuery''][''Refresh'']`
    is set to `TRUE`.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**刷新**用于再次执行相同的查询。结果可能会发生变化，因为MySQL服务器是多用户服务器，其他用户或进程可能正在修改相同的表。如果将`$cfg[''SQLQuery''][''Refresh'']`设置为`TRUE`，则会显示此链接。'
- en: Navigation bar
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导航栏
- en: The Navigation bar is displayed at the top of results and also at the bottom.
    Column headers can be repeated at certain intervals among results depending on
    the value entered in **repeat headers after** field.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 导航栏显示在结果的顶部和底部。根据**重复标题后**字段中输入的值，列标题可以在结果中的某些间隔中重复显示。
- en: '![Navigation bar](img/7782_04_15.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![导航栏](img/7782_04_15.jpg)'
- en: The bar enables us to navigate from page to page, displaying an arbitrary number
    of rows, starting at some point in the results. As we entered browse mode by clicking
    **Browse**, the underlying query that generated the results includes the whole
    table. However, this is not always the case.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 该栏使我们能够从一页导航到另一页，显示任意数量的行，从结果的某一点开始。通过点击**浏览**进入浏览模式，生成结果的基础查询包括整个表。但是，情况并非总是如此。
- en: 'We are currently using a table containing a small number of rows. With larger
    tables, we could see a more complete set of navigation buttons. To simulate this,
    let us use the **Show** dialog to change the default number of rows from **30**
    to **1**; we then click on **Show**. We can see that the navigation bar adapts
    itself as shown in the following screenshot:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们目前正在使用包含少量行的表。对于更大的表，我们可能会看到更完整的导航按钮集。为了模拟这种情况，让我们使用**显示**对话框将默认行数从**30**更改为**1**；然后点击**显示**。我们可以看到导航栏会自适应，如下截图所示：
- en: '![Navigation bar](img/7782_04_16.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![导航栏](img/7782_04_16.jpg)'
- en: This time, there are buttons labeled**<<, <, >**, and**>>** for easy access
    to the first page, previous page, next page, and the last page of the results
    respectively. The buttons appear only when necessary; for example, the **first
    page** button is not displayed if we already are on the first page. These symbols
    are displayed in this manner as the default setting of `$cfg['NavigationBarIconic']`
    is `TRUE`. A `FALSE` here would produce buttons such as **Next** and **End**,
    whereas a value of`'both'` would display**> Next** and**>> End**.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次，有标有**<<, <, >**和**>>**的按钮，用于方便地访问结果的第一页、上一页、下一页和最后一页。这些按钮仅在必要时显示；例如，如果我们已经在第一页上，则不会显示**第一页**按钮。这些符号以这种方式显示，因为`$cfg['NavigationBarIconic']`的默认设置为`TRUE`。在这里的`FALSE`会产生诸如**下一页**和**结束**的按钮，而`'both'`的值会显示**>
    下一页**和**>> 结束**。
- en: Note
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that the `$cfg['NavigationBarIconic']` directive controls only the behavior
    of these navigation buttons; other buttons and links such as **Edit** are controlled
    by other configuration directives.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`$cfg['NavigationBarIconic']`指令仅控制这些导航按钮的行为；其他按钮和链接（如**编辑**）由其他配置指令控制。
- en: 'There is also a **Page number** drop-down menu, to go directly to one of the
    pages located near the current page. As there can be hundreds or thousands of
    pages, this menu is kept small and contains the commonly requested pages: a few
    page numbers before and after the current page, a few pages at the beginning and
    at the end plus a sample of page numbers based on a computed interval.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个**页码**下拉菜单，可以直接转到靠近当前页的页面之一。由于可能有数百或数千页，因此该菜单保持较小，并包含常请求的页面：当前页面前后的几页，开头和结尾的几页，以及基于计算间隔的页面编号示例。
- en: By design, phpMyAdmin always tries to give quick results, and one way to achieve
    this result is to add a `LIMIT` clause in `SELECT`. If a `LIMIT` clause is already
    there in the original query, phpMyAdmin will respect it. The default limit is
    30 rows, set in `$cfg['MaxRows']`. If there are many users on the server, limiting
    the number of rows returned helps keeping the server load to a minimum.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 按设计，phpMyAdmin始终尝试提供快速结果，实现此结果的一种方法是在`SELECT`中添加`LIMIT`子句。如果原始查询中已经有`LIMIT`子句，phpMyAdmin将予以尊重。默认限制是30行，设置在`$cfg['MaxRows']`中。如果服务器上有许多用户，限制返回的行数有助于将服务器负载保持在最低水平。
- en: Another button is available on the navigation bar, but must be activated by
    setting `$cfg['ShowAll']` to `TRUE`. It would be very tempting for users to use
    this button often. Hence, on a multi-user installation of phpMyAdmin, it is recommended
    that the button be left to its default value of disabled (FALSE). When enabled,
    the navigation bar is augmented with a **Show all** button. Clicking on this button
    retrieves all the rows of the current results set, which might hit the execution
    time limit in PHP or a memory limit in the server; most browsers would also crash
    when asked to display thousands of rows. The exact number of rows that can be
    safely displayed cannot be predicted as it depends on the actual data present
    in columns and on the browser's capabilities.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 导航栏上还有一个按钮，但必须通过将`$cfg['ShowAll']`设置为`TRUE`来激活。用户很容易会经常使用这个按钮。因此，在phpMyAdmin的多用户安装中，建议将按钮保持为其默认值禁用（FALSE）。启用时，导航栏将增加一个**显示全部**按钮。单击此按钮将检索当前结果集的所有行，这可能会达到PHP的执行时间限制或服务器的内存限制；当要求显示数千行时，大多数浏览器也会崩溃。可以安全显示的确切行数无法预测，因为它取决于列中实际存在的数据以及浏览器的功能。
- en: Note
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If we enter a big number in the **Show __ rows** dialog, the same results will
    be achieved (and we may face the same problems).
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在**显示__行**对话框中输入一个大数字，将会获得相同的结果（并且可能会面临相同的问题）。
- en: Query results operations
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查询结果操作
- en: A section labeled **Query results operations** is located under the results.
    It contains links to print the results (with or without the `FULL TEXT` columns),
    to export these results (refer to *Exporting partial query results* section in
    [Chapter 6)](ch06.html "Chapter 6. Exporting Structure and Data (Backup)"), or
    to create a view from this query (more on this in [Chapter 17)](ch17.html "Chapter 17. Supporting
    Features Added in MySQL 5").
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 一个名为**查询结果操作**的部分位于结果下方。它包含打印结果的链接（带有或不带有`FULL TEXT`列），导出这些结果的链接（参考[第6章](ch06.html
    "第6章.导出结构和数据（备份）")中的*导出部分查询结果*部分），或者从此查询创建一个视图的链接（关于这一点在[第17章](ch17.html "第17章.在MySQL
    5中添加的支持功能")中有更多信息）。
- en: Displaying data as a chart
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 显示数据为图表
- en: 'Another operation available is **Display chart**. To practice this, we will
    use a different query that selects only two columns. For this we can use the **Inline**
    link shown next to the query and change the query to:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个可用的操作是**显示图表**。为了练习这个，我们将使用一个选择只有两列的不同查询。为此，我们可以使用查询旁边显示的**内联**链接，并将查询更改为：
- en: '[PRE0]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Clicking on **Go** produces a result set with only those two columns; next
    we click on **Display chart**, which generates the following panel:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 单击**Go**会生成一个只有这两列的结果集；接下来我们点击**显示图表**，会生成以下面板：
- en: '![Displaying data as a chart](img/7782_04_17.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![显示数据为图表](img/7782_04_17.jpg)'
- en: More details are available at [http://wiki.phpmyadmin.net/pma/Charts](http://wiki.phpmyadmin.net/pma/Charts).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 更多详细信息请参阅[http://wiki.phpmyadmin.net/pma/Charts](http://wiki.phpmyadmin.net/pma/Charts)。
- en: Sorting results
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 排序结果
- en: In SQL, we can never be sure of the order in which the data is retrieved, unless
    we explicitly sort the data. Some implementations of the retrieving engine may
    show results in the same order as the one in which data was entered, or according
    to a primary key. However, a sure way to get results in the order we want is by
    sorting them explicitly.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在SQL中，除非我们明确地对数据进行排序，否则我们无法确定数据检索的顺序。检索引擎的一些实现可能以与输入数据顺序相同的顺序显示结果，或者根据主键的顺序显示结果。然而，以明确排序的方式获取我们想要的结果是一种确定的方法。
- en: When browsing results are displayed, any column header can be clicked to sort
    on this column, even if it is not part of an index. Let us click on the **author_id**
    column header.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 当浏览结果显示时，可以单击任何列标题以对该列进行排序，即使它不是索引的一部分。让我们点击**author_id**列标题。
- en: '![Sorting results](img/7782_04_18.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![排序结果](img/7782_04_18.jpg)'
- en: We can confirm that the sorting has occurred, by watching the SQL query at the
    top of screen; it contains an **ORDER BY** clause.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以确认排序已经发生，通过观察屏幕顶部的SQL查询；它包含一个**ORDER BY**子句。
- en: We now see a small triangle pointing upwards beside the **author_id** header.
    This means that the current sort order is 'ascending'. Hovering the mouse over
    the **author_id** header makes the triangle change direction, to indicate what
    will happen if we click on the header again—a sort by descending **author_id**
    values.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们在**author_id**标题旁边看到一个小三角形指向上方。这意味着当前的排序顺序是“升序”。将鼠标悬停在**author_id**标题上会使三角形改变方向，以指示如果再次点击标题会发生什么——按**author_id**值降序排序。
- en: 'Another way to sort is by key. The **Sort** dialog shows all the keys already
    defined. Here we see a key named **PRIMARY—the** name given to our primary key
    on the **isbn** column when we checked **Primary** for this column at creation
    time:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种排序的方法是按键排序。**排序**对话框显示了已经定义的所有键。在这里，我们看到一个名为**PRIMARY**的键——这是我们在创建时为**isbn**列检查**Primary**时给出的主键的名称：
- en: '![Sorting results](img/7782_04_19.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![排序结果](img/7782_04_19.jpg)'
- en: This might be the only way to sort on multiple columns at once (for multi-columns
    indexes).
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能是一次对多列进行排序的唯一方法（用于多列索引）。
- en: The initial sort order is defined in `$cfg['Order']` with `ASC` for ascending,
    `DESC` for descending, or `SMART`; the latter is the default sort order, which
    means that columns of type `DATE, TIME, DATETIME`, and `TIMESTAMP` would be sorted
    in descending order, whereas other column types will be sorted in ascending order.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 初始排序顺序在`$cfg['Order']`中定义，使用`ASC`表示升序，`DESC`表示降序，或者`SMART`；后者是默认排序顺序，这意味着`DATE,
    TIME, DATETIME`和`TIMESTAMP`类型的列将按降序排序，而其他列类型将按升序排序。
- en: Headwords
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 头词
- en: Because we can change the number of rows displayed on a page, it is quite possible
    that we do not see the whole data. In this case, it would help to see **headwords**
    —indications about the first and last row of displayed data. This way, you can
    click on **Next** or **Previous** without scrolling to the bottom of the window.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们可以更改页面上显示的行数，很可能我们看不到所有数据。在这种情况下，看到**头词**会有所帮助——关于显示数据的第一行和最后一行的指示。这样，您可以点击**下一个**或**上一个**，而不必滚动到窗口底部。
- en: 'However, which column should phpMyAdmin base his headwords generation on? A
    simple assumption has been made: if you click on a column''s header to indicate
    your intention of sorting on this column, phpMyAdmin uses this column''s data
    as a headword. For our current **book** table, we do not have enough data to clearly
    notice the benefits of this technique. However, we can nonetheless see that after
    a sort, the top part of the screen now contains this message:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，phpMyAdmin应该基于哪一列生成头词？一个简单的假设已经被提出：如果您点击列标题表示您打算对该列进行排序，phpMyAdmin将使用该列的数据作为头词。对于我们当前的**book**表，我们没有足够的数据来清楚地注意到这种技术的好处。然而，我们仍然可以看到排序后，屏幕顶部现在包含这条消息：
- en: '**Showing rows 0 - 1 (2 total, Query took 0.0006 sec) [author_id: 1 - 2]**'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**显示行0 - 1（共2行，查询耗时0.0006秒）[author_id: 1 - 2]**'
- en: Here, the message between square brackets means that **author_id** number **1**
    is on the first displayed row and number **2** is on the last one.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，方括号中的消息表示**author_id**编号**1**在第一行显示，编号**2**在最后一行显示。
- en: Color-marking rows or columns
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 颜色标记行或列
- en: When moving the mouse between rows (or between column headers), the row (or
    column) background color may change to the color defined in `$cfg['BrowsePointerColor']`.
    This parameter can be found in `themes/<themename>/layout.inc.php`. To enable
    this, browse pointer for all themes`—$cfg['BrowsePointerEnable']—`must be set
    to `TRUE` (the default) in `config.inc.php`.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 当鼠标在行之间移动（或在列标题之间移动）时，行（或列）的背景颜色可能会改变为`$cfg['BrowsePointerColor']`中定义的颜色。此参数可以在`themes/<themename>/layout.inc.php`中找到。要启用此功能，所有主题的浏览指针`$cfg['BrowsePointerEnable']`必须在`config.inc.php`中设置为`TRUE`（默认值）。
- en: It may be interesting to visually mark some rows when we have many columns in
    the table and must constantly scroll left and right to read data. Another usage
    is to highlight the importance of some rows for personal comparison of data, or
    when showing data to people. Highlighting is done by clicking on the row. Clicking
    again removes the mark on the row. The chosen color is defined by `$cfg['BrowseMarkerColor']`
    (see `themes/<themename>/layout.inc.php)`. This feature must be enabled by setting
    `$cfg['BrowseMarkerEnable']` to `TRUE`, this time in `config.inc.php`. This sets
    the feature for all the themes. We can mark more than one row. Marking the row
    also activates the checkbox for this row.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在表中有许多列并且必须不断向左和向右滚动以读取数据时，可以有趣地标记一些行。另一个用途是突出一些行的重要性，以进行个人数据比较，或者向他人展示数据时。通过点击行来进行突出显示。再次点击会取消对行的标记。所选颜色由`$cfg['BrowseMarkerColor']`（参见`themes/<themename>/layout.inc.php`）定义。此功能必须通过在`config.inc.php`中将`$cfg['BrowseMarkerEnable']`设置为`TRUE`来启用。这将为所有主题设置该功能。我们可以标记多行。标记行还会激活该行的复选框。
- en: '![Color-marking rows or columns](img/7782_04_20.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![颜色标记行或列](img/7782_04_20.jpg)'
- en: Marking a column is done by clicking on the column header, but not on the column
    name itself.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 通过点击列标题（而不是列名本身）来标记列。
- en: Limiting the length of each column
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 限制每列的长度
- en: 'In the previous examples, we always saw the full contents of each column, as
    each column had the number of characters within the limit defined by `$cfg[''LimitChars'']`.
    This is a limit enforced on all non-numeric columns. If this limit was low (say
    `10)`, the display would be as follows:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们总是看到每列的完整内容，因为每列的字符数都在`$cfg['LimitChars']`定义的限制内。这是对所有非数字列强制执行的限制。如果这个限制很低（比如`10`），显示将如下所示：
- en: '![Limiting the length of each column](img/7782_04_21.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![限制每列的长度](img/7782_04_21.jpg)'
- en: This would help us see more columns at the same time (at the expense of seeing
    less of each column).
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 这将帮助我们同时看到更多列（以减少每列的显示量）。
- en: Display options
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 显示选项
- en: In order to see the full texts, we will now make use of the **Options** slider,
    which reveals some display options. All these options will be explained in the
    chapters that cover the corresponding notions. The option that concerns us at
    the moment is the **Partial Texts/Full Texts** pair; we can choose **Full Texts**
    to see all of the text that was truncated. Even if we elect not to change the
    `$cfg['LimitChars']` parameter, there will be a time when asking for full texts
    will be useful (when we work with `TEXT` column type—more on this in [Chapter
    5)](ch05.html "Chapter 5. Changing Data and Structure").
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 为了看到完整的文本，我们现在将使用**选项**滑块，它会显示一些显示选项。所有这些选项将在涵盖相应概念的章节中进行解释。目前关注我们的选项是**部分文本/完整文本**对；我们可以选择**完整文本**来查看所有被截断的文本。即使我们选择不改变`$cfg['LimitChars']`参数，也会有一个时候要求完整文本会很有用（当我们使用`TEXT`列类型时——更多内容请参阅[第5章](ch05.html
    "第5章。更改数据和结构")）。
- en: A quicker way of seeing the full texts is to click on the big **T** which is
    located just on top of the **Edit** and **Delete** icons. Another click on this
    **T** toggles the display from full to partial.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 查看完整文本的更快方法是点击位于**编辑**和**删除**图标正上方的大**T**。再次点击此**T**会将显示从完整切换到部分。
- en: Browsing distinct values
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 浏览不同的值
- en: There is a quick way to display all distinct values and the number of occurrences
    for each value of a column. This feature is available on the **Structure** page
    of a table. For example, we want to know how many different authors we have in
    our book table and how many books each one wrote. On the line describing the column
    we want to browse (here **author_id)**, we open the **More** menu and click on
    the **Browse distinct values** link.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种快速的方法可以显示所有不同的值以及每个列值的出现次数。这个功能在表的**结构**页面上可用。例如，我们想知道我们的书表中有多少不同的作者，以及每个作者写了多少本书。在描述我们想要浏览的列（这里是**author_id**）的行上，我们打开**更多**菜单，然后点击**浏览不同的值**链接。
- en: '![Browsing distinct values](img/7782_04_22.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![浏览不同的值](img/7782_04_22.jpg)'
- en: We have a limited test set, but can nonetheless see the results.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一个有限的测试集，但仍然可以看到结果。
- en: '![Browsing distinct values](img/7782_04_23.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![浏览不同的值](img/7782_04_23.jpg)'
- en: Profiling queries
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 性能分析查询
- en: Profiling support has been added in the MySQL versions 5.0.37 and 5.1.28\. We
    have previously seen the **Profiling** checkbox appear in query results.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL版本5.0.37和5.1.28中添加了性能支持。我们之前已经看到**性能分析**复选框出现在查询结果中。
- en: 'When this box is checked, phpMyAdmin will analyze every query (including the
    current one), and a report about the execution time of each MySQL internal operation
    is displayed as shown in the following screenshot:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 当选中此框时，phpMyAdmin将分析每个查询（包括当前查询），并显示有关每个MySQL内部操作的执行时间的报告，如下面的屏幕截图所示：
- en: '![Profiling queries](img/7782_04_24.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![性能分析查询](img/7782_04_24.jpg)'
- en: Although the profiling system can report additional information about operations
    (such as the CPU time, and even the internal server's function names), phpMyAdmin
    currently displays only the name of the operation and its duration.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管性能分析系统可以报告有关操作的其他信息（如CPU时间，甚至是内部服务器的函数名称），但phpMyAdmin目前只显示操作的名称和持续时间。
- en: Creating an additional table
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个额外的表
- en: 'In our (simple) design, we know that we need another table—the **author** table.
    The **author** table will contain:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们（简单）的设计中，我们知道我们需要另一个表——**author**表。**author**表将包含：
- en: Author identification
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作者识别
- en: Full name
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全名
- en: Phone number
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电话号码
- en: 'To create this table, we go back to the `Database` view for **marc_book** and
    request the creation of another table with three columns as indicated in the following
    screenshot:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建此表，我们返回到**marc_book**的`数据库`视图，并请求创建另一个具有如下屏幕截图所示的三列的表：
- en: '![Creating an additional table](img/7782_04_25.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![创建一个额外的表](img/7782_04_25.jpg)'
- en: 'Using the same techniques used when creating the first table, we type this
    in:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 使用创建第一个表时使用的相同技术，我们输入以下内容：
- en: '![Creating an additional table](img/7782_04_26.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![创建一个额外的表](img/7782_04_26.jpg)'
- en: As we have three columns or less, the display is now in vertical mode (refer
    to the *Vertical mode* section in [Chapter 5](ch05.html "Chapter 5. Changing Data
    and Structure") for more details).
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们只有三列或更少，显示现在处于垂直模式（有关更多详细信息，请参阅[第5章](ch05.html "第5章。更改数据和结构")中的*垂直模式*部分）。
- en: The column name **id**, which is our primary key in this new table, relates
    to the `author_id` column from the `book` table. After saving the table structure,
    we enter some data for authors 1 and 2\. Use your imagination for this!
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 列名**id**，它是我们新表中的主键，与`book`表中的`author_id`列相关联。保存表结构后，我们为作者1和2输入一些数据。为此，请发挥您的想象！
- en: Summary
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter explained how to create a database and tables, and how to enter
    data manually in the tables. It also covered how to confirm the presence of data
    by using the browse mode, which includes the SQL query links, navigation bar,
    sorting options, and row marking.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 本章解释了如何创建数据库和表，以及如何在表中手动输入数据。它还涵盖了如何通过使用浏览模式来确认数据的存在，其中包括SQL查询链接、导航栏、排序选项和行标记。
- en: The next chapter explains how to edit data rows and covers the various aspects
    of deletion of rows, tables, and databases.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将解释如何编辑数据行，并涵盖删除行、表和数据库的各个方面。
