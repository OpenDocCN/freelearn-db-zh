- en: Chapter 3. Data Management with Navicat
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。使用Navicat进行数据管理
- en: In the past, some of us would work with a database and its contents the hard
    way, typing commands in a console window or using primitive GUI tools with limited
    functionality. When it came to migrating a database from one server to another
    or even a simple restore from a backup, such stunts could become tedious tasks.
    In this chapter, we will see how easy and less time-consuming it is to perform
    all these tasks with Navicat.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 过去，我们中的一些人会以艰难的方式使用控制台窗口中的命令键入数据库及其内容，或者使用功能有限的原始GUI工具。当涉及将数据库从一个服务器迁移到另一个服务器，甚至从备份中简单恢复时，这些花招可能变得繁琐。在本章中，我们将看到使用Navicat执行所有这些任务是多么简单和节省时间。
- en: 'Also, we will manipulate big chunks of data using Navicat''s sophisticated
    tools, and you will learn how to:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们将使用Navicat的复杂工具来操作大块数据，并且您将学会如何：
- en: Import and export data using a variety of formats, such as XML, Excel files,
    `.csv`, and `.sql`
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用各种格式导入和导出数据，如XML、Excel文件、`.csv`和`.sql`
- en: Direct data transfer between different databases
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同数据库之间的直接数据传输
- en: Synchronize data and structure
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同步数据和结构
- en: Back up a database for restoring later
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 备份数据库以便以后恢复
- en: Create and schedule batch jobs
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和安排批处理作业
- en: Working with an existing database
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用现有数据库
- en: 'From this point on, we''ll work with an existing sample database called Sakila.
    Apart from being the name of the dolphin in the MySQL logo, Sakila is an example
    of a movie database developed by Mike Hillyer—a former member of the MySQL AB
    documentation team—and is intended to provide a standard schema that can be used,
    for example in books, tutorials, and articles. It also serves to highlight the
    features introduced in MySQL 5.x, including views, stored procedures, and triggers.
    The default installation of MySQL 5.5 Community Edition includes a copy ofSakila
    along with another sample database named World. If you already have a version
    of the MySQL server (earlier than 5.5) installed on your computer and do not want
    to upgrade for specific reasons, we have included a copy of the dump file of the
    Sakila database in the example code for this book. You can also download it from
    [http://dev.mysql.com/doc/index-other.html](http://dev.mysql.com/doc/index-other.html).
    Once you arrive at the page, select the **Other Docs** tab and look in the **Example
    Databases** section. There you can find other sample databases too, with which
    you can experiment and apply what you will have learned through this chapter,
    as shown in the following screenshot:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 从这一点开始，我们将使用一个名为Sakila的现有示例数据库。除了是MySQL标志中海豚的名字外，Sakila是由Mike Hillyer开发的电影数据库的示例，他是MySQL
    AB文档团队的前成员，并旨在提供可用于书籍、教程和文章等的标准模式。它还用于突出显示MySQL 5.x中引入的功能，包括视图、存储过程和触发器。MySQL
    5.5社区版的默认安装包括Sakila的副本以及另一个名为World的示例数据库。如果您的计算机上已经安装了MySQL服务器的版本（早于5.5）并且出于特定原因不想升级，我们已经在本书的示例代码中包含了Sakila数据库的转储文件的副本。您也可以从[http://dev.mysql.com/doc/index-other.html](http://dev.mysql.com/doc/index-other.html)下载它。一旦到达页面，选择**其他文档**选项卡，并查看**示例数据库**部分。在那里，您还可以找到其他示例数据库，通过这些示例数据库，您可以实验并应用本章中学到的知识，如下图所示：
- en: '![Working with an existing database](img/7461EN_03_01_download-sakila-example.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![使用现有数据库](img/7461EN_03_01_download-sakila-example.jpg)'
- en: Once you have downloaded Sakila's compressed archive (either in `.zip` or `.tgz`
    format) and extracted its contents, you will find three files, which are called
    SQL dump files, in a folder called `sakila-db`. We need only two of them—`sakila-schema.sql`
    and `sakila-data.sql`. We'll use `sakila-schema.sql` in order to generate the
    Sakila database on our MySQL server; all the tables, views, functions, and stored
    procedures, which constitute the database structure, will be created. The other
    file, `sakila-data.sql`, will populate the data of the Sakila database.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您下载了Sakila的压缩存档（以`.zip`或`.tgz`格式）并提取了其内容，您将在名为`sakila-db`的文件夹中找到三个文件，这些文件称为SQL转储文件。我们只需要其中两个——`sakila-schema.sql`和`sakila-data.sql`。我们将使用`sakila-schema.sql`来在我们的MySQL服务器上生成Sakila数据库；将创建构成数据库结构的所有表、视图、函数和存储过程。另一个文件`sakila-data.sql`将填充Sakila数据库的数据。
- en: Creating the database schema from a SQL dump file
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从SQL转储文件创建数据库模式
- en: 'Now, to generate the Sakila database on your server, I need you to right-click
    on **localhost** (or whatever server you defined a connection for) from the **Connections**
    pane of Navicat''s main window and follow these steps:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要在服务器上生成Sakila数据库，我需要您右键单击Navicat主窗口的**连接**窗格中的**localhost**（或者您为其定义了连接的任何服务器），并按照以下步骤操作：
- en: Select **Execute SQL file...** from the contextual menu that pops up, as shown
    in the following screenshot:![Creating the database schema from a SQL dump file](img/7461EN_03_2_localhost-execute-sql.jpg)
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从弹出的上下文菜单中选择**执行SQL文件...**，如下图所示：![从SQL转储文件创建数据库模式](img/7461EN_03_2_localhost-execute-sql.jpg)
- en: A new, smaller window will then open up with two tabs, where you will specify
    the SQL file to execute action queries from, in this case, SQL commands, to create
    the database and its objects. While under the **General** tab of the **Execute
    SQL File** window, click on the small, square-shaped button at the right end of
    the field labeled **File**, to choose `sakila-schema.sql`.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后将打开一个新的较小窗口，其中将有两个选项卡，在这里您将指定要执行动作查询的SQL文件，即此案例中的SQL命令，以创建数据库及其对象。在**执行SQL文件**窗口的**常规**选项卡下，单击标有**文件**的字段右端的小方形按钮，以选择`sakila-schema.sql`。
- en: If the other settings in this window look like what you see in the screenshot,
    such as the **Encoding** which should be **65001 (UTF-8)**, you can directly proceed
    to click on the **Start** button.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果此窗口中的其他设置看起来像屏幕截图中所看到的那样，例如**编码**应为**65001（UTF-8）**，则可以直接点击**开始**按钮。
- en: Optionally, you could uncheck **Continue on error** to make sure your settings
    are correct before Sakila is generated on your machine as it's supposed to be;
    and if not, the operation will be broken and you will know in advance that you
    need to recheck the settings regarding your database server installation and connection
    properties. In other words, the operation should go just fine with the default
    settings, but in the event of any error during the execution of the queries—probably
    resulting from a possible misconfiguration—it's best to stop creating the database
    and revise the settings by referring to the previous chapter.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，你可以取消勾选**继续错误**，以确保你的设置正确，然后Sakila将按照预期在你的机器上生成；如果不是，操作将中断，你会提前知道需要重新检查关于数据库服务器安装和连接属性的设置。换句话说，操作应该按照默认设置进行，但如果在执行查询过程中出现任何错误，可能是由于可能的错误配置，最好停止创建数据库，并通过参考前一章节来修订设置。
- en: 'Alternatively, you can leave the **Continue on error** option checked and execute
    all the queries in the SQL file. In the case of any error, you can refer to the
    **Message Log**, which is under the second tab of this window. Refer to the following
    screenshot:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以保持**继续错误**选项勾选，并执行SQL文件中的所有查询。在出现任何错误的情况下，你可以参考这个窗口的第二个选项卡下的**消息日志**。参考下面的截图：
- en: '![Creating the database schema from a SQL dump file](img/7461EN_03_3.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![从SQL转储文件创建数据库模式](img/7461EN_03_3.jpg)'
- en: After you finish executing the SQL file, you will automatically be switched
    to the **Message Log** tab, as shown in the following screenshot:![Creating the
    database schema from a SQL dump file](img/7461EN_03_13.jpg)
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在执行完SQL文件后，你将自动切换到**消息日志**选项卡，如下面的截图所示：![从SQL转储文件创建数据库模式](img/7461EN_03_13.jpg)
- en: At this stage, there's the option of starting over by clicking on the **Start**
    button again, or by closing the window.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个阶段，你可以通过再次点击**开始**按钮或关闭窗口来重新开始。
- en: Going back to Navicat's main window, there appears to be no change. Now what?
    Nothing to worry about; we just need to refresh the view to see our newly created
    Sakila database and its objects. Right-click on **localhost** again, and select
    **Refresh** from the pop-up menu (On the Mac, it's labeled as **Refresh Connection**).
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回到Navicat的主窗口，似乎没有变化。现在怎么办？不用担心；我们只需要刷新视图，就能看到我们新创建的Sakila数据库及其对象。再次右键单击**localhost**，从弹出菜单中选择**刷新**（在Mac上标记为**刷新连接**）。
- en: 'This is one of the most powerful features of Navicat. In just a few seconds,
    we executed a SQL dump file to recreate a database without having to type commands
    in a console window or having to go through complicated screens, as shown in the
    following screenshot:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Navicat最强大的功能之一。仅仅几秒钟，我们就执行了一个SQL转储文件，重新创建了一个数据库，而不需要在控制台窗口中输入命令，也不需要经过复杂的屏幕，如下面的截图所示：
- en: '![Creating the database schema from a SQL dump file](img/7461EN_03_04_sakila_schema_created.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![从SQL转储文件创建数据库模式](img/7461EN_03_04_sakila_schema_created.jpg)'
- en: All the **Tables**, **Views**, **Functions**, and stored procedures are now
    listed in the main window. Click on **Tables** to see what we've got. We have
    almost every element that we would find in a typical relational movie database
    such as film, actor, category, staff, and some association tables, which are also
    called junction tables, such as **film_actor** and **film_category**. Double-click
    on some of them to see what they look like in Navicat. There are some custom views
    as well, such as **nicer_but_slower_film_list** and **sales_by_film_category**.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的**表**，**视图**，**函数**和存储过程现在都列在主窗口中。点击**表**查看我们有什么。我们几乎拥有典型关系型电影数据库中会找到的每个元素，比如电影，演员，类别，工作人员，以及一些关联表，也称为连接表，比如**film_actor**和**film_category**。双击其中一些表来查看它们在Navicat中的样子。还有一些自定义视图，比如**nicer_but_slower_film_list**和**sales_by_film_category**。
- en: The first thing you will notice, however, is that these **Tables** and **Views**
    are all empty, without data. It's because the `.sql` file we executed contains
    only the database structure. So we have only created the blank database schema,
    and we need to repeat the steps in the beginning of this section to execute the
    other SQL dump file called `sakila-data.sql`, which contains the data to populate
    the database.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，你会注意到这些**表**和**视图**都是空的，没有数据。这是因为我们执行的`.sql`文件只包含了数据库结构。所以我们只创建了空白的数据库模式，我们需要重复本节开头的步骤，执行另一个名为`sakila-data.sql`的SQL转储文件，其中包含了填充数据库的数据。
- en: Now that we have the full database, with a complete structure, at our disposal,
    it's time to fill it with some data.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们拥有了完整的数据库，具有完整的结构，是时候用一些数据填充它了。
- en: Right-click on the **sakila** database from the tree view in the left pane,
    make sure it's connected by verifying if its little cylinder-like icon is green,
    and then select **Execute SQL file** from the pop-up menu. This time, choose `sakila-data.sql`
    and click on **Start**. The title of the auxiliary window should become something
    like **Execute SQL file**, and the **Message Log** tab should read **[Msg] Finished
    - 56 queries executed successfully**.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧面板的树形视图中右键单击**sakila**数据库，确保它已连接，验证其小圆柱形图标是否为绿色，然后从弹出菜单中选择**执行SQL文件**。这次选择`sakila-data.sql`并点击**开始**。辅助窗口的标题应该变成**执行SQL文件**，**消息日志**选项卡应该显示**[Msg]
    完成 - 成功执行了56个查询**。
- en: Importing and exporting data
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入和导出数据
- en: In the previous section, we have actually imported the **sakila** database by
    using SQL dump files. In this section, we'll cover import/export capabilities
    of Navicat in more detail.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们实际上是使用SQL转储文件导入了**sakila**数据库。在本节中，我们将更详细地介绍Navicat的导入/导出功能。
- en: 'As our first exercise, we will export **our_first_db**, the database that we
    created in [Chapter 2](ch02.html "Chapter 2. Working with Databases"), *Working
    with Databases*, in a `.sql` file, so that it can be regenerated on another MySQL
    server or as another instance of the database on the same server. To export **our_first_db**,
    follow these steps:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 作为我们的第一个练习，我们将导出**our_first_db**，这是我们在[第2章](ch02.html "第2章。与数据库一起工作")*与数据库一起工作*中创建的数据库，以`.sql`文件的形式，以便可以在另一个MySQL服务器上或者作为同一服务器上数据库的另一个实例上重新生成。要导出**our_first_db**，请按照以下步骤进行：
- en: Right-click on **our_first_db** and choose **Dump SQL file...** from the pop-up
    menu. (If that menu item is dimmed and therefore inactive, you can first select
    **Open Database** from the same pop-up menu and then proceed with the intended
    step by right-clicking on it again.)
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击**our_first_db**，然后从弹出菜单中选择**Dump SQL file...**（如果该菜单项变暗，因此无法使用，您可以首先从同一弹出菜单中选择**Open
    Database**，然后再次右键单击进行下一步操作。）
- en: Finally, indicate the path where you want the SQL dump file to be created and
    by what name you want it to be saved in the **Save as** dialog box, and click
    on **Save**. Your database will be exported or dumped into a `.sql` file, which,
    when executed as described in the previous section, will be regenerated exactly
    with the same structure and data you created, as shown in the following screenshot:![Importing
    and exporting data](img/7461EN_03_5_dump_sql_file.jpg)
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，指定您希望创建SQL转储文件的路径和文件名，并单击**保存**。您的数据库将被导出或转储到一个`.sql`文件中，当按照前一节中描述的方式执行时，将会以与您创建的相同结构和数据重新生成，如下面的屏幕截图所示：![导入和导出数据](img/7461EN_03_5_dump_sql_file.jpg)
- en: The previous procedure is one step away from exporting an entire database, although
    there are other variants of data exporting methods in Navicat, which will be covered
    in a moment, in this chapter. The **sakila** database, for example, came in two,
    separate, `.sql` files—one for the schema and the other for the data. If you export
    **sakila** using the same method, which is, by running the **Dump SQL file** command,
    Navicat will export the entire database in a single dump file.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的步骤离导出整个数据库只差一步，尽管Navicat中还有其他数据导出方法的变体，这将在本章稍后进行介绍。例如，**sakila**数据库分为两个独立的`.sql`文件，一个用于架构，另一个用于数据。如果您使用相同的方法导出**sakila**，即通过运行**Dump
    SQL file**命令，Navicat将会将整个数据库导出到单个转储文件中。
- en: One thing to know about Navicat's way of exporting SQL dump files is that Navicat
    does not include a command to create the database, such as `CREATE` `DATABASE`
    `db_name`, in the file.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 关于Navicat导出SQL转储文件的一件事是，Navicat不会在文件中包含创建数据库的命令，比如`CREATE` `DATABASE` `db_name`。
- en: Therefore, before executing dump files created by Navicat, you should first
    select a database or create a new one, and then proceed with the execution to
    generate the schema and to populate the data, if any.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在执行Navicat创建的转储文件之前，您应该首先选择一个数据库或创建一个新数据库，然后继续执行以生成架构并填充数据（如果有）。
- en: If you are going to use the exported `.sql` dump file in a different administration
    tool, such as phpMyAdmin or MySQL Workbench, you should manually add the SQL command
    that would create the database. For example, you could add a line with the code
    `CREATE` `DATABASE` `our_first_db` in the beginning of the file, using a text
    editor.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您打算在不同的管理工具中使用导出的`.sql`转储文件，比如phpMyAdmin或MySQL Workbench，您应该手动添加SQL命令来创建数据库。例如，您可以使用文本编辑器在文件开头添加一行代码`CREATE`
    `DATABASE` `our_first_db`。
- en: Another one of Navicat's most acclaimed features is its ability to export data
    to a variety of formats. Some of the major ones will be covered in a moment.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Navicat最受好评的另一个功能是其能够将数据导出到各种格式。一些主要的格式将在稍后进行介绍。
- en: Exporting in detail
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 详细导出
- en: If you are a database administrator or some sort of an IT analyst, you might
    often receive business requests to provide your client with an output of a table
    or a query from a database on the company intranet, typically in the Microsoft
    Excel format. In such cases, Navicat comes extremely handy for exporting the needed
    data and in a wide range of exporting options.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是数据库管理员或某种类型的IT分析师，您可能经常收到业务请求，要求您在公司内部网络上提供表或数据库查询的输出，通常以Microsoft Excel格式。在这种情况下，Navicat非常方便，可以导出所需的数据，并提供广泛的导出选项。
- en: You can open any **Table**, **View**, or **Query**, and then click on the **Export
    Wizard** button on the toolbar of the window. When you do that, Navicat asks you
    if you want to export all the data in the table (in the Windows version).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以打开任何**Table**、**View**或**Query**，然后单击窗口工具栏上的**Export Wizard**按钮。这样做时，Navicat会询问您是否要导出表中的所有数据（在Windows版本中）。
- en: Now this part is a bit tricky. First of all, *the table* in the expression **all
    the data in the table** refers to what kind of database object you're dealing
    with. When you're exporting the results of a **View** or **Query**, then **export
    all the data in the table** means all the data in the result list of the **View**
    or the **Query** you have been working on. Secondly, **all the data** means all
    the records in the database table, even if you displayed a limited amount of data.
    Please note that Navicat displays, at most, a thousand rows by default, when displaying
    the contents of a **Table**, **View**, or **Query**, in order to prevent a heavy
    workload on the database server.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这部分有点棘手。首先，*表*在表达式**表中的所有数据**中指的是您正在处理的数据库对象的类型。当您导出**View**或**Query**的结果时，**导出表中的所有数据**意味着您正在处理的**View**或**Query**结果列表中的所有数据。其次，**所有数据**意味着数据库表中的所有记录，即使您显示了有限数量的数据。请注意，Navicat默认最多显示一千行，以防止对数据库服务器造成过大的负担，当显示**Table**、**View**或**Query**的内容时。
- en: 'This limit can be changed or removed by clicking on a tiny toolset icon at
    the bottom-right of the results window, which is shown in the following screenshot:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过单击结果窗口右下角的一个小工具集图标来更改或删除此限制，如下面的屏幕截图所示：
- en: '![Exporting in detail](img/7461EN_03_6.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![详细导出](img/7461EN_03_6.jpg)'
- en: 'To see this in action, follow these steps:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看此操作的效果，请按照以下步骤操作：
- en: Go to the **Tables** in the **sakila** database, and double-click on the table
    named **film**. You should see a list of movies with details such as the **title**,
    **description**, **release_year**, and so on.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**sakila**数据库中的**Tables**，双击名为**film**的表。您应该会看到一列电影，其中包含**标题**、**描述**、**发行年份**等详细信息。
- en: Click on the toolset icon at the bottom-right to set the limit for the number
    of results shown in the previous screenshot. The database, **sakila**, contains
    a thousand titles in the films table anyway, so set the limit to `500` before
    you test how many rows will be exported in the next step.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击底部右侧的工具集图标，以设置前一个屏幕截图中显示的结果数量限制。无论如何，数据库**sakila**中的电影表包含一千个标题，所以在测试下一步将导出多少行之前，将限制设置为`500`。
- en: Now, click on the **Export Wizard** button on the toolbar (alternatively an
    **Export Wizard** command is also available in the **File** menu), and then click
    on **Yes** when you are prompted with **Do you want to export all data in the
    table?**.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '现在，单击工具栏上的**导出向导**按钮（或**文件**菜单中也有**导出向导**命令），然后在提示**是否要导出表中的所有数据？**时单击**是**。 '
- en: You will be presented with the **Export Wizard** window, where you will need
    to specify the export file format with options ranging from the **Dbase** file
    format to **MS Access database** or **Excel spreadsheet** to **XML**.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到**导出向导**窗口，在那里您需要指定导出文件格式，选项范围从**Dbase**文件格式到**MS Access数据库**或**Excel电子表格**到**XML**。
- en: 'While the Windows version of Navicat provides a plethora of file format options
    to choose from, the Mac version presents fewer options for the export file format
    (which explains why the Mac version is slightly cheaper). To be specific, CSV,
    plain text, XML, Dbase file (`.dbf`), and Excel formats are the file formats.
    You can refer to the following screenshot, which contains screenshots from both
    the Mac and the Windows versions of Navicat. This screenshot compares the differences
    of the user interface elements, such as the toolbar and the icons as well as file
    exporting options:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Windows版本的Navicat提供了多种文件格式选项可供选择，但Mac版本提供的导出文件格式选项较少（这解释了为什么Mac版本略微便宜）。具体来说，CSV、纯文本、XML、Dbase文件（`.dbf`）和Excel格式是文件格式。您可以参考下面的屏幕截图，其中包含Mac和Windows版本Navicat的屏幕截图。此屏幕截图比较了用户界面元素的差异，例如工具栏和图标以及文件导出选项：
- en: '![Exporting in detail](img/7461EN_03_7.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![详细导出](img/7461EN_03_7.jpg)'
- en: Another point to be aware of when exporting to Excel is that the version of
    the spreadsheet that will be created depends on which version of Microsoft Excel
    is installed on your computer.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在导出到Excel时需要注意的另一点是，将创建的电子表格的版本取决于您计算机上安装的Microsoft Excel的版本。
- en: After you select the desired output file format, you can click on **Next** in
    Windows (or simply the **Continue** button in the Mac version) for the next step,
    where you will be setting the destination filename, the encoding, and a few more
    options.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择所需的输出文件格式后，您可以单击Windows中的**下一步**（或Mac版本中的**继续**按钮）进行下一步，那里您将设置目标文件名、编码和一些其他选项。
- en: 'Even if you started the export operation on a single table output, this step
    lets you choose other tables in the database to export to separate files (unless
    you clicked **No** when prompted to export **all the data,** in the first place);
    that is, you can export each table to a separate file, as shown in the following
    screenshot:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 即使您开始在单个表输出上进行导出操作，此步骤也允许您选择数据库中的其他表以将其导出到单独的文件中（除非您最初在提示是否导出**所有数据**时点击了**否**）；也就是说，您可以将每个表导出到单独的文件中，如下面的屏幕截图所示：
- en: '![Exporting in detail](img/7461EN_03_8.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![详细导出](img/7461EN_03_8.jpg)'
- en: What's more is you can even export more than one table (or all) to a single
    file. This is done simply by specifying the same filename (and path) for each
    source table in the corresponding field under the **Export to** column. This approach
    has different consequences depending on the file format you have chosen in the
    first place. For example, if you choose to export two or more tables to a single
    Excel file (`.xlsx`), each will be a separate spreadsheet in the same file.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 更重要的是，您甚至可以将一个以上的表（或全部表）导出到单个文件中。只需在**导出到**列下的相应字段中为每个源表指定相同的文件名（和路径）即可完成此操作。这种方法会根据您最初选择的文件格式而产生不同的后果。例如，如果您选择将两个或更多表导出到单个Excel文件（`.xlsx`），每个表将成为同一文件中的单独电子表格。
- en: To set the encoding of the file that will be exported, click on the **Advanced**
    button to display a little pop-up dialog window. The default **Encoding** is pertinently
    **65001 (UTF-8)**, which you can change from the drop-down list.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置将要导出的文件的编码，请单击**高级**按钮以显示一个小弹出对话框。默认的**编码**是恰当的**65001（UTF-8）**，您可以从下拉列表中进行更改。
- en: Under the **Encoding** selection box, there is also a checkbox to add a timestamp
    as a suffix to the exported filename. This is very useful to distinguish between
    the files in cases where you perform this task very often and end up accumulating
    a stack of exported files in a folder with identical names. You can even choose
    between different date patterns, such as **YYYY-MM-DD-HHNNSS** and **MM-DD-YYYY**
    for the time stamp, which will add a suffix to the output filename.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在**编码**选择框下，还有一个复选框，可以将时间戳添加为导出文件名的后缀。这在您经常执行此任务并最终在具有相同名称的文件夹中积累一堆导出文件的情况下非常有用。您甚至可以在**YYYY-MM-DD-HHNNSS**和**MM-DD-YYYY**等不同日期模式之间进行选择，以添加后缀到输出文件名中。
- en: Note
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In the Windows version of Navicat, you have two options for exporting to Excel.
    One of them is **Excel spreadsheet (*.xls)**, which is also the only available
    option in the Mac version. The second is **Excel file (2007 or later) (*.xlsx)**.
    With the former option, you cannot successfully export more than one source table
    into a single destination file, whereas the latter lets you achieve this as it
    uses some component on your computer installed with Microsoft Office. The Excel
    files you export using this option are created more slowly, but their version
    exactly matches the version of Office installed on your PC.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在Navicat的Windows版本中，您有两个选项可以导出到Excel。其中一个是**Excel电子表格（*.xls）**，这也是Mac版本中唯一可用的选项。第二个是**Excel文件（2007或更高版本）（*.xlsx）**。使用前者选项，您无法成功地将多个源表导出到单个目标文件中，而后者可以实现这一点，因为它使用了安装有Microsoft
    Office的计算机上的某些组件。使用此选项导出的Excel文件创建速度较慢，但其版本与PC上安装的Office版本完全匹配。
- en: The next step is selecting the columns (or fields) for exporting by checking
    all the checkboxes of table, view, or query, by default. In order to omit some
    of them, simply uncheck **All Fields** first, and then uncheck the (un)desired
    fields listed under **Available Fields**.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是通过默认情况下勾选表、视图或查询的所有复选框来选择要导出的列（或字段）。为了省略其中一些列，只需先取消选中**所有字段**，然后取消选中**可用字段**下列出的（不）需要的字段。
- en: If you are exporting more than one table and want to specify a different selection
    of columns for each, you will need to repeat this step for each table you are
    exporting, by choosing from the drop-down list labeled **Source Table** and then
    checking/unchecking the field names in the list below it, which updates itself
    as you switch between tables.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要导出多个表并且要为每个表指定不同的列选择，您需要为要导出的每个表重复此步骤，通过从标记为**源表**的下拉列表中选择，然后在其下方的列表中选中/取消选中字段名称，当您在表之间切换时，列表会自动更新。
- en: In the next screen, you can specify whether or not you want an additional row
    at the top of the exported file containing the column titles. Also, you can opt
    to append exported records to an existing file. Also, you can check the option
    **Continue on error**, which will prevent the operation from halting in the event
    of an error.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个屏幕上，您可以指定是否要在导出文件的顶部包含包含列标题的额外行。此外，您可以选择将导出的记录追加到现有文件中。此外，您可以勾选**出现错误时继续**选项，这将防止在出现错误时操作停止。
- en: You could be presented with additional options if you were exporting some other
    file format such as in the case of XML or text files, for example, where you specify
    settings, such as row and field delimiters, text qualifiers, and the format for
    date, time, and numbers.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您要导出其他文件格式，例如XML或文本文件，可能会出现其他选项，例如指定行和字段分隔符、文本限定符以及日期、时间和数字的格式。
- en: Note
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: One of the best and foolproof ways to transfer or exchange data between MySQL
    and an Oracle or Microsoft SQL Database is by using the XML format when exporting
    data from a table.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL到Oracle或Microsoft SQL数据库之间传输或交换数据的最佳且可靠的方法之一是在从表中导出数据时使用XML格式。
- en: When done, click on **Next** to go to the final step and start the export process.
    If you have chosen the `.xls` format instead of `.xlsx`, the exporting should
    be completed in a matter of seconds. When the operation is complete, you can perceive
    it from the progress bar and the **Message Log**.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，单击**下一步**以进入最后一步并开始导出过程。如果选择了`.xls`格式而不是`.xlsx`，则导出应在几秒钟内完成。操作完成后，您可以从进度条和**消息日志**中看到。
- en: Importing a file into a table
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将文件导入表格
- en: The same variety of file formats available for exporting a **Table**, **View**,
    or **Query** are also valid for importing data into a table. Excel spreadsheets,
    XML, and CSV files are among the most popular file formats used as data sources.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 用于导出**表**、**视图**或**查询**的文件格式与导入数据到表中的文件格式相同。Excel电子表格、XML和CSV文件是最常用的数据源文件格式之一。
- en: A business unit periodically sending an Excel spreadsheet to the IT department,
    with a request to update the corporate database with the information in its contents
    is one of the most common scenarios at work. And in some situations, the person
    who makes the spreadsheet often neglects to keep the column names consistent,
    for example, SALES_REP can become SALES_PERSON the next time and SALES_REP_NAME
    at another. Fortunately, Navicat prompts you to match the source columns with
    target fields, also giving you the flexibility to omit some or add additional
    ones.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 一个业务部门定期向IT部门发送Excel电子表格，并要求使用其内容更新公司数据库的情况是工作中最常见的情况之一。在某些情况下，制作电子表格的人经常忽略保持列名一致，例如，SALES_REP可能会在下一次变成SALES_PERSON，而在另一次变成SALES_REP_NAME。幸运的是，Navicat会提示您将源列与目标字段匹配，并灵活地允许您省略一些或添加额外的字段。
- en: When importing data from an Excel or CSV file, remember to correctly set field
    name row and first data row, which, typically, should not be the same.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 从Excel或CSV文件导入数据时，请记住正确设置字段名称行和第一行数据行，通常情况下不应相同。
- en: 'In the example given in the screenshot, you can see the way additional actors
    are imported to the actor table from an Excel file, but some column names had
    to be manually matched for naming differences, such as **actor_id**–**actor_no**
    and **first_name**–**name**:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在屏幕截图中给出的示例中，您可以看到额外的演员是如何从Excel文件导入演员表中的，但是一些列名必须手动匹配命名差异，比如**actor_id**–**actor_no**和**first_name**–**name**：
- en: '![Importing a file into a table](img/7461EN_03_9.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![将文件导入表格](img/7461EN_03_9.jpg)'
- en: In addition to the popular data formats mentioned earlier, it is possible to
    import data from an ODBC data source in the Windows version of Navicat. This requires
    some knowledge of ODBC settings so as to be able to specify connection parameters.
    You can find detailed information for the ODBC import in Navicat's official manual.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 除了前面提到的流行数据格式之外，在Navicat的Windows版本中还可以从ODBC数据源导入数据。这需要一些关于ODBC设置的知识，以便能够指定连接参数。您可以在Navicat的官方手册中找到有关ODBC导入的详细信息。
- en: Direct data transfer between two databases
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 两个数据库之间的直接数据传输
- en: Another flagship feature of Navicat is its capability to transfer database objects
    (**Tables**, **Views**, **Functions**, and **Events**) from one database to another,
    or to a SQL dump file. The target database can be on the same server or on another
    server. All you need to do is to have defined a connection to it as described
    in [Chapter 1](ch01.html "Chapter 1. Getting Started"), *Getting Started*. The
    data transfer settings can also be saved as a profile for later retrieval or can
    be scheduled as a job.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Navicat的另一个旗舰功能是其能够将数据库对象（**表**、**视图**、**函数**和**事件**）从一个数据库传输到另一个数据库，或者传输到SQL转储文件。目标数据库可以位于同一服务器上，也可以位于另一台服务器上。您只需要按照[第1章](ch01.html
    "第1章。入门") *入门*中描述的方式定义一个连接。数据传输设置也可以保存为配置文件以供以后检索，或者可以安排为作业。
- en: 'You can start a data transfer process either by choosing **Data Transfer...**
    from **Tools** in the main menu bar, or by right-clicking on a database in the
    left navigation pane and selecting **Data Transfer...**. Once you initiate it,
    you can start specifying the settings in the **Data Transfer** window, as shown
    in the following screenshot:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过从主菜单栏中的**工具**选择**数据传输...**，或者右键单击左侧导航窗格中的数据库并选择**数据传输...**来启动数据传输过程。一旦启动，您可以开始在**数据传输**窗口中指定设置，如下图所示：
- en: '![Direct data transfer between two databases](img/7461EN_03_10_data_transfer1.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![两个数据库之间的直接数据传输](img/7461EN_03_10_data_transfer1.jpg)'
- en: Although the interface here is fairly intuitive, with two main areas under the
    **General** tab categorized as **Source** and **Target** simply letting you choose
    which objects to transfer where, there are a few points to know before you get
    started, unless you want to learn how to use it by the hard way of trial and error.
    First, you need to have the target database ready beforehand, which means you
    need to at least have created a blank database as the target to receive the database
    objects, as Navicat (at the time of writing this) does not create the database
    itself but rather copies the objects to the specified target. You can also choose
    to transfer to an existing database already containing some objects, but in this
    case, you might want to make sure that they don't have the same names as those
    in the source unless you wish them to be overwritten or skipped.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管界面相当直观，在**常规**选项卡下有两个主要区域，分为**源**和**目标**，只需让您选择要将哪些对象传输到哪里，但在开始之前有一些要点需要了解，除非您希望通过试错的艰难方式来学习如何使用它。首先，您需要提前准备好目标数据库，这意味着您至少需要创建一个空数据库作为接收数据库对象的目标，因为Navicat（在我写这篇文章时）不会创建数据库本身，而是将对象复制到指定的目标。您还可以选择将其传输到已包含一些对象的现有数据库，但在这种情况下，您可能希望确保它们与源中的对象名称不同，除非您希望它们被覆盖或跳过。
- en: Secondly, you can prefer to export to a SQL dump file, which is, in a way, similar
    to what I showed in the beginning of the chapter, except that on this screen,
    you are able to specify the SQL format ranging from MySQL 3.23 to 6.0 through
    file encoding.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，您可以选择导出到SQL转储文件，这在某种程度上类似于我在本章开头展示的内容，只是在此屏幕上，您可以指定SQL格式，范围从MySQL 3.23到6.0，通过文件编码。
- en: If the target server version is different from that of your source, the direct
    transfer might fail, and you might have to resort to exporting a SQL file in this
    way.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果目标服务器版本与您的源服务器版本不同，直接传输可能会失败，您可能需要以这种方式导出SQL文件。
- en: The **Advanced** tab is where you can specify some additional settings, such
    as continuing on error and dropping target objects before creating. This means
    that any existing ones with the same name from the source will have been overwritten.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**高级**选项卡是您可以指定一些额外设置的地方，例如在错误时继续和在创建之前删除目标对象。这意味着任何现有的与源相同名称的对象将被覆盖。'
- en: As with all the other utility windows of Navicat, click on **Start** to begin
    the process when you're done configuring the settings. The process can last from
    seconds to minutes, or even hours, depending on the size of the database, the
    amount of data, the distance between two servers, and your connection speed. I
    personally do not usually have to wait for a long time to transfer my blog's database
    from the server of my web hosting company, which is on another continent, and
    my blog has some 2,860 posts including comments.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 与Navicat的所有其他实用程序窗口一样，配置设置完成后，单击**开始**开始过程。该过程可能需要几秒钟到几分钟，甚至几个小时，具体取决于数据库的大小、数据量、两个服务器之间的距离和您的连接速度。我个人通常不需要等待太长时间才能将我的博客数据库从另一个大陆上的网络托管公司的服务器转移，我的博客包括约2860篇帖子和评论。
- en: Data and structure synchronization
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据和结构同步
- en: If you have multiple instances of your database across different servers, for
    example, one for development, one for testing, and one other for production, it
    can be challenging that, for consistency, sometimes making a change in one (most
    likely in development) requires applying the exact same changes to the others.
    We as humans often make the mistake of neglecting one or more changes on all of
    the servers and end up with unexpected errors after deployment.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在不同服务器上有多个数据库实例，例如一个用于开发，一个用于测试，另一个用于生产，有时要保持一致性可能会很具挑战性，有时在一个服务器上进行更改（很可能是在开发中）需要将完全相同的更改应用到其他服务器上。我们人类经常会忽略一个或多个服务器上的更改，最终在部署后出现意外错误。
- en: Navicat comes to the rescue in this area as well, with its structure and data
    synchronization wizards accessible from the **Tools** menu.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Navicat在这个领域也提供了帮助，其结构和数据同步向导可从**工具**菜单中访问。
- en: Another situation where the synchronization tools could be useful is in cases
    where a previously performed data transfer operation is not successfully completed.
    The target database can be retouched using structure and data synchronization
    afterwards.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个同步工具可能有用的情况是，之前执行的数据传输操作未成功完成。目标数据库可以在此之后使用结构和数据同步进行修饰。
- en: 'The usage of both tools is more or less identical to the **Data Transfer**
    interface, where you can thoroughly designate which source and target database
    objects you want to be compared and in what detail. For example, in **Structure
    Synchronization**, you can opt to compare tables along with primary keys, foreign
    keys, and indexes, but also choose to exclude triggers, character set, and the
    auto-increment value under the **General** (**General Settings** on the Mac) tab.
    As such, you can specify your choice of the type of SQL commands to be executed
    by clicking on the appropriate checkboxes, as you have CREATE, ALTER, and DROP
    to choose from. You can even check an option to compare again after execution
    of the process. In the Windows version of Navicat, there is a button labeled **Compare**
    at the lower-right corner of the window. On the Mac version, the button is on
    the upper left-hand side in the window''s toolbar with a scales icon. Click on
    it to begin the comparison of the structure of the source and target databases.
    Refer to the following screenshot:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个工具的使用方式与**数据传输**界面几乎相同，您可以彻底指定要比较的源和目标数据库对象以及详细信息。例如，在**结构同步**中，您可以选择比较表以及主键、外键和索引，还可以选择排除触发器、字符集和**常规**（Mac上为**常规设置**）选项卡下的自动增量值。因此，您可以通过单击适当的复选框来指定要执行的SQL命令类型，例如CREATE、ALTER和DROP。您甚至可以选中一个选项，在执行过程后再次进行比较。在Navicat的Windows版本中，窗口的右下角有一个标有**比较**的按钮。在Mac版本中，按钮位于窗口工具栏的左上角，带有一个天平图标。单击它开始比较源和目标数据库的结构。请参考以下截图：
- en: '![Data and structure synchronization](img/7461EN_03_11_structure_sync.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![数据和结构同步](img/7461EN_03_11_structure_sync.jpg)'
- en: Next, we will need to go to the second tab named **Comparison** (**Compare Result**
    on the Mac), which will give us a sort of preview of what differences exist between
    the source and the target, and the SQL queries for synchronization will be listed
    as per the required modification in the second half of the window. You can individually
    select which queries are to be executed by clicking on their corresponding checkboxes,
    or click anywhere in the list to display a pop-up menu, which will allow you to
    select/unselect all, as well as copy the SQL syntax.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要转到名为**比较**（Mac上为**比较结果**）的第二个选项卡，它将为我们提供源和目标之间存在的差异的预览，并且将列出用于同步的SQL查询，这些查询将根据窗口后半部分的所需修改进行列出。您可以通过单击相应的复选框来单独选择要执行的查询，或者单击列表中的任何位置以显示弹出菜单，该菜单将允许您选择/取消选择所有内容，并复制SQL语法。
- en: When you're done with it, click on **Run Query** to proceed. Then, you can watch
    the **Message Log** to see the results.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，单击**运行查询**继续。然后，您可以观看**消息日志**以查看结果。
- en: 'The **Data Synchronization** is slightly simpler where you simply select the
    source and target databases. Navicat automatically lists and matches the tables
    from both sides, so that you can verify if there''s a correspondence for each
    table on both sides. Under the **Advanced** tab, you can specify whether or not
    you want to:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据同步**稍微简单，您只需选择源和目标数据库。Navicat会自动列出并匹配双方的表，以便您可以验证双方每个表是否有对应。在**高级**选项卡下，您可以指定是否要：'
- en: Use transactions
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用事务
- en: Show synchronization detail
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示同步详细信息
- en: Insert records
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插入记录
- en: Delete records
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除记录
- en: Update records
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更新记录
- en: Lastly, you can click on **Preview** to see how data is going to get synchronized
    and then click on the **Start** button to let it actually happen, and see the
    executed commands in the **Message Log**.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您可以单击**预览**以查看数据将如何同步，然后单击**开始**按钮让它实际发生，并在**消息日志**中查看执行的命令。
- en: Backup and restore
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 备份和恢复
- en: In case of a disaster, be it an electricity outage leading to a disk failure
    causing corruption of the database, or simply a user error of deletion of the
    wrong objects or data rows ending in data loss, it is crucial to back up your
    database. Navicat lets you back up all **Tables** (and their records), **Views**,
    **Functions**, and **Events** of your database for restoring later.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在灾难发生时，无论是电力中断导致磁盘故障导致数据库损坏，还是简单地用户错误删除了错误的对象或数据行导致数据丢失，都至关重要备份您的数据库。Navicat允许您备份所有**表**（及其记录）、**视图**、**函数**和**事件**，以便以后恢复。
- en: There's a big **Backup** button with a tape cassette icon on the toolbar of
    Navicat's main window, which will take you to a special view for managing backups,
    where a smaller toolbar appears under the main toolbar. This smaller toolbar has
    smaller buttons for creating a new backup, restoring a backup, or deleting it,
    plus a button for extracting SQL from the backups.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在Navicat主窗口的工具栏上有一个带有磁带盒图标的大**备份**按钮，它将带您进入一个专门用于管理备份的特殊视图，在主工具栏下方出现一个较小的工具栏。这个较小的工具栏有用于创建新备份、恢复备份或删除备份的较小按钮，以及用于从备份中提取SQL的按钮。
- en: 'To create a new backup, follow these steps:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建新的备份，请按照以下步骤操作：
- en: Click on the **New Backup** button from the object pane toolbar (in the Windows
    version), or right-click anywhere in the object pane itself and select **New Backup**
    from the pop-up menu (Windows & Mac).
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从对象窗格工具栏（在Windows版本中）单击**新备份**按钮，或者在对象窗格本身的任何位置右键单击，然后从弹出菜单中选择**新备份**（Windows和Mac）。
- en: In the window that appears, enter the properties of the backup you want to make,
    such as your own comment for the backup and the objects to be included in the
    backup. (All of the objects are selected by default.)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在出现的窗口中，输入您想要进行备份的备份的属性，例如备份的自己的评论和要包括在备份中的对象。（默认情况下选择所有对象。）
- en: Then, click on **Start** to perform the backup with the specified settings.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，单击**开始**以使用指定的设置执行备份。
- en: Navicat also provides some advanced options here, such as compression, table
    locking, and the ability to use a single transaction for InnoDB tables.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: Navicat还在这里提供了一些高级选项，例如压缩、表锁定以及在InnoDB表中使用单个事务的能力。
- en: Note
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you choose to use compression in the **Advanced** tab, a backup file with
    a `.psc` extension or with a `.psb` extension will be created.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果选择在**高级**选项卡中使用压缩，将创建具有`.psc`扩展名或`.psb`扩展名的备份文件。
- en: Right-clicking on a backup and selecting **Object Information** from the pop-up
    menu will open an additional pane at the bottom of the window where you can see
    the size and full path of the file, as well as the last modification date. The
    backups are saved as single files in a hierarchy of subfolders under **My Documents**,
    by default. For example, my backups were stored in `C:\Users\GO\Documents\Navicat\MySQL\servers\localhost\sakila\sakila_bu.psc`.
    You can copy or move a backup file in the `.psc` or `.psb` format to another computer
    just like working with any other file on Windows Explorer or Macintosh Finder.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 右键单击备份并从弹出菜单中选择**对象信息**将在窗口底部打开一个附加窗格，您可以在其中查看文件的大小和完整路径，以及最后修改日期。备份默认保存为**我的文档**下子文件夹的层次结构中的单个文件。例如，我的备份存储在`C:\Users\GO\Documents\Navicat\MySQL\servers\localhost\sakila\sakila_bu.psc`中。您可以像在Windows资源管理器或Macintosh
    Finder中处理任何其他文件一样，将`.psc`或`.psb`格式的备份文件复制或移动到另一台计算机。
- en: Restoring a backup is even simpler. You can right-click on a backup from the
    list of your backups, and click on **Restore Backup** from the pop-up menu. To
    restore a backup that is created on another machine and copied to the computer
    you're using, click on the **Restore Backup** button on the toolbar. Otherwise,
    right-click on an empty area of the object pane and select **Restore Backup**
    from the pop-up menu, and select the backup file using the open file dialog box.
    Make sure you have the necessary privileges for the create, drop, and insert operations
    unless you're connected to the database with the **root** user.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 恢复备份甚至更简单。您可以右键单击备份列表中的备份，然后从弹出菜单中单击**恢复备份**。要恢复在另一台计算机上创建并复制到您正在使用的计算机上的备份，请单击工具栏上的**恢复备份**按钮。否则，右键单击对象窗格的空白区域，从弹出菜单中选择**恢复备份**，并使用打开文件对话框选择备份文件。除非使用**root**用户连接到数据库，否则请确保您具有创建、删除和插入操作的必要权限。
- en: For deleting an unwanted backup, you can also right-click on it and select **Delete**.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除不需要的备份，您也可以右键单击它并选择**删除**。
- en: 'Backups can also be created from the command-line interface running the following
    commands:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 备份也可以通过运行以下命令从命令行界面创建：
- en: '| Navicat Object | Command and parameter | File Extension |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: Navicat对象 | 命令和参数 | 文件扩展名
- en: '| --- | --- | --- |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Backup | `Navicat.exe /backup ConnectionName DatabaseName` | `.psc` (compressed)/`.psb`
    (uncompressed) |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| 备份 | `Navicat.exe /backup ConnectionName DatabaseName` | `.psc`（压缩）/`.psb`（未压缩）
    |'
- en: '| Backup Server | `Navicat.exe /backupserver ConnectionName` |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| 备份服务器 | `Navicat.exe /backupserver ConnectionName` |'
- en: '| Backup Database | `Navicat.exe /backupdatabase ConnectionName DatabaseName`
    |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| 备份数据库 | `Navicat.exe /backupdatabase ConnectionName DatabaseName` |'
- en: Creating and scheduling batch jobs
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和安排批处理作业
- en: The execution of a series of tasks on a computer or server without manual intervention
    is known as **batch processing**, and it is something that most DBAs do daily
    if not all the time. These tasks are called **jobs** , which are set up so that
    they run in the background unattended, with all the input data preselected through
    scripts or command-line parameters.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机或服务器上执行一系列任务而无需手动干预称为**批处理处理**，这是大多数数据库管理员每天都在做的事情，如果不是一直在做。这些任务称为**作业**，设置它们可以在后台无人值守地运行，所有输入数据都是通过脚本或命令行参数预先选择的。
- en: Navicat provides a similar functionality allowing you to create batch jobs and
    set schedules, which can be executed at defined intervals or at a specific date
    and time, or both.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: Navicat提供了类似的功能，允许您创建批处理作业并设置计划，可以在定义的间隔或特定日期和时间执行，或两者兼而有之。
- en: Batch jobs can be created for query, report printing, backup, data transfer,
    data synchronization, and data import and export. You can define a list of actions
    to be executed within a single batch job, which can be run manually at will, or
    scheduled to run at a specified time or even periodically.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 批处理作业可以用于查询、报表打印、备份、数据传输、数据同步以及数据导入和导出。您可以定义要在单个批处理作业中执行的操作列表，可以手动运行，也可以安排在指定时间运行，甚至可以定期运行。
- en: You can switch to the view related with batch jobs and schedules by choosing
    **View** | **Schedule** from the menu bar or pressing the button with the calendar
    icon in the main toolbar.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过选择菜单栏中的**查看** | **计划**或按下主工具栏上的日历图标按钮切换到与批处理作业和计划相关的视图。
- en: 'To create a new batch job, follow these steps:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建新的批处理作业，请按照以下步骤进行：
- en: Click on the empty area in the object pane.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击对象窗格中的空白区域。
- en: Right-click and select **New Batch Job** from the pop-up menu, or click on the
    **New Batch Job** button from the object pane toolbar.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击并从弹出菜单中选择**新批处理作业**，或者从对象窗格工具栏中单击**新批处理作业**按钮。
- en: Enter the properties for the job that basically consists of selecting the actions
    to be performed, by selecting them from available jobs, putting them in the desired
    order, and specifying some advanced settings such as configuring e-mail notification,
    as shown in the following screenshot:![Creating and scheduling batch jobs](img/7461EN_03_12_batch_job.jpg)
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入作业的属性基本上包括从可用作业中选择要执行的操作，将它们按照所需顺序放置，并指定一些高级设置，例如配置电子邮件通知，如下图所示：![创建和安排批处理作业](img/7461EN_03_12_batch_job.jpg)
- en: You can set the timing of the execution of this job by pressing the **Set Task
    Schedule** button on the toolbar. This brings in another pop-up window, where
    you can set the periods or frequency of the job under the **Schedule** tab, or
    specify the start date and the optional end date as well as the number of repetitions.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过按下工具栏上的**设置任务计划**按钮来设置此作业的执行时间。这将带来另一个弹出窗口，在其中您可以在**计划**选项卡下设置作业的周期或频率，或指定开始日期和可选的结束日期，以及重复次数。
- en: The **Advanced** tab lets you configure e-mail so that a user or a group of
    users can be notified of the results after the batch job is automatically run.
    It is even possible to attach a file output from Export Wizard or Data Transfer
    with the e-mail automatically generated and sent.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 高级选项卡允许您配置电子邮件，以便在批处理作业自动运行后通知用户或一组用户的结果。甚至可以附加从导出向导或数据传输中生成并发送的电子邮件的文件输出。
- en: To create a batch job based on an existing one, select a job and then click
    on **Design Batch Job**, either on the object pane toolbar, or select it from
    the pop-up menu triggered by right-clicking on the job. After you finish your
    modifications, you can click on the **Save As** button on the toolbar of the editor
    window or Select **File** | **Save as...** from the menu bar.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 要基于现有作业创建批处理作业，请选择作业，然后单击对象窗格工具栏上的“设计批处理作业”，或者从右键单击作业触发的弹出菜单中选择它。完成修改后，您可以单击编辑窗口工具栏上的“另存为”按钮，或者从菜单栏中选择“文件”|“另存为…”。
- en: Another quick and easy way of achieving the same result is by simply copying
    and pasting the job after selecting it and then performing the desired modifications
    on the duplicated job.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 实现相同结果的另一种快速简便的方法是在选择作业后复制并粘贴作业，然后对复制的作业进行所需的修改。
- en: Summary
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have dealt with different techniques of data manipulation,
    transferring data from one database to another, and converting it to and from
    various file formats.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经处理了不同的数据操作技术，将数据从一个数据库转移到另一个数据库，并将其转换为各种文件格式。
- en: You have also learned to synchronize two instances of a database by means of
    both structure and data.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 您还学会了通过结构和数据的方式同步数据库的两个实例。
- en: Backup and restore operations, as well as batch job creation and scheduling,
    are also essential in the lifecycle of a database (and in the life of a DBA) and
    you have learned how to use the fast and easy tools Navicat provides to accomplish
    these kinds of tasks.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 备份和恢复操作，以及批处理作业的创建和调度，在数据库的生命周期（以及DBA的生活）中也是必不可少的，您已经学会了如何使用Navicat提供的快速简便工具来完成这些任务。
- en: In the next chapter, you will step into data modeling with Navicat.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将进入Navicat的数据建模。
