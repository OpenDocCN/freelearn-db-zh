- en: An Introduction to MYSQL 8
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL 8简介
- en: MySQL is a well-known open source structured database because of its performance,
    easiness to use, and reliability. This is the most common choice of web applications
    for a relational database. In the current market, thousands of web-based applications
    rely on MySQL including giant industries such as Facebook, Twitter, and Wikipedia.
    It has also proven to be the database choice for **Software as a Service** (**SaaS**)
    based applications such as Twitter, YouTube, SugarCRM, Supply Dynamics, Workday,
    RightNow, Omniture, Zimbra, and many more. We will discuss this in detail in the
    *use cases of MySQL* section later in the chapter. MySQL was developed by MySQL
    AB, a Swedish company, and now it is distributed and supported by Oracle Corporation.
    MySQL carries a valuable history with it.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL是一个著名的开源结构化数据库，因为其性能、易用性和可靠性。这是关系数据库的最常见选择。在当前市场上，成千上万的基于Web的应用程序依赖于MySQL，包括Facebook、Twitter和Wikipedia等巨头行业。它还被证明是“软件即服务”（SaaS）应用程序的数据库选择，如Twitter、YouTube、SugarCRM、Supply
    Dynamics、Workday、RightNow、Omniture、Zimbra等等。我们将在本章后面的“MySQL的用例”部分详细讨论这一点。MySQL由瑞典公司MySQL
    AB开发，现在由Oracle Corporation分发和支持。MySQL带有宝贵的历史。
- en: MySQL has continued to improve in order to become an enterprise-level database
    management system. MySQL 8 is expected to be a game-changer as today we are in
    the age of digitization. MySQL 8 is all tuned to serve many new use cases that
    in prior versions were difficult to achieve. Some of the use cases an enormous
    amount of data is produced are social networking, e-commerce, bank/credit card
    transactions, emails, data stored on the cloud, and so on. Analysis of all such
    structured, unstructured, or semi-structured ubiquitous data helps to discover
    hidden patterns, market trends, correlations, personal preferences.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL一直在不断改进，以成为企业级数据库管理系统。预计MySQL 8将成为一个改变游戏规则的版本，因为今天我们处于数字化时代。MySQL 8已经调整好了，以满足以前版本中难以实现的许多新用例。一些产生大量数据的用例包括社交网络、电子商务、银行/信用卡交易、电子邮件、存储在云上的数据等等。对所有这些结构化、非结构化或半结构化的普遍数据进行分析有助于发现隐藏的模式、市场趋势、相关性和个人偏好。
- en: '"There is so much for each of us"'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '"我们每个人都有很多东西"'
- en: '- James Truslow Adams'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '- 詹姆斯·特鲁斯洛·亚当斯'
- en: Let's take an in-depth look at MySQL 8 new features, benefits, use cases along
    with a few limitations of MySQL 8 after we have an overview of MySQL. This is
    going to be exciting, let's get prepared.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解MySQL 8的新功能、优势、用例以及MySQL 8的一些限制，这是令人兴奋的，让我们做好准备。
- en: Overview of MySQL
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL概述
- en: '**Structured Query Language** (**SQL**) is used to manipulate, retrieve, insert,
    update, and delete data in **relational database management system** (**RDBMS**).
    To make it simpler, SQL tells the database what to do and exactly what it needs.
    SQL is a standard language that all RDBMS systems such as MySQL, MS Access, MS
    SQL, Oracle, Postgres, and others use.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 结构化查询语言（SQL）用于操作、检索、插入、更新和删除关系数据库管理系统（RDBMS）中的数据。简单地说，SQL告诉数据库要做什么，以及它需要什么。SQL是所有RDBMS系统（如MySQL、MS
    Access、MS SQL、Oracle、Postgres等）使用的标准语言。
- en: RDBMS is the basis for SQL and for all modern database systems such as MS SQL
    Server, IBM DB2, Oracle, MySQL, and Microsoft Access.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 关系数据库管理系统是SQL和所有现代数据库系统（如MS SQL Server、IBM DB2、Oracle、MySQL和Microsoft Access）的基础。
- en: SQL allows users to access data from MySQL and define and manipulate the data.
    To embed within other languages, you can leverage SQL modules, libraries, and
    precompilers, which can help you create/drop databases and tables, allow users
    to create the view, and stored procedures, functions, and so on, in a database.
    It can do various other operations such as allowing users to set permissions on
    tables, procedures, and views.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: SQL允许用户从MySQL访问数据并定义和操作数据。要嵌入其他语言，您可以利用SQL模块、库和预编译器，这些可以帮助您创建/删除数据库和表，允许用户创建视图和存储过程、函数等等。它还可以执行各种其他操作，如允许用户在表、存储过程和视图上设置权限。
- en: MySQL as a relational database management system
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL作为关系数据库管理系统
- en: Data in a relational database is stored in an organized format so that information
    can be retrieved easily. Data will be stored in different tables made up of rows
    and columns. However, the relationship can also be built between different tables
    that efficiently store huge data and effectively retrieve the selected data. This
    provides database operations with tremendous speed and flexibility.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 关系数据库中的数据以有组织的格式存储，以便可以轻松检索信息。数据将存储在由行和列组成的不同表中。然而，还可以在不同表之间建立关系，有效地存储大量数据并有效地检索所选数据。这为数据库操作提供了巨大的速度和灵活性。
- en: As a relational database, MySQL has capabilities to establish relationships
    with different tables such as one to many, many to one, and one to one by providing
    primary keys, foreign keys, and indexes. It can also perform joins between tables
    to retrieve exact information such as inner joins and outer joins.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 作为关系数据库，MySQL具有与不同表建立关系的能力，如一对多、多对一和一对一，通过提供主键、外键和索引。它还可以执行表之间的连接以检索精确的信息，如内连接和外连接。
- en: SQL is used as an interface to interact with the relational data in MySQL. SQL
    is an **American National Standard Institute** (**ANSI**) standard language which
    we can operate with data such as creation, deletion, updating, and retrieval.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: SQL用作与MySQL中的关系数据交互的接口。SQL是美国国家标准学会（ANSI）的标准语言，我们可以用它操作数据，如创建、删除、更新和检索。
- en: License requirements of MySQL8
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL8的许可要求
- en: Many industries prefer open source technology because of the technology's flexibility
    and cost-saving features, while MySQL has put its footprint in the market by becoming
    the most popular relational database for web applications. Open source means that
    you can view the source of MySQL and customize it based on your needs without
    any cost. You can download the source or binary files from its site and use them
    accordingly.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 许多行业更喜欢开源技术，因为该技术具有灵活性和节省成本的特点，而MySQL通过成为最受欢迎的Web应用程序关系数据库而在市场上留下了自己的足迹。开源意味着您可以查看MySQL的源代码，并根据自己的需求进行定制，而无需任何费用。您可以从其网站下载源代码或二进制文件，并相应地使用它们。
- en: The MySQL server is covered under the **General Public License** (**GNU**),
    which means that we can freely use it for web applications, study its source code,
    and modify it to suit our needs. It also has the Enterprise Edition as well with
    advanced features included. Many enterprises still purchase the support contract
    from MySQL to get assistance on various issues.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL服务器受到**通用公共许可证**（**GNU**）的保护，这意味着我们可以自由地将其用于Web应用程序，研究其源代码，并修改以满足我们的需求。它还有企业版，包括高级功能。许多企业仍然购买MySQL的支持合同，以获取有关各种问题的帮助。
- en: Reliability and scalability
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可靠性和可扩展性
- en: MySQL has great reliability to perform well without requiring extensive troubleshooting
    due to bottlenecks or other slowdowns. It also incorporates a number of performance
    enhanced mechanisms such as index support, load utilities, and memory caches.
    MySQL uses InnoDB as a storage engine, which provides highly efficient ACID compliant
    transactional capabilities that assure high performance and scalability. To handle
    the rapidly growing database, MySQL Replication and cluster help scale out the
    database.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL具有出色的可靠性，无需进行大量故障排除即可良好运行。它还包括许多性能增强机制，如索引支持，负载实用程序和内存缓存。MySQL使用InnoDB作为存储引擎，提供高效的ACID兼容事务功能，确保高性能和可扩展性。为了处理不断增长的数据库，MySQL复制和集群有助于扩展数据库。
- en: Platform compatibility
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 平台兼容性
- en: MySQL has great cross-platform availability that makes it more popular. It is
    flexible to run on major platforms such as RedHat, Fedora, Ubuntu, Debian, Solaris,
    Microsoft Windows, and Apple macOS. It also provides **Application Programming
    Interface** (**APIs**) to interconnect with various programming languages such
    as C, C++, C#, PHP, Java, Ruby, Python, and Perl.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL具有出色的跨平台可用性，这使其更受欢迎。它灵活地运行在主要平台上，如RedHat，Fedora，Ubuntu，Debian，Solaris，Microsoft
    Windows和Apple macOS。它还提供**应用程序编程接口**（**APIs**）以与各种编程语言（如C，C++，C#，PHP，Java，Ruby，Python和Perl）进行互连。
- en: Releases
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布
- en: 'Here is a list of major releases of MySQL so far:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，MySQL的主要版本发布列表如下：
- en: Version 5.0 GA was released on 19th October, 2005
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 5.0 GA版本于2005年10月19日发布
- en: Version 5.1 GA was released on 14th November, 2008
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 5.1 GA版本于2008年11月14日发布
- en: Version 5.5 GA was released on 3rd December, 2010
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 5.5 GA版本于2010年12月3日发布
- en: Version 5.6 GA was released on 5th February, 2013
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 5.6 GA版本于2013年2月5日发布
- en: Version 5.7 GA was released on 21st October, 2015
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 5.7 GA版本于2015年10月21日发布
- en: Now it's time for the major version release--MySQL 8--which was announced on
    12th September, 2016 and is still in the development milestone mode.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候进行主要版本发布了--MySQL 8--它于2016年9月12日宣布，并仍处于开发里程碑模式。
- en: Core features in MySQL
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL的核心功能
- en: Let's look back and quickly glance through some of the core features in MySQL.
    We will be discussing various features throughout the book in detail as we progress.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下MySQL的一些核心功能。随着我们的进展，我们将在整本书中详细讨论各种功能。
- en: Structured database
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结构化数据库
- en: Structured databases are traditional databases that have been used by many enterprises
    for more than 40 years. However, in the modern world, data volume is becoming
    bigger and bigger and a common need has taken its place--data analytics. Analytics
    is becoming difficult with structured databases as the volume and velocity of
    digital data grow faster by the day; we need to find a way to achieve such needs
    in an effective and efficient way. The most common database that is used as a
    structured database in the open source world is MySQL.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 结构化数据库是传统数据库，许多企业已经使用了40多年。然而，在现代世界中，数据量变得越来越大，一个常见的需求已经出现--数据分析。随着数字数据的数量和速度日益增长，使用结构化数据库进行分析变得困难；我们需要以一种有效和高效的方式满足这些需求。在开源世界中，最常用作结构化数据库的数据库是MySQL。
- en: Many organizations use a structured database to store their data in an organized
    way with the formatted repository. Basically, data in a structured database has
    a fixed field, a predefined data length, and defines what kind of data is to be
    stored such as numbers, dates, time, addresses, currencies, and so on. In short, the
    structure is already defined before data gets inserted, which gives a clearer
    idea of what data can reside there. The key advantage of using a structured database
    is  that data being easily stored, queried, and analyzed.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 许多组织使用结构化数据库以有组织的方式存储其数据。基本上，结构化数据库中的数据具有固定字段，预定义的数据长度，并定义了要存储的数据类型，例如数字，日期，时间，地址，货币等。简而言之，在插入数据之前已经定义了结构，这使得我们更清楚地知道哪些数据可以驻留在那里。使用结构化数据库的主要优势是数据易于存储，查询和分析。
- en: An unstructured database is the opposite of this; it has no identifiable internal
    structure. It can have a massive unorganized agglomerate or various objects. Mainly,
    the source of structured data is machine-generated, which means information is
    generated from the machine and without human intervention, whereas unstructured
    data is human-generated data. Organizations use structured databases for data
    such as ATM transactions, airline reservations, inventory systems, and so on.
    In the same way, some organizations use unstructured data such as emails, multimedia
    content, word processing documents, web pages, business documents, and so on.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 非结构化数据库与此相反；它没有可识别的内部结构。它可以有一个庞大的无组织的聚集或各种对象。主要，结构化数据的来源是机器生成的，这意味着信息是从机器生成的，没有人为干预，而非结构化数据是人为生成的数据。组织使用结构化数据库来存储诸如ATM交易、航空公司预订、库存系统等数据。同样，一些组织使用非结构化数据，如电子邮件、多媒体内容、文字处理文档、网页、商业文件等。
- en: Database storage engines and types
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据库存储引擎和类型
- en: 'Let''s now look at an overview of different MySQL storage engines. This is
    an important section that gives a brief of different database storage engines;
    we will be discussing this in detail in [Chapter 6](16211f16-1fc2-419a-a040-46f7970fc4cc.xhtml),
    *MySQL 8 Storage Engines*. MySQL stores data in the database as a subdirectory.
    In each database, data is stored as tables. When you create a table, MySQL stores
    the table definition in `.frm` with the same name as the table name*.* You can
    use the `SHOW TABLE STATUS` command to show information about your table:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们现在来看一下不同MySQL存储引擎的概述。这是一个重要的部分，它简要介绍了不同的数据库存储引擎；我们将在[第6章](16211f16-1fc2-419a-a040-46f7970fc4cc.xhtml)中详细讨论这个问题，*MySQL
    8存储引擎*。MySQL将数据存储在数据库中作为子目录。在每个数据库中，数据被存储为表。当你创建一个表时，MySQL将表定义存储在与表名相同的`.frm`文件中。您可以使用`SHOW
    TABLE STATUS`命令来显示有关您的表的信息：
- en: '[PRE0]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This command shows that this is an `InnoDB` table with the column name `Engine`.
    There is additional information that you can refer to for other purposes such
    as the number of rows, index length, and so on.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令显示这是一个带有列名`Engine`的`InnoDB`表。还有其他信息，您可以参考其他用途，比如行数、索引长度等。
- en: The storage engine is the way to handle SQL operations for different table types.
    Each storage engine has its own advantages and disadvantages. It is important
    to understand each storage engine's features and choose the most appropriate one
    for your tables to maximize the performance of the database. `InnoDB` is the default
    storage engine when we create a new table in MySQL 8.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 存储引擎是处理不同表类型的SQL操作的方式。每个存储引擎都有其自己的优点和缺点。了解每个存储引擎的特性，并选择最适合您的表的存储引擎，以最大限度地提高数据库的性能是很重要的。在MySQL
    8中创建新表时，`InnoDB`是默认的存储引擎。
- en: 'The MySQL server uses a plug-and-play storage engine architecture. You can
    load the required storage engine and unload unnecessary storage engines from the
    MySQL server with the help of the `SHOW ENGINES` command as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL服务器使用即插即用的存储引擎架构。您可以使用`SHOW ENGINES`命令从MySQL服务器加载所需的存储引擎，并卸载不必要的存储引擎。
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Overview of InnoDB
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: InnoDB概述
- en: '`InnoDB` is the default storage engine broadly used out of all other available
    storage engines. It was released with MySQL 5.1 as a plugin in 2008\. MySQL 5.5
    and later has `InnoDB` as a default storage engine. It has been taken over by
    Oracle Corporation in October 2005, from the Innobase Oy, which is a Finland-based
    company.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB`是所有其他可用存储引擎中广泛使用的默认存储引擎。它于2008年作为插件与MySQL 5.1一起发布。MySQL 5.5及更高版本将`InnoDB`作为默认存储引擎。它于2005年10月被Oracle
    Corporation收购，从芬兰公司Innobase Oy手中接管。'
- en: InnoDB tables support ACID-compliant commits, rollback, and crash recovery capabilities
    to protect user data. It also supports row-level locking, which helps with better
    concurrency and performance. It stores data in clustered indexes to reduce I/O
    operations for all SQL select queries based on the primary key. It also supports
    `FOREIGN KEY` constraints that allow better data integrity for the database. The
    maximum size of an InnoDB table can scale up to 64 TB, which should be good enough
    to serve many real-world use cases.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: InnoDB表支持符合ACID的提交、回滚和崩溃恢复功能，以保护用户数据。它还支持行级锁定，有助于更好的并发性和性能。它将数据存储在聚集索引中，以减少基于主键的所有SQL选择查询的I/O操作。它还支持`FOREIGN
    KEY`约束，允许更好地维护数据库的数据完整性。InnoDB表的最大大小可以扩展到64 TB，这应该足够满足许多实际用例的需求。
- en: Overview of MyISAM
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MyISAM概述
- en: '`MyISAM` was the default storage engine for MySQL prior to 5.5 1\. `MyISAM`
    storage engine tables do not support ACID-compliant as opposed to `InnoDB`. `MyISAM`
    tables support table-level locking only, so `MyISAM` tables are not transaction-safe;
    however, they are optimized for compression and speed. It is generally used when
    you need to have primarily read operations with minimal transaction data. The
    maximum size of a `MyISAM` table can grow up to 256 TB, which helps in use cases
    such as data analytics. `MyISAM` supports full-text indexing, which can help in
    complex search operations. Using full-text indexes, we can index data stored in
    `BLOB` and `TEXT` data types.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`MyISAM`是MySQL 5.5之前的默认存储引擎。`MyISAM`存储引擎表不支持ACID兼容，与`InnoDB`相反。`MyISAM`表只支持表级锁定，因此`MyISAM`表不是事务安全的；但是，它们经过了优化，用于压缩和速度。通常在需要主要读操作和最小事务数据的情况下使用。`MyISAM`表的最大大小可以增长到256
    TB，这有助于数据分析等用例。`MyISAM`支持全文索引，可以帮助进行复杂的搜索操作。使用全文索引，我们可以索引存储在`BLOB`和`TEXT`数据类型中的数据。'
- en: Overview of memory
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内存概述
- en: A memory storage engine is generally known as a heap storage engine. It is used
    to access data extremely quickly. This storage engine stores data in the RAM so
    it wouldn't need I/O operation. As it stores data in the RAM, all data is lost
    upon server restart. This table is basically used for temporary tables or the
    lookup table. This engine supports table-level locking, which limits high write
    concurrency.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 内存存储引擎通常被称为堆存储引擎。它用于极快地访问数据。这种存储引擎将数据存储在RAM中，因此不需要I/O操作。由于数据存储在RAM中，服务器重新启动时所有数据都会丢失。这种表基本上用于临时表或查找表。该引擎支持表级锁定，从而限制了高写并发性。
- en: 'Important notes about memory tables are as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 关于内存表的重要说明如下：
- en: Because memory table stores data in the RAM, which has a very limited storage
    capacity; if you try to write too much data into the memory table, it will start
    swapping data into the disk and then you lose the benefits of the memory storage
    engine
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于内存表将数据存储在RAM中，RAM的存储容量非常有限；如果尝试向内存表中写入过多数据，它将开始将数据交换到磁盘，然后您将失去内存存储引擎的好处
- en: These tables don't support `TEXT` and `BLOB` data types, and it is not even
    required as it has limited storage capacity
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些表不支持`TEXT`和`BLOB`数据类型，也不需要，因为它的存储容量有限
- en: This storage engine can be used to cache the results; lookup tables, for example,
    or postal codes and the names of states
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这种存储引擎可用于缓存结果；例如查找表、邮政编码和州名
- en: Memory tables support B-tree indexes and Hash indexes
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存表支持B树索引和哈希索引
- en: Overview of archive
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 存档概述
- en: This storage engine is used to store large amounts of historical data without
    any indexes. Archive tables do not have any storage limitations. The archive storage
    engine is optimized for high insert operations and also supports row-level locking.
    These tables store data in a compressed and small format. The archive engine does
    not support `DELETE` or `UPDATE` operations; it only allows `INSERT`, `REPLACE`,
    and `SELECT` operations.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这种存储引擎用于存储大量历史数据而不需要任何索引。存档表没有任何存储限制。存档存储引擎针对高插入操作进行了优化，并支持行级锁定。这些表以压缩和小的格式存储数据。存档引擎不支持`DELETE`或`UPDATE`操作；它只允许`INSERT`、`REPLACE`和`SELECT`操作。
- en: Overview of BLACKHOLE as a storage engine
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: BLACKHOLE存储引擎概述
- en: This storage engine accepts data but does not store it. It discards data after
    every `INSERT` instead of storing it.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这种存储引擎接受数据但不存储数据。它在每次`INSERT`后丢弃数据而不是存储数据。
- en: Now, what is the use of this storage engine; why would anybody use it? Why would
    we run an `INSERT` query that doesn't insert anything into the table?
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这种存储引擎的用途是什么；为什么有人会使用它？为什么我们要运行一个不向表中插入任何内容的`INSERT`查询？
- en: This engine is useful for replication with large number of servers. A `BLACKHOLE`
    storage engine acts as a filter server between the master and slave server, which
    do not store any data, but only apply `replicate-do-*` and `replicate-ignore-*`
    rules and write a `binlogs`. These `binlogs` are used to perform replication in
    slave servers. We will discuss this in detail in [Chapter 8](03c98d39-8cb9-4171-beb1-0bd9dcaac81a.xhtml), *Replication
    in MySQL 8*.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这种引擎对于具有大量服务器的复制非常有用。`BLACKHOLE`存储引擎充当主服务器和从服务器之间的过滤服务器，不存储任何数据，只应用`replicate-do-*`和`replicate-ignore-*`规则并写入`binlogs`。这些`binlogs`用于在从服务器中执行复制。我们将在[第8章](03c98d39-8cb9-4171-beb1-0bd9dcaac81a.xhtml)中详细讨论这一点，*MySQL
    8中的复制*。
- en: Overview of CSV
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CSV概述
- en: The **comma separated values** (**CSV**) engine stores data in the `.csv` file
    type using the comma-separated values format. This engine extracts data from the
    database and copies it to `.csv` out of the database. If you create a CSV file
    from the spreadsheet and copy it into the MYSQL data folder server, it can read
    the data using the select query. Similarly, if you write data in the table, an
    external program can read it from the CSV file. This storage engine is used for
    the exchange of data between software or applications. A CSV table does not support
    indexing and partitioning. All columns in the CSV storage engine need to be defined
    with the `NOT NULL` attribute to avoid errors during table creation.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**逗号分隔值**（**CSV**）引擎使用逗号分隔值格式将数据存储在`.csv`文件类型中。该引擎从数据库中提取数据并将其复制到数据库之外的`.csv`中。如果从电子表格创建CSV文件并将其复制到MYSQL数据文件夹服务器中，则可以使用select查询读取数据。同样，如果在表中写入数据，外部程序可以从CSV文件中读取数据。此存储引擎用于软件或应用程序之间的数据交换。CSV表不支持索引和分区。CSV存储引擎中的所有列都需要使用`NOT
    NULL`属性进行定义，以避免在创建表时出现错误。'
- en: Overview of merge
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 合并概述
- en: This storage engine is also known as an `MRG_MyISAM` storage engine. This storage
    engine merges a `MyISAM` table and creates it to be referred to a single view.
    For a merge table, all columns are listed in the same order. These tables are
    good for data warehousing environments.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这种存储引擎也被称为`MRG_MyISAM`存储引擎。这种存储引擎合并`MyISAM`表并将其创建为单个视图。对于合并表，所有列都按相同顺序列出。这些表非常适用于数据仓库环境。
- en: The table is used to manage log-related tables, generally. You can create different
    months of logs in separate `MyISAM` tables and merge these tables using the merge
    storage engine.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 该表通常用于管理与日志相关的表。您可以在单独的`MyISAM`表中创建不同月份的日志，然后使用合并存储引擎合并这些表。
- en: '`MyISAM` tables have storage limit for the operating system, but a collection
    of `MyISAM` (merge) tables do not have storage limits. So using a merge table
    would allow you to split data into multiple `MyISAM` tables, which can help in
    overcoming storage limits.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '`MyISAM`表对操作系统有存储限制，但`MyISAM`（合并）表集合没有存储限制。因此，使用合并表可以将数据分割成多个`MyISAM`表，有助于克服存储限制。'
- en: Merge tables do not support partitioning. Also, you cannot partition a merge
    table or any of a merge table's underlying `MyISAM` tables in a different partition.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 合并表不支持分区。此外，您不能将合并表或合并表的任何基础`MyISAM`表分区到不同的分区中。
- en: Overview of federated
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联合概述
- en: This storage engine allows you to create a single database on a multiple physical
    server. It opens a client connection to another server and executes queries against
    a table there, retrieving and sending rows as needed. It was originally marketed
    as a competitive feature that supported many enterprise-grade proprietary database
    servers, such as Microsoft SQL Server and Oracle, but that was always a stretch,
    to say the least. Although it seemed to enable a lot of flexibility and neat tricks,
    it has proven to be a source of many problems and is disabled by default. This
    storage engine is disabled by default in MySQL; to enable it, you need to start
    the MySQL server binary using the federated option.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这个存储引擎允许您在多个物理服务器上创建一个单一的数据库。它打开到另一个服务器的客户端连接，并对那里的表执行查询，根据需要检索和发送行。它最初被宣传为支持许多企业级专有数据库服务器的竞争特性，如Microsoft
    SQL Server和Oracle，但至少可以说，这总是一个牵强的说法。尽管它似乎能够实现很多灵活性和巧妙的技巧，但它已经被证明是许多问题的根源，并且默认情况下是禁用的。这个存储引擎在MySQL中默认是禁用的；要启用它，您需要使用联合选项启动MySQL服务器二进制文件。
- en: Overview of the NDB cluster
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NDB集群概述
- en: NDB cluster (also known as **NDB**) is an in-memory storage engine offering
    high availability and data persistence features.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: NDB集群（也称为**NDB**）是一种内存存储引擎，提供高可用性和数据持久性功能。
- en: The NDB cluster storage engine can be configured with a range of failover and
    load balancing options, but it is easiest to start with the storage engine at
    the cluster level. NDB cluster uses the NDB storage engine that contains a complete
    set of data, which is dependent only on other datasets available within the cluster.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: NDB集群存储引擎可以配置一系列故障转移和负载平衡选项，但最容易的方法是从集群级别开始使用存储引擎。NDB集群使用NDB存储引擎，其中包含完整的数据集，仅依赖于集群中可用的其他数据集。
- en: The cluster portion of the NDB cluster is configured independently of the MySQL
    servers. In an NDB cluster, each part of the cluster is considered to be a node.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: NDB集群的部分是独立配置的，与MySQL服务器无关。在NDB集群中，集群的每个部分被视为一个节点。
- en: 'Each storage engine has its own advantage and usability, as follows:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 每个存储引擎都有其自己的优势和可用性，如下所示：
- en: '**Search Engine**: NDBCluster'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**搜索引擎**：NDBCluster'
- en: '**Transactions** **data**: `InnoDB`'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**事务** **数据**：`InnoDB`'
- en: '**Session data**: `MyISAM` or NDBCluster'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**会话数据**：`MyISAM`或NDBCluster'
- en: '**Localized calculations**: Memory'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地化计算**：内存'
- en: '**Dictionary**: `MyISAM`'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**字典**：`MyISAM`'
- en: 'The following diagram will help you understand which store engine you need
    to use for your requirement:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表将帮助您了解哪种存储引擎适合您的需求：
- en: '![](img/adca82d9-44e8-425d-81a1-c475634b7355.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/adca82d9-44e8-425d-81a1-c475634b7355.jpg)'
- en: Now you have a better idea about various storage engines along with different
    use cases, which will help you to make a decision based on your needs.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您对各种存储引擎以及不同用例有了更好的了解，这将帮助您根据自己的需求做出决策。
- en: It's time to move on to our next topic where we will look at delightful new
    features available in MySQL 8.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候转到我们的下一个主题，我们将看看MySQL 8中可用的令人愉快的新功能。
- en: Improved features in MySQL 8
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL 8中的改进功能
- en: The MySQL database development team has recently announced its major release
    as MySQL 8 **Development Milestone Release** (**DMR**). It contains significant
    updates and fixes for problems that were much needed.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL数据库开发团队最近宣布了其主要版本MySQL 8 **开发里程碑发布**（**DMR**）。它包含了对迫切需要的问题的重大更新和修复。
- en: You might be wondering why it's 8 after 5.7! Were the intermediate versions,
    that is, 6 and 7, miss out? Of course not! Actually, 6.0 was preserved as part
    of the changeover to a more frequent and timely release, while 7.0 for the clustering
    version of MySQL.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会想知道为什么是5.7之后的8！中间版本，也就是6和7，被跳过了吗？当然不是！实际上，6.0作为更频繁和及时发布的转变的一部分被保留了下来，而7.0则是MySQL的集群版本。
- en: 'Let''s see some exciting features that have been introduced in this latest
    version, as depicted in the following diagram:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看在这个最新版本中引入的一些令人兴奋的功能，如下图所示：
- en: '![](img/d9b442dc-1adf-41ba-b221-7816d29a0309.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d9b442dc-1adf-41ba-b221-7816d29a0309.png)'
- en: It's time to look at MySQL 8 features in detail, which makes us excited and
    convinced about the reasons for a major version upgrade of MySQL.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候详细了解MySQL 8的功能了，这将使我们对升级到MySQL的主要版本有兴奋和信心的理由。
- en: Transactional data dictionary
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 事务数据字典
- en: Up until the previous version, the MySQL data dictionary was stored in different
    metadata files and non-transactional tables, but from this version onwards, it
    will have a transactional data dictionary to store the information about the database.
    No more `.frm`, `.trg`, or `.par` files. All information will be stored in the
    database, which removes the cost of performing heavy file operations. There were
    numerous issues with filesystem metadata storage such as the vulnerability of
    the filesystem, exorbitant file operations, difficult to handle crash recovery
    failures, or replication; it was also difficult to add new feature-related metadata.
    Now this upgrade has made it simple by storing information in a centralized manner,
    and will have improved performance as this data dictionary object can be cached
    in memory, similar to other database objects.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 直到上一个版本，MySQL的数据字典是存储在不同的元数据文件和非事务表中的，但从这个版本开始，它将有一个事务性数据字典来存储关于数据库的信息。不再有`.frm`、`.trg`或`.par`文件。所有信息将存储在数据库中，这消除了执行繁重文件操作的成本。文件系统元数据存储存在许多问题，如文件系统的脆弱性、过多的文件操作、难以处理崩溃恢复故障或复制；还很难添加与新功能相关的元数据。现在这次升级通过集中存储信息使其变得简单，并且由于这个数据字典对象可以被缓存在内存中，因此性能得到了改进，类似于其他数据库对象。
- en: This data dictionary will have data that is needed for SQL query execution such
    as catalog information, character sets, collations, column types, indexes, database
    information, tables, stored procedures, functions and triggers, and so on.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数据字典将包含执行SQL查询所需的数据，如目录信息、字符集、排序规则、列类型、索引、数据库信息、表、存储过程、函数和触发器等。
- en: Roles
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 角色
- en: In MySQL 8, the privileges module has been improved by introducing roles, which
    means a collection of permissions. Now we can create roles with a number of privileges
    and assign them to multiple users.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8中，通过引入角色来改进了权限模块，这意味着权限的集合。现在我们可以创建具有多个权限的角色，并将它们分配给多个用户。
- en: The problem with the previous version was that we were not able to define generic
    permissions for a group of users and each user has individual privileges. Suppose
    if there are 1,000 users already existing that have common privileges, and you
    want to remove the write permissions for these 1,000 users, what would you have
    done in the previous version? You would have had to take the time-consuming approach
    of updating each user, right? Arrgh! That's a long, long task.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 以前版本的问题是我们无法为一组用户定义通用权限，每个用户都有单独的权限。假设已经存在1,000个具有共同权限的用户，并且您想要删除这1,000个用户的写入权限，那么在以前的版本中该怎么做呢？您将不得不采取耗时的方法来更新每个用户，对吗？哎呀！那是一个漫长的任务。
- en: Now with MySQL 8, it is easy to update any change in privileges. Roles will
    define all the required privileges and this role will be assigned to those 1,000
    users. We just need to make any privilege changes in the role and all users will
    automatically inherit the respective privileges.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在使用MySQL 8，很容易更新权限的任何更改。角色将定义所有所需的权限，并且该角色将分配给那1,000个用户。我们只需要在角色中进行任何权限更改，所有用户将自动继承相应的权限。
- en: Roles can be created, deleted, grant or revoke permission, grant or revoke from
    the user account, and can specify the default role within the current session.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 角色可以创建、删除、授予或撤销权限，从用户账户中授予或撤销权限，并且可以在当前会话中指定默认角色。
- en: InnoDB auto increment
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: InnoDB自动增量
- en: MySQL 8 has changed the auto-increment counter value store mechanism. Previously,
    it was stored in the memory, which was quite difficult to manage during server
    restarts or server crashes. However, now the auto-increment counter value is written
    into the redo log whenever the value gets changed and, on each checkpoint, it
    will be saved in the system table, which makes it persistent across the server
    restart.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8已经改变了自动增量计数器值存储机制。以前，它存储在内存中，在服务器重启或服务器崩溃时管理起来相当困难。然而，现在自动增量计数器值在值发生更改时会被写入重做日志，并且在每个检查点上，它将被保存在系统表中，这使得它在服务器重启时是持久的。
- en: With the previous version, update of the auto-increment value may have caused
    duplicate entry errors. Suppose if you updated the value of auto-increment in
    the middle of the sequence with a larger than the current maximum value, but then
    subsequent insert operations could not identify the unused values, which could
    cause a duplicate entry issue. This has been prevented by persisting the auto-increment
    value, hence subsequent insert operations can get the new value and allocate it
    properly.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在以前的版本中，更新自动增量值可能会导致重复条目错误。假设您在序列中更新了自动增量值，该值大于当前最大值，但随后的插入操作无法识别未使用的值，这可能会导致重复条目问题。通过持久化自动增量值来防止这种情况发生，因此随后的插入操作可以获取新值并正确分配它。
- en: If server restart happened, the auto-increment value was lost with the previous
    version as it was stored in memory and `InnoDB` needed to execute a query to find
    out the maximum used value. This has been changed, as the newer version has the
    capability to persist its value across the server restart. During the server restart,
    `InnoDB` initializes the counter value in memory using the maximum value stored
    in the data dictionary table. In case of server crashes, `InnoDB` initializes
    the auto-increment counter value that is bigger than the data dictionary table
    and the redo log.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发生服务器重启，自动增量值会在以前的版本中丢失，因为它存储在内存中，`InnoDB`需要执行查询来找出最大使用的值。这已经改变了，因为新版本具有在服务器重启时持久化其值的能力。在服务器重启期间，`InnoDB`使用数据字典表中存储的最大值来初始化内存中的计数器值。在服务器崩溃的情况下，`InnoDB`初始化自动增量计数器值，该值大于数据字典表和重做日志。
- en: Invisible indexes
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不可见的索引
- en: MySQL 8 provides you with a feature to make indexes invisible. These kinds of
    indexes cannot be used by the optimizer. In case you want to test the query performance
    without indexes, using this feature you can do so by making them invisible rather
    than dropping and re-adding an index. This is a handy feature when indexing is
    supposed to be dropped and recreated on huge datasets.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8提供了一个功能，可以使索引不可见。这种索引不能被优化器使用。如果您想在没有索引的情况下测试查询性能，使用此功能可以通过使它们不可见来实现，而不是删除和重新添加索引。在索引应该在大型数据集上被删除和重新创建时，这是一个方便的功能。
- en: 'All indexes are visible by default. To make them invisible or visible, `INVISIBLE`
    and `VISIBLE` keywords are used respectively, as described in the following code
    snippet:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 所有索引默认可见。要使它们不可见或可见，分别使用`INVISIBLE`和`VISIBLE`关键字，如下面的代码片段所述：
- en: '[PRE2]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Improving descending indexes
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 改进降序索引
- en: Descending indexes existed in version 5.7 too, but they were scanned in reverse
    order, which caused performance barriers. To improve performance, MySQL 8 has
    optimized this and scanned descending indexes in forward order, which has drastically
    improved performance. It also brings multiple column indexes for the optimizer
    when the most efficient scan order has ascending order for some columns, and descending
    order for other columns.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 降序索引在5.7版本中也存在，但是它们是以相反顺序扫描的，这会导致性能障碍。为了提高性能，MySQL 8对此进行了优化，并以正向顺序扫描降序索引，这大大提高了性能。当最有效的扫描顺序对某些列具有升序顺序，对其他列具有降序顺序时，它还为优化器带来了多列索引。
- en: The SET PERSIST variant
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`SET PERSIST`变体'
- en: 'Server variables can be configured globally and dynamically while the server
    is running. There are numerous system variables that we can set using `SET GLOBAL`:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在服务器运行时可以全局和动态地配置服务器变量。有许多系统变量可以使用`SET GLOBAL`来设置：
- en: '[PRE3]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'However, such settings will be lost after server restart. To avoid this, MySQL
    8 has introduced the `SET PERSIST` variant, which preserves variables across a
    server restart:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，这些设置将在服务器重新启动后丢失。为了避免这种情况，MySQL 8引入了`SET PERSIST`变体，可以在服务器重新启动后保留变量。
- en: '[PRE4]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Expanded GIS support
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展的GIS支持
- en: Until the previous version, it supported only one coordinate system, a unitless
    2D place that was not referenced to a position on earth. Now MySQL 8 has added
    support for a **Spatial Reference System** (**SRS**) with geo-referenced ellipsoids
    and 2D projections. SRS helps assign coordinates to a location and establishes
    relationships between sets of such coordinates. This spatial data can be managed
    in data dictionary storage as the `ST_SPATIAL_REFERENCE_SYSTEMS` table.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在以前的版本中，它仅支持一个坐标系统，一个无单位的2D位置，不参考地球上的位置。现在MySQL 8添加了对**空间参考系统**（**SRS**）的支持，具有地理参考椭球体和2D投影。SRS有助于为位置分配坐标，并建立这些坐标集之间的关系。这些空间数据可以在数据字典存储中进行管理，如`ST_SPATIAL_REFERENCE_SYSTEMS`表。
- en: Default character set
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 默认字符集
- en: The default character set has been changed from `latin1` to `UTF8`. `UTF8` is
    the dominating character set, though it hadn't been a default one in previous
    versions of MySQL. Along with the character set default, collation has been changed
    from `latin1_swedish_ci` to `utf8mb4_800_ci_ai`. With these changes globally accepted,
    character sets and collations are now based on `UTF8`; one of the common reasons
    is because there are around 21 different languages supported by `UTF8`, which
    makes systems provide multilingual support.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 默认字符集已从`latin1`更改为`UTF8`。`UTF8`是主导字符集，尽管在以前的MySQL版本中不是默认字符集。随着字符集默认值的更改，排序规则已从`latin1_swedish_ci`更改为`utf8mb4_800_ci_ai`。随着这些全球接受的变化，字符集和排序规则现在基于`UTF8`；一个常见的原因是因为`UTF8`支持大约21种不同的语言，这使得系统提供多语言支持。
- en: Extended bit-wise operations
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展的位操作
- en: In MySQL 5.7, bit-wise operations and functions were working for `BIGINT` (64-bit
    integer) data types only. We needed to pass `BIGINT` as an argument and it would
    return the result as `BIGINT`. In short, it had maximum range up to 64 bits to
    perform operations. A user needs to do conversion to the `BIGINT` data type in
    case they want to perform it on other data types. This typecasting was not feasible
    for data types larger than 64 bits as it would truncate the actual value, which
    resulted in inaccuracy.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 5.7中，位操作和函数仅适用于`BIGINT`（64位整数）数据类型。我们需要将`BIGINT`作为参数传递，它将返回`BIGINT`作为结果。简而言之，它的最大范围为64位，可以执行操作。用户需要将其他数据类型转换为`BIGINT`数据类型，以便执行操作。对于大于64位的数据类型，这种类型转换是不可行的，因为它会截断实际值，导致不准确。
- en: MySQL 8 has improved bit-wise operations by enabling support for other binary
    data types such as `Binary`, `VarBinary`, and `BLOB`. This makes it possible to
    perform bit-wise operations on larger than 64-bit data. No more typecasting needed!
    This allows the taking of arguments and returning results larger than 64 bits.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8通过支持其他二进制数据类型（如`Binary`，`VarBinary`和`BLOB`）改进了位操作。这使得可以对大于64位的数据执行位操作。不再需要类型转换！这允许接受大于64位的参数并返回结果。
- en: InnoDB Memcached
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: InnoDB Memcached
- en: Multiple get operations are now possible with the `InnoDB` memcached plugin,
    which will really help in improving the read performance. Now, multiple key value
    pairs can be fetched in a single memcached query. Frequent communication traffic
    has also been minimized as we can get multiple data in a single shot.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在`InnoDB` memcached插件支持多个获取操作，这将真正有助于提高读取性能。现在，可以在单个memcached查询中获取多个键值对。由于可以一次获取多个数据，频繁的通信流量也得到了最小化。
- en: Range queries are also supported by the `InnoDB` Memcached plugin. It simplifies
    range searches by specifying a particular range and retrieves values within this
    range.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB` Memcached插件还支持范围查询。通过指定特定范围，可以简化范围搜索并检索此范围内的值。'
- en: NOWAIT and SKIP LOCKED
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NOWAIT和SKIP LOCKED
- en: 'When rows are locked by other transactions that you are trying to access, then
    you need to wait for that transaction to release the lock on the same row so that
    you can access it accordingly. To avoid waiting for the other transaction, `InnoDB`
    has added support of the `NOWAIT` and `SKIP LOCKED` options. `NOWAIT` will return
    immediately with an error in case the requested row is locked rather than going
    into the waiting mode, and `SKIP LOCKED` will skip the locked row and never wait
    to acquire the row lock. Hence, `SKIP LOCKED` will not consider the locked row
    in the resulting set:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 当其他事务锁定您要访问的行时，您需要等待该事务释放对同一行的锁，以便您可以相应地访问它。为了避免等待其他事务，`InnoDB`添加了`NOWAIT`和`SKIP
    LOCKED`选项的支持。`NOWAIT`将立即返回错误，如果请求的行被锁定，而不是进入等待模式，`SKIP LOCKED`将跳过锁定的行，永远不会等待获取行锁。因此，`SKIP
    LOCKED`不会在结果集中考虑锁定的行。
- en: '[PRE5]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: JSON
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JSON
- en: 'JSON support had been implemented in MySQL 5.7; it was well-acknowledged feature.
    In MySQL 8 it has added various functions that would allow us to get dataset results
    in JSON data format, virtual columns, and tentatively 15 SQL functions that allow
    you to search and use JSON data on server side. In MySQL8 there are additional
    aggregation functions added that can be used in JSON objects/arrays to represent
    loaded data in a further optimized way. The following are the two JSON aggregation
    functions that were introduced in MySQL8:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 5.7中已实现了JSON支持；这是一个被广泛认可的功能。在MySQL 8中，它添加了各种函数，允许我们以JSON数据格式获取数据集结果，虚拟列，以及大约15个SQL函数，允许您在服务器端搜索和使用JSON数据。在MySQL8中，还添加了额外的聚合函数，可以在JSON对象/数组中使用，以更优化的方式表示加载的数据。以下是MySQL8中引入的两个JSON聚合函数：
- en: '`JSON_OBJECTAGG()`'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`JSON_OBJECTAGG()`'
- en: '`JSON_ARRAYAGG()`'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`JSON_ARRAYAGG()`'
- en: Cloud
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云
- en: In MySQL 8 a new option is introduced `innodb_dedicated_server`, which would
    be helpful for vertical scaling of the servers. It actually automatically detects
    the memory allocated to the virtual server and appropriately set MySQL 8 without
    any need to change configuration files. These would be very handy features considering
    the adoption of virtualization and cloud is there. In fact with this configuration,
    you might not even need to get shell access of server to edit the configuration
    files. You can do this with the new `SET PERSIST` feature that can set relevant
    configuration from the MySQL command line itself, which can enhance security further
    as you almost wouldn't need shell access of the server.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在MySQL 8中引入了一个新选项`innodb_dedicated_server`，这对服务器的垂直扩展将非常有帮助。它实际上会自动检测分配给虚拟服务器的内存，并适当地设置MySQL
    8，而无需更改配置文件。考虑到虚拟化和云的采用，这些功能将非常方便。实际上，使用这种配置，您甚至可能不需要获取服务器的shell访问权限来编辑配置文件。您可以使用新的`SET
    PERSIST`功能从MySQL命令行本身设置相关配置，这可以进一步增强安全性，因为您几乎不需要服务器的shell访问权限。
- en: Resource management
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 资源管理
- en: MySQL 8 has come up with a wonderful resource management feature that will allow
    you to allocate resource to threads running on a server, which would be executed
    based on the resources configured for the group. Currently, CPU time is a resource
    that can be configured for a group. With this, you can tweak your workloads with
    virtual resource management within MySQL itself. MySQL will identify on startup
    numbers of virtual CPUs available and after that users with appropriate privileges
    can map the virtual CPUs with resource group and align thread management to these
    groups.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8推出了一个出色的资源管理功能，可以让您为在服务器上运行的线程分配资源，这些资源将根据为该组配置的资源而执行。目前，CPU时间是可以为组配置的资源。通过这个功能，您可以在MySQL内部进行虚拟资源管理来调整工作负载。MySQL将在启动时识别可用的虚拟CPU数量，之后具有适当权限的用户可以将虚拟CPU映射到资源组，并将线程管理对齐到这些组。
- en: We expect to see more features by the time MySQL 8 is available for general
    use. Let us now look at benefits of using MySQL 8.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们期望在MySQL 8可供一般使用时看到更多功能。现在让我们来看看使用MySQL 8的好处。
- en: Benefits of using MySQL 8
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用MySQL 8的好处
- en: Whether you are a developer or an enterprise, you would obviously choose one
    that provides good benefits and results when compared to other related products.
    MySQL provides numerous advantages as the first choice in this competitive market.
    It has various powerful features available that make it a more comprehensive database.
    Let's now go through some benefits of using MySQL.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是开发人员还是企业，您显然会选择一个相对于其他相关产品提供更多好处和结果的产品。MySQL在这个竞争激烈的市场中作为首选提供了许多优势。它具有各种强大的功能，使其成为更全面的数据库。现在让我们来看看使用MySQL的一些好处。
- en: Security
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全性
- en: The first thing that comes to mind is securing data because nowadays data has
    become precious and can impact business continuity if legal obligations are not
    met; in fact, it can be so bad that it can close down your business in no time.
    MySQL is the most secure and reliable database management system used by many
    well-known enterprises such as Facebook, Twitter, and Wikipedia. It really provides
    a good security layer that protects sensitive information from intruders. MySQL
    gives access control management so that granting and revoking required access
    from the user is easy. Roles can also be defined with a list of permissions that
    can be granted or revoked for the user. All user passwords are stored in an encrypted
    format using plugin-specific algorithms.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 首先想到的是保护数据，因为现在数据变得非常宝贵，如果不满足法律义务，可能会影响业务连续性；事实上，情况可能会很糟糕，甚至可能会迅速关闭您的业务。MySQL是最安全可靠的数据库管理系统，被许多知名企业使用，如Facebook、Twitter和维基百科。它提供了一个良好的安全层，可以保护敏感信息免受入侵者的侵害。MySQL提供访问控制管理，因此很容易向用户授予和撤销所需的访问权限。还可以为用户定义角色，并列出可以授予或撤销的权限。所有用户密码都以加密格式存储，使用特定的插件算法。
- en: Scalability
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可扩展性
- en: Day by day, the mountain of data is growing because of extensive use of technology
    in numerous ways. Because of this, load average is going through the roof. In
    some cases, it is unpredictable that data cannot exceed up to some limit or number
    of users will not go out of bounds. Scalable databases would be a preferable solution
    so that, at any point, we can meet unexpected demands to scale. MySQL is a rewarding
    database system for its scalability, which can scale horizontally and vertically;
    in terms of data, spreading database and load of application queries across multiple
    MySQL servers is quite feasible. It is pretty easy to add horsepower to the MySQL
    cluster to handle the load.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 随着技术在多种方式上的广泛使用，每天数据量都在增加。因此，负载平均值正在飙升。在某些情况下，数据可能无法超过某个限制，或者用户数量可能超出范围。可扩展的数据库将是一个可取的解决方案，以便在任何时候都能满足意外需求的扩展。MySQL是一个有回报的数据库系统，因为它具有可扩展性，可以在数据和应用程序查询的负载方面进行水平和垂直扩展；跨多个MySQL服务器分布数据库和应用程序查询负载是相当可行的。向MySQL集群添加性能也非常容易，以处理负载。
- en: An open source relational database management system
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个开源的关系型数据库管理系统
- en: MySQL is an open source database management system that makes debugging, upgrading,
    and enhancing the functionality fast and easy. You can view the source and make
    the changes accordingly and use it in your own way. You can also distribute an
    extended version of MySQL, but you will need to have a license for this.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL是一个开源的数据库管理系统，使得调试、升级和增强功能变得快速而简单。您可以查看源代码并进行相应的更改，以自己的方式使用它。您还可以分发MySQL的扩展版本，但需要获得许可证。
- en: High performance
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高性能
- en: MySQL gives high-speed transaction processing with optimal speed. It can cache
    the results, which boosts read performance. Replication and clustering make the
    system scalable for more concurrency and manages the heavy workload. Database
    indexes also accelerate the performance of `SELECT` query statements for substantial
    amount of data. To enhance performance, MySQL 8 has included indexes in performance
    schema to speed up data retrieval.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL提供了高速事务处理和最佳速度。它可以缓存结果，从而提高读取性能。复制和集群使系统能够处理更多并发并管理繁重的工作负载。数据库索引还可以加速`SELECT`查询语句对大量数据的性能。为了提高性能，MySQL
    8在性能模式中包含了索引以加快数据检索速度。
- en: High availability
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高可用性
- en: Today, in the world of competitive marketing, an organization's key point is
    to have their system up and running. Any failure or downtime directly impacts
    business and revenue; hence, high availability is a factor that cannot be overlooked.
    MySQL is quite reliable and has constant availability using cluster and replication
    configurations. Cluster servers instantly handle failures and manage the failover
    part to keep your system available almost all the time. If one server gets down,
    it will redirect the user's request to another node and perform the requested
    operation.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，在竞争激烈的营销世界中，一个组织的关键点是让他们的系统正常运行。任何故障或停机直接影响业务和收入；因此，高可用性是一个不容忽视的因素。MySQL相当可靠，并且使用集群和复制配置保持持续可用性。集群服务器可以立即处理故障并管理故障转移部分，以使系统几乎始终可用。如果一个服务器宕机，它将重定向用户的请求到另一个节点并执行所请求的操作。
- en: Cross-platform capabilities
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跨平台能力
- en: MySQL provides cross-platform flexibility that can run on various platforms
    such as Windows, Linux, Solaris, OS2, and so on. It has great API support for
    the all major languages, which makes it very easy to integrate with languages
    such as PHP, C++, Perl, Python, Java, and so on. It is also part of the **Linux
    Apache MySQL PHP** (**LAMP**) server that is used worldwide for web applications.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL提供了跨平台的灵活性，可以在Windows、Linux、Solaris、OS2等各种平台上运行。它对所有主要语言提供了很好的API支持，这使得它非常容易与诸如PHP、C++、Perl、Python、Java等语言集成。它也是全球范围内用于Web应用程序的**Linux
    Apache MySQL PHP**（**LAMP**）服务器的一部分。
- en: 'It''s now time to get our hands dirty and look at MySQL 8; let''s start with
    the installation of MySQL 8 on a Linux platform in our case. We prefer MySQL 8
    on a Linux operating system as that has been a common use case across many organizations.
    We will be discussing more installation in [Chapter 2](69eaf074-9446-4da9-918c-765f7e001f8c.xhtml),
    *Installing and Upgrading MySQL 8*. You can use it on other platforms that MySQL
    supports, such as Windows, Solaris, HP-UNIX, and so on. Linux provides various
    ways to install the MySQL server, as follows:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候动手尝试一下MySQL 8了；让我们从在我们的情况下在Linux平台上安装MySQL 8开始。我们更喜欢在Linux操作系统上使用MySQL
    8，因为这在许多组织中是一个常见的用例。我们将在[第2章](69eaf074-9446-4da9-918c-765f7e001f8c.xhtml)中讨论更多安装内容，*安装和升级MySQL
    8*。您可以在MySQL支持的其他平台上使用它，如Windows、Solaris、HP-UNIX等。Linux提供了各种安装MySQL服务器的方法，如下所示：
- en: '`RPM` package'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`RPM`包'
- en: '`YUM` repository'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`YUM`存储库'
- en: '`APT` repository'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`APT`存储库'
- en: '`SLES` repository'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`SLES`存储库'
- en: '`Debian` package'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Debian`包'
- en: '`TAR` package'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TAR`包'
- en: Compiling and installing from the source code
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从源代码编译和安装
- en: Limitations of MySQL 8
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL 8的限制
- en: A coin has two sides; similarly, benefits of also using MySQL 8 would come along
    with a few limitations. Let us walk through a few areas of MySQL 8 now.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 一枚硬币有两面；同样，使用MySQL 8也会带来一些限制。现在让我们来看看MySQL 8的一些方面。
- en: Number of tables or databases
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表或数据库的数量
- en: The number of databases or tables are not a limitation for MySQL 8; however,
    the operating system file limit can be a limitation for MySQL 8\. Storage Engine
    `InnoDB` is allowed to scale up to four billion tables as its peak number.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库或表的数量对MySQL 8没有限制；但是，操作系统文件限制可能会成为MySQL 8的限制。存储引擎`InnoDB`允许扩展到四十亿张表。
- en: Table size
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表格大小
- en: You may hit maximum table size limit, which is not restricted from MySQL 8;
    however, it may be because of operating system filesystem limits.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会遇到最大表大小限制，这不是MySQL 8限制的，但可能是由于操作系统文件系统限制。
- en: Joins
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接
- en: In a single join, one can use 61 tables, which can be referred. It is also applicable
    to the tables that are referenced in view definition. Joins that are part of subqueries
    and views are also considered to be part of the limitation.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在单个连接中，可以使用61个表，可以进行引用。这也适用于视图定义中引用的表。子查询和视图中的连接也被视为限制的一部分。
- en: Windows platform
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows平台
- en: 'There are few limitations when you have MySQL 8 used on the Windows platform:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在Windows平台上使用MySQL 8时，会有一些限制：
- en: '**Memory**: 32-bit architecture has limitation to use only 2 GB of RAM for
    a process.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内存**：32位架构限制了一个进程只能使用2GB的RAM。'
- en: '**Ports**: In case you have a high number of concurrency you might come across
    Windows platform limitation of having 4000 ports available for client connections
    in total.'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口**：如果您有大量并发，您可能会遇到Windows平台的限制，总共只有4000个端口可用于客户端连接。'
- en: '**Case-insensitivity**: The Windows platform doesn''t have case sensitivity,
    which is why tables and databases need to be deliberately managed for case-insensitivity.'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大小写不敏感**：Windows平台不区分大小写，因此需要有意识地管理大小写不敏感的表和数据库。'
- en: '**Pipes**: `|`, generally referred as pipe signs, they are not fully supported
    in Windows. You might come across them in a few scenarios while doing database
    administration activities.'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管道**：`|`，通常称为管道符号，在Windows上不完全受支持。在进行数据库管理活动时，您可能会在一些情况下遇到它们。'
- en: '**Pathname separator**: MySQL 8 escape character is `\`, which is the pathname
    separator for Windows. Hence while using path separator you can double slash as
    "\\" as an alternative for a pathname separator.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**路径名分隔符**：MySQL 8的转义字符是`\`，这是Windows的路径名分隔符。因此，在使用路径分隔符时，您可以使用双斜杠`\\`作为路径名分隔符的替代。'
- en: Table column count
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表列计数
- en: The table column for each table in MySQL 8 has a limit of 4096 columns. It might
    vary based on a few other factors for columns count limit, as stated in the following
    section.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 8中每个表的表列限制为4096列。基于其他一些因素的列计数限制可能会有所不同，如下一节所述。
- en: Row size
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行大小
- en: MySQL tables have a limit of 65,535 bytes for a row, although storage engines
    such as `InnoDB` are capable of supporting larger chunks.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL表的行限制为65,535字节，尽管存储引擎如`InnoDB`能够支持更大的数据块。
- en: InnoDB storage engine
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: InnoDB存储引擎
- en: Limitations on `InnoDB` storage engine are what we will talk about a bit more
    specifically as `InnoDB` now with MySQL 8 will play a prominent role.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`InnoDB`存储引擎的限制是我们将更具体地谈论的，因为`InnoDB`现在在MySQL 8中将发挥重要作用。'
- en: Limitations of InnoDB storage engine
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`InnoDB`存储引擎的限制'
- en: 'We will have a quick glance at a few of the limitations of `InnoDB` storage
    engine:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将快速浏览一下`InnoDB`存储引擎的一些限制：
- en: The number of indexes supported can be maximum 64 for a table
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表支持的索引数量最多为64
- en: For tables that use compressed or dynamic row format; 3072 is the index key
    prefix length limit
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于使用压缩或动态行格式的表；索引键前缀长度限制为3072
- en: For tables that use compact or redundant row format; 767 is the index key prefix
    length limit
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于使用紧凑或冗余行格式的表；索引键前缀长度限制为767
- en: Total columns in a table, which includes virtual generated columns, are limited
    to a maximum of 1,017
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表中的总列数，包括虚拟生成的列，最多限制为1,017
- en: 16 columns is the maximum permitted for multi-column indexes
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多列索引的最大允许列数为16
- en: The combined `InnoDB` log file size cannot exceed 512 GB
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组合的`InnoDB`日志文件大小不能超过512 GB
- en: Maximum table size supported by `InnoDB` is 256 TB
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InnoDB`支持的最大表大小为256 TB'
- en: AdminAPI is not supported while using unix socket connections
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在使用unix套接字连接时不支持AdminAPI
- en: Multi-byte characters might give you unreliable aligned columns while formatting
    of results in `InnoDB` clusters
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多字节字符可能会在`InnoDB`集群中格式化结果时给出不可靠的对齐列
- en: Restrictions
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 限制
- en: 'We will now have a quick glance at a few of the restrictions of the `InnoDB`
    storage engine:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将快速浏览一下`InnoDB`存储引擎的一些限制：
- en: '`Delete from tablename`: It doesn''t actually delete the complete table, instead
    it deletes each row of the table one after another.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Delete from tablename`：它实际上并不删除整个表，而是逐行删除表中的每一行。'
- en: '`Show table status`: It wouldn''t provide you accurate data all the time; it
    provides estimates.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Show table status`：它不会始终提供准确的数据；它提供估计值。'
- en: When counting rows, the number of rows provided by `count(*)` is not accurate
    because of concurrency; it would count only those counts visible to transactions
    currently available.
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在计算行数时，由于并发性，`count(*)`提供的行数不准确；它只会计算当前事务可见的计数。
- en: If there is multiple `analyze table` queries executed, later one will be blocked
    until the first one gets completed.
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果执行了多个`analyze table`查询，后面的查询将被阻塞，直到第一个查询完成。
- en: '`InnoDB` keeps an exclusive lock on the index at the end associated with the `auto_increment`
    column.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InnoDB`在与`auto_increment`列关联的索引末尾保持独占锁。'
- en: In a case the `auto_increment` integer runs out of the value; the following
    insert operations would show us duplicate-key errors.
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`auto_increment`整数用完了值；接下来的插入操作将显示重复键错误。
- en: Foreign keys that are cascaded cannot activate triggers.
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 级联的外键不能激活触发器。
- en: 'There are a few column names reserved by MySQL that `InnoDB` uses for internal
    purposes. The following are a few such column names:'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL保留了一些`InnoDB`用于内部目的的列名。以下是一些这样的列名：
- en: '`DB_ROW_ID`'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DB_ROW_ID`'
- en: '`DB_TRX_ID`'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DB_TRX_ID`'
- en: '`DB_ROLL_PTR`'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DB_ROLL_PTR`'
- en: '`DB_MIX_ID`'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DB_MIX_ID`'
- en: 'We might come across output shown in the following example in case of such
    reserved column names used:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用了这样的保留列名，我们可能会遇到以下示例中显示的输出：
- en: '[PRE6]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '`InnoDB` locks are released immediately after the transaction is aborted or
    committed, which is held by a transaction.'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`InnoDB`锁在事务中止或提交后立即释放。'
- en: The addition of table locks are not supported, as locks are implicit to `commit`
    and `unlock tables`
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持添加表锁，因为锁是隐式的`commit`和`unlock tables`
- en: Data dictionary
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据字典
- en: 'Let us have a look at a few known limitations of data dictionary:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看数据字典的一些已知限制：
- en: Individual `MyISAM` tables for backup and restore are not supported by merely
    copying the files.
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅通过复制文件来支持备份和还原的个别`MyISAM`表。
- en: Manually created directories for databases are not supported by MySQL 8\. For
    instance, using `mkdir` would have no impact on MySQL server data dictionary.
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 8不支持手动创建数据库目录。例如，使用`mkdir`对MySQL服务器数据字典没有影响。
- en: '`DDL` operations would take more time than expected because such operations
    are written to storage, undo logs and redo instead of `.frm` files as what we
    would have seen in prior versions of MySQL.'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DDL`操作所需的时间可能比预期的要长，因为这些操作被写入存储、撤消日志和重做，而不是`.frm`文件，这是我们在MySQL先前版本中所看到的。'
- en: Limitations of group replication in MySQL8
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL8中组复制的限制
- en: 'It''s now time to discuss a few limitations of group replication in MySQL 8:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候讨论一下MySQL 8中组复制的一些限制了：
- en: '**Large transactions**: Transactions that result to GTID contents cannot be
    replicated between the rest of the members of the group if they''re too large.
    It is suggested to use smaller chunks of data that cannot be replicated in around
    five seconds to group members to avoid failures.'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大事务**：导致GTID内容的事务如果太大，则无法在组的其余成员之间复制。建议使用无法在大约五秒钟内复制到组成员的较小数据块，以避免失败。'
- en: '**Cluster from a group**: If you try to create clusters from an existing group
    replication setup it will result in an error as the instance would already be
    part of a replication group. This is noticed currently only in MySQL''s wizard
    mode only; an alternative solution for the issue is to disable wizard mode.'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**从组创建集群**：如果您尝试从现有的组复制设置创建集群，将会导致错误，因为实例已经是复制组的一部分。目前只在MySQL的向导模式中注意到这一点；解决该问题的替代方法是禁用向导模式。'
- en: '**Serializable isolation level**: Serializable isolation level is not supported
    when multi-primary groups are used, which is the default configuration.'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可串行化隔离级别**：当使用多主组时，不支持可串行化隔离级别，这是默认配置。'
- en: '**DDL and DML operations**: If there is concurrent DDL and DML operations executed
    against the same data object but on different servers is not supported when multi-primary
    group mode is used.'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DDL和DML操作**：如果对同一数据对象执行并发的不同服务器上的DDL和DML操作，但使用了多主组模式，则不受支持。'
- en: '**Replication checksum**: Currently MySQL design limitations create restrictions
    of having replication event checksums.'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**复制校验和**：目前MySQL的设计限制限制了复制事件校验和的使用。'
- en: Limitations of partitioning
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分区的限制
- en: We will be discussing limitations of partitioning in this section.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论分区的限制。
- en: Constructs prohibition
  id: totrans-220
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构造禁止
- en: 'The following are the constructs that are not allowed in expressions of partitions:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在分区表达式中不允许的构造：
- en: Declared variables
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 声明的变量
- en: User variables
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户变量
- en: Stored procedures
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储过程
- en: Stored functions
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储函数
- en: UDFs
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UDFs
- en: Plugins
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插件
- en: Operators
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运营商
- en: There are a few operators that are not permitted in partition expressions such
    as `<<` , `>>` , `|` , `&` , `~` and `^` . Results for arithmetic operators such
    as `+`, `-`, and `*` must have an integer value or `NULL`.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在分区表达式中不允许使用一些运算符，如`<<`，`>>`，`|`，`&`，`~`和`^`。算术运算符如`+`，`-`和`*`的结果必须是整数值或`NULL`。
- en: Tables
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 表
- en: 'The following are a few specific areas that show us limitations of partitioning
    on tables:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是表分区的一些特定限制领域：
- en: The maximum number of partitions supported by MySQL 8 for a table is 8192\.
    This limit also considers sub-partitions.
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL 8支持的表的最大分区数为8192。此限制还考虑了子分区。
- en: Fulltext index and search is not supported on partitioned tables.
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分区表不支持全文索引和搜索。
- en: Tables that are temporary cannot be partitioned.
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 临时表不能进行分区。
- en: Log tables can't be partitioned.
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志表不能进行分区。
- en: Foreign keys are not supported on partitioned `InnoDB` storage engine.
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在分区的`InnoDB`存储引擎上不支持外键。
- en: The data type of partition keys should be an integer column or can be an expression
    to an integer. Expression or column values may be `NULL`; however, expressions
    that include `ENUM` are not supported.
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分区键的数据类型应该是整数列或者可以是整数的表达式。表达式或列的值可以是`NULL`；但是不支持包括`ENUM`的表达式。
- en: Upgrading partitioned tables that have been partitioned by `KEY` would have
    to be reloaded, which stands true other than the `InnoDB` storage engine.
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于使用`KEY`进行分区的分区表进行升级，除了`InnoDB`存储引擎之外，都需要重新加载。
- en: We have so far discussed overview, features, benefits, and a few limitations of
    MySQL. Let us now walk through the wonderful use cases of MySQL.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经讨论了MySQL的概述、特性、优势和一些限制。现在让我们来看看MySQL的精彩用例。
- en: Use cases of MySQL
  id: totrans-240
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL的用例
- en: MySQL has many advantages because it has its foot in many industries and various
    use cases across the globe. The importance of MySQL doesn't depend only on how
    much data you have, it's rather what you are going to do with the data. Data can
    be sourced and analyzed from unpredictable sources and can be used to address
    many things.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL之所以具有许多优势，是因为它在全球许多行业和各种用例中都有所涉足。MySQL的重要性不仅取决于你拥有多少数据，更重要的是你将如何处理这些数据。数据可以来自不可预测的来源，并且可以用于解决许多问题。
- en: 'Let''s now look at use cases with real-life importance made on renowned scenarios
    with the help of MySQL:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看MySQL在著名场景上产生的具有现实重要性的用例：
- en: '![](img/66efe8d9-16a4-4651-9cee-d785fc5530da.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![](img/66efe8d9-16a4-4651-9cee-d785fc5530da.png)'
- en: The preceding figure helps us understand where MySQL is serving various industries.
    Though it's not an extensive list of industries where MySQL has been playing a
    prominent role in business decisions, let's now discuss a few of the industries.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 上图帮助我们了解MySQL在哪些行业中发挥作用。虽然这不是MySQL在业务决策中发挥重要作用的行业的详尽列表，但现在让我们讨论一些行业。
- en: Social media
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 社交媒体
- en: Social media content is information, and so are engagements such as views, likes,
    demographics, shares, follows, unique visitors, comments, and downloads. At the
    end of the day, what matters is how your social media-related efforts contribute
    to the business.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 社交媒体内容是信息，以及观看次数、点赞、人口统计学、分享、关注、独立访客、评论和下载等互动。最终，重要的是你的社交媒体相关努力如何为业务做出贡献。
- en: One notable example is Facebook, where MySQL had been used extensively. On top
    of MySQL where petabytes of data was used to serve likes, shares, and comments.
    Facebook has developed the `RocksDB` storage engine on top of the MySQL `InnoDB`
    storage engine, which leverages many advantages of InnoDB storage engine as Facebook
    wanted to primarily focus on storage optimization. Though currently MySQL is still
    used largely for other common applications.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 一个著名的例子是Facebook，Facebook广泛使用了MySQL。在MySQL上，使用了PB级的数据来提供点赞、分享和评论。Facebook在MySQL的`InnoDB`存储引擎上开发了`RocksDB`存储引擎，利用了InnoDB存储引擎的许多优势，因为Facebook主要关注存储优化。尽管目前MySQL仍然主要用于其他常见应用。
- en: Government
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 政府
- en: The era of MySQL has been playing a significant role in government too; government
    bodies have been using MySQL extensively because of splendid return on investments
    and promoting open source. In fact, the government sector is carrying out a huge
    number of implementations of MySQL worldwide.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL时代在政府中也扮演着重要角色；政府机构广泛使用MySQL，因为它带来了出色的投资回报和促进开源。事实上，政府部门正在全球范围内大量实施MySQL。
- en: This may come as a surprise to you; US Navy uses MySQL for its critical flight
    planning activities. There are various activities such as weather conditions,
    flight plans, fuel efficiency, maintenance of flights, and many more that are
    being tracked with the help of MySQL as the database. It's a no-brainer that it
    needs to run 24x7 with full redundancy; MySQL was able to achieve this serving
    US Navy aircraft across the globe.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能会让您感到惊讶；美国海军在其关键的飞行计划活动中使用MySQL。有各种各样的活动，如天气条件、飞行计划、燃油效率、飞行维护等，都在MySQL的帮助下作为数据库进行跟踪。毫无疑问，它需要全天候运行并具有完全冗余性；MySQL能够实现这一点，为美国海军飞机在全球范围内提供服务。
- en: Media and entertainment
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 媒体和娱乐
- en: YouTube is also one of the prominent users of MySQL. Anytime you watch a video
    on YouTube it gets data from a relational database or a blob store using MySQL.
    YouTube also uses Vitess; a project that was released by YouTube to frontend MySQL.
    Vitess helps to do lots of optimization and acts as a proxy to serve each database
    request using MySQL. MySQL replicas are heavily used in YouTube's implementation;
    leveraging MySQL caching was one of the other prominent factors for YouTube.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: YouTube也是MySQL的重要用户之一。每当您在YouTube上观看视频时，它都会从关系数据库或使用MySQL的blob存储获取数据。 YouTube还使用Vitess；这是由YouTube发布的一个项目，用于前端MySQL。
    Vitess有助于进行大量优化，并充当代理以使用MySQL为每个数据库请求提供服务。 YouTube的实施中大量使用了MySQL副本；利用MySQL缓存是YouTube的另一个重要因素。
- en: Fraud detection
  id: totrans-253
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 欺诈检测
- en: When it comes to security, fraud detection, or compliance, and precisely if
    your solution helps you in identifying and preventing issues before they strike,
    then it becomes a sweet spot for business. Most of the time, fraud detection takes
    place a long time after the fraud has occurred, when you might have already suffered
    loss. The next steps would be obviously to minimize the impact of fraud and improve
    areas that could help you prevent this from being repeated.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在安全性、欺诈检测或合规性方面，如果您的解决方案能帮助您在问题发生之前识别和防止问题，那么它就成为业务的甜蜜点。大多数时候，欺诈检测发生在欺诈已经发生很久之后，那时您可能已经遭受了损失。接下来的步骤显然是尽量减少欺诈的影响，并改进可能帮助您防止再次发生的领域。
- en: Many companies who are into any type of transaction processing or claims use
    fraud detection techniques extensively. MySQL helps to analyze transactions, claims,
    and so on in real time, along with trends or anomalous behavior to prevent fraudulent
    activities.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 许多从事任何类型的交易处理或索赔的公司都广泛使用欺诈检测技术。 MySQL有助于实时分析交易、索赔等，以及趋势或异常行为，以防止欺诈活动。
- en: PayPal is one of such use cases that has built fraud detection system using
    MySQL. PayPal has more than 100 million active users, which is distributed to
    US, Japanese, and European data centers. High-availability for such use cases
    is a key criteria along with performance, which MySQL has been able to deliver
    as expected.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: PayPal是一个使用MySQL构建欺诈检测系统的典型用例。 PayPal拥有超过1亿活跃用户，分布在美国、日本和欧洲的数据中心。对于这类用例来说，高可用性是一个关键标准，MySQL已经能够如预期般提供性能。
- en: Business mapping
  id: totrans-257
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 业务映射
- en: Netflix has millions of subscribers; it uses MySQL for running its billing systems.
    The core billing system of Netflix on MySQL is a prominent backbone for any business.
    Netflix has billions of rows of data concurrently updated and of consisting data
    since its inception two decades ago. Compliance was one of the key factors along
    with migration from Oracle with minimal downtime; both of these were achieved
    with MySQL and has been expanding tremendously every other day.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: Netflix拥有数百万订阅用户；它使用MySQL来运行其计费系统。 Netflix在MySQL上的核心计费系统是任何业务的重要支撑。 Netflix拥有数十亿行数据，自其成立以来一直在不断更新和维护数据。合规性是其中一个关键因素，同时还需要从Oracle迁移并最小化停机时间；MySQL成功实现了这两点，并且每天都在不断扩展。
- en: E-commerce
  id: totrans-259
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电子商务
- en: Uber is one of the other well-known customers of MySQL. Uber had been growing
    enormously worldwide, and scalability, high-availability, and return on investments
    were a few of the important criteria to be worked upon. Uber uses MySQL as its
    primary database for its known private car transportation service. Uber heavily
    uses schema less database architecture as its backend as a layer on MySQL.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: Uber是MySQL的另一个知名客户。 Uber在全球范围内增长迅速，可扩展性、高可用性和投资回报率是需要重点关注的几个重要标准。 Uber将MySQL作为其已知私人汽车运输服务的主要数据库。
    Uber在MySQL的基础上大量使用无模式数据库架构作为其后端。
- en: There are many real-world MySQL use cases that have changed humanity, technology,
    predictions, health, science and research, law and order, sports, e-commerce,
    power and energy, financial trading, robotics, and many more. MySQL is an integral
    part of our daily routine, which is not evident all the time, but yes, it plays
    a significant role in what we do in many ways.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多真实世界的MySQL用例已经改变了人类、技术、预测、健康、科学和研究、法律和秩序、体育、电子商务、能源和能源、金融交易、机器人技术等方面。 MySQL是我们日常生活的一个重要组成部分，虽然并非总是明显，但它在许多方面都发挥着重要作用。
- en: Summary
  id: totrans-262
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we started with an overview of MySQL along with major features
    of the MySQL database and explored the newly added features in MySQL 8\. After
    this, we took a deep dive into exciting new features of MySQL 8 along with benefits
    of using MySQL for your business applications. We understood MySQL 8's current
    limitations and restrictions, which is important for us when performing the implementations.
    Finally, we glanced through a few impressive use cases from the real world that
    play prominent roles in our daily routine, and they all use MySQL as their database.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们从概述MySQL以及MySQL数据库的主要特性开始，并探索了MySQL 8中新增的功能。之后，我们深入了解了MySQL 8的令人兴奋的新功能，以及在业务应用中使用MySQL的好处。我们了解了MySQL
    8目前的限制和限制，这对我们在执行实施时非常重要。最后，我们浏览了一些在现实世界中扮演重要角色的令人印象深刻的用例，它们都将MySQL作为它们的数据库。
- en: In the next chapter, we will learn detailed steps for installing MySQL 8 on
    different platforms. The chapter also covers methods to upgrade or downgrade from
    MySQL 8, and they will all be discussed in detail.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习在不同平台上安装MySQL 8的详细步骤。本章还涵盖了从MySQL 8升级或降级的方法，它们将都会被详细讨论。
