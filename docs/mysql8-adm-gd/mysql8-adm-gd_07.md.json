["```go\n SELECT key_part3 FROM table_name WHERE key_part1=10;\n```", "```go\n SELECT MIN(key_part2), MAX(key_part2) FROM tble_name WHERE \n          key_part1=10;\n```", "```go\nCREATE [UNIQUE|FULLTEXT|SPATIAL] INDEX index_name\n [index_type]\n ON tbl_name (index_col_name,...)\n [index_option]\n [algorithm_option | lock_option] ...\nindex_col_name:\n col_name [(length)] [ASC | DESC]\nindex_option:\n KEY_BLOCK_SIZE [=] value\n | index_type\n | WITH PARSER parser_name\n | COMMENT 'string'\n | {VISIBLE | INVISIBLE}\nindex_type:\n USING {BTREE | HASH}\nalgorithm_option:\n ALGORITHM [=] {DEFAULT|INPLACE|COPY}\nlock_option:\n LOCK [=] {DEFAULT|NONE|SHARED|EXCLUSIVE}\n```", "```go\n create table employee (id int(11) not null,name varchar(50));\n CREATE INDEX emp_name_index ON employee (name) USING BTREE;\n```", "```go\n CREATE INDEX name_index ON employee(name) COMMENT \n          'MERGE_THRESHOLD=40'; \n```", "```go\nDROP INDEX index_name ON tbl_name\n [algorithm_option | lock_option]...\nalgorithm_option:\n ALGORITHM [=] {DEFAULT|INPLACE|COPY}\nlock_option:\n LOCK [=] {DEFAULT|NONE|SHARED|EXCLUSIVE}\n```", "```go\nDROP INDEX name_index ON employee;\n```", "```go\nCREATE TABLE geom_data (data GEOMETRY NOT NULL, SPATIAL INDEX(data));\n```", "```go\n        SELECT DISTINCT ST_SRID(column_name) FROM table_name;\n        ```", "```go\nCREATE TABLE person (personal_data TEXT, INDEX(personal_data (8)));\n```", "```go\nCREATE TABLE Employee (\nid INT NOT NULL,\nlastname varchar(50) not null,\nfirstname varchar(50) not null,\nPRIMARY KEY (id),\nINDEX name (lastname, firstname)\n);\n```", "```go\nSELECT * FROM Employee WHERE lastname='Shah';\nSELECT * FROM Employee WHERE lastname ='Shah' AND firstname ='Mona';\nSELECT * FROM Employee WHERE lastname ='Shah' AND (firstname ='Michael' OR firstname ='Mona');\nSELECT * FROM Employee WHERE lastname ='Shah' AND firstname >='M' AND firstname < 'N';\n```", "```go\nSELECT * FROM Employee WHERE firstname='Mona';\nSELECT * FROM Employee WHERE lastname='Shah' OR firstname='Mona';\n```", "```go\nCREATE TABLE Employee (\n lastname varchar(50) not null,\n firstname varchar(50) not null,\n dob date not null,\n gender char(1) not null,\n key(lastname, firstname, dob)\n );\n```", "```go\nSET optimizer_switch = 'use_index_extensions=off';\n```", "```go\nCREATE TABLE table1 (\n c1 INT NOT NULL DEFAULT 0,\n c2 INT NOT NULL DEFAULT 0,\n d1 DATE DEFAULT NULL,\n PRIMARY KEY (c1, c2),\n INDEX key1 (d1)\n) ENGINE = InnoDB;\n\n--Insert values into table\nINSERT INTO table1 VALUES\n(1, 1, '1990-01-01'), (1, 2, '1991-01-01'),\n(1, 3, '1992-01-01'), (1, 4, '1993-01-01'),\n(1, 5, '1994-01-01'), (2, 1, '1990-01-01'),\n(2, 2, '1991-01-01'), (2, 3, '1992-01-01'),\n(2, 4, '1993-01-01'), (2, 5, '1994-01-01'),\n(3, 1, '1990-01-01'), (3, 2, '1991-01-01'),\n(3, 3, '1992-01-01'), (3, 4, '1993-01-01'),\n(3, 5, '1994-01-01'), (4, 1, '1990-01-01'),\n(4, 2, '1991-01-01'), (4, 3, '1992-01-01'),\n(4, 4, '1993-01-01'), (4, 5, '1994-01-01'),\n(5, 1, '1990-01-01'), (5, 2, '1991-01-01'),\n(5, 3, '1992-01-01'), (5, 4, '1993-01-01'),\n(5, 5, '1994-01-01');\n```", "```go\n--Index extension is set as off\nSET optimizer_switch = 'use_index_extensions=off';\n\n--Execute select query with explain\nEXPLAIN SELECT COUNT(*) FROM table1 WHERE c1 = 3 AND d1 = '1992-01-01';\n\n--Output of explain query\n*************************** 1\\. row ***************************\n id: 1\n select_type: SIMPLE\n table: table1\n type: ref\npossible_keys: PRIMARY,key1\n key: PRIMARY\n key_len: 4\n ref: const\n rows: 5\n Extra: Using where\n```", "```go\n--Index extension is set as on\nSET optimizer_switch = 'use_index_extensions=on';\n\n--Execute select query with explain\nEXPLAIN SELECT COUNT(*) FROM table1 WHERE c1 = 3 AND d1 = '1992-01-01';\n\n--Output of explain query\n*************************** 1\\. row ***************************\n id: 1\n select_type: SIMPLE\n table: table1\n type: ref\npossible_keys: PRIMARY,key1\n key: key1\n key_len: 8\n ref: const,const\n rows: 1\n Extra: Using index\n```", "```go\nCREATE TABLE t1 (c1 INT, c2 INT AS (c1 + 1) STORED, INDEX (c2));\n```", "```go\nSELECT * FROM t1 WHERE c1 + 1 > 100;\n```", "```go\nmysql> explain SELECT * FROM t1 WHERE c1 + 1 > 100;\n*************************** 1\\. row ***************************\n id: 1\n select_type: SIMPLE\n table: t1\n partitions: NULL\n type: range\n possible_keys: c2\n key: c2\n key_len: 5\n ref: NULL\n rows: 1\n filtered: 100.00\n Extra: Using index condition\n```", "```go\n name TEXTAS(JSON_EXTRACT(emp,'$.name'))STORED\n```", "```go\n name TEXTAS(JSON_UNQUOTE(JSON_EXTRACT(emp,'$.name')))STORED\n```", "```go\n c2 INT AS (c1) STORED in column definition.\n```", "```go\nCREATE TABLE `employee` (\n `id` int(11) NOT NULL AUTO_INCREMENT,\n `department_id` int(11),\n `salary` int(11),\n PRIMARY KEY (`id`)\n ) ENGINE=InnoDB;\n\nCREATE INDEX idx1 ON employee (department_id) INVISIBLE;\nALTER TABLE employee ADD INDEX idx2 (salary) INVISIBLE;\n```", "```go\n ALTER TABLE employee ALTER INDEX idx1 VISIBLE;\n ALTER TABLE employee ALTER INDEX idx1 INVISIBLE;\n```", "```go\nmysql>SELECT * FROM information_schema.statistics WHERE is_visible='NO';\n*************************** 1\\. row ***************************\nTABLE_CATALOG: def\nTABLE_SCHEMA: db1\nTABLE_NAME: employee\nNON_UNIQUE: 1\nINDEX_SCHEMA: db1\nINDEX_NAME: idx1\nSEQ_IN_INDEX: 1 \nCOLUMN_NAME: department_id\nCOLLATION: A \nCARDINALITY: 0 \nSUB_PART: NULL \nPACKED: NULL \nNULLABLE: YES\nINDEX_TYPE: BTREE \nCOMMENT: \nINDEX_COMMENT: \nIS_VISIBLE: NO\n\nmysql>SELECT INDEX_NAME, IS_VISIBLE FROM INFORMATION_SCHEMA.STATISTICS\n -> WHERE TABLE_SCHEMA = 'db1' AND TABLE_NAME = 'employee';\n+------------+------------+\n| INDEX_NAME | IS_VISIBLE |\n+------------+------------+\n| idx1 | NO |\n| idx2 | NO |\n| PRIMARY | YES |\n+------------+------------+\n\nmysql> SHOW INDEXES FROM employee;\n*************************** 1\\. row ***************************\nTable:employee\nNon_unique:1\nKey_name:idx1\nSeq_in_index:1\nColumn_name: department_id\nCollation:A\nCardinality:0\nSub_part: NULL\nPacked: NULL\nNull:YES\nIndex_type: BTREE\nComment:\nIndex_comment:\nVisible: NO\n```", "```go\nCREATE TABLE table2 (\n field1 INT NOT NULL,\n field2 INT NOT NULL,\n UNIQUE idx1 (field1)\n) ENGINE = InnoDB;\n```", "```go\nmysql> ALTER TABLE table2 ALTER INDEX idx1 INVISIBLE;\nERROR 3522 (HY000): A primary key index cannot be invisible\n```", "```go\nALTER TABLE table2 ADD PRIMARY KEY (field2);\n```", "```go\nmysql> ALTER TABLE table2 ALTER INDEX idx1 INVISIBLE;\nQuery OK, 0 rows affected (0.06 sec)\nRecords: 0 Duplicates: 0 Warnings: 0\n```", "```go\nCREATE TABLE t1 (\n a INT, b INT,\n INDEX idx1 (a ASC, b ASC),\n INDEX idx2 (a ASC, b DESC),\n INDEX idx3 (a DESC, b ASC),\n INDEX idx4 (a DESC, b DESC)\n);\n```", "```go\nORDER BY a ASC, b ASC -- optimizer can use idx1\nORDER BY a DESC, b DESC -- optimizer can use idx4\nORDER BY a ASC, b DESC -- optimizer can use idx2\nORDER BY a DESC, b ASC -- optimizer can use idx3\n```", "```go\nQuery 1: SELECT * FROM t1 ORDER BY a DESC;\nQuery 2: SELECT * FROM t1 ORDER BY a ASC;\nQuery 3: SELECT * FROM t1 ORDER BY a DESC, b ASC;\nQuery 4: SELECT * FROM t1 ORDER BY a ASC, b DESC;\nQuery 5: SELECT * FROM t1 ORDER BY a DESC, b DESC;\nQuery 6: SELECT * FROM t1 ORDER BY a ASC, b ASC;\n```"]