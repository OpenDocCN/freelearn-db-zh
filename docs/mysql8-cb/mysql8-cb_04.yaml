- en: Configuring MySQL
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置MySQL
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下配方：
- en: Using config file
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用配置文件
- en: Using global and session variables
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用全局和会话变量
- en: Using parameters with startup script
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用启动脚本的参数
- en: Configuring the parameters
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置参数
- en: Changing the data directory
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改数据目录
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'MySQL has two types of parameters:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL有两种类型的参数：
- en: '**Static**, which takes effect after restarting MySQL server'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**静态**，在重新启动MySQL服务器后生效'
- en: '**Dynamic**, which can be changed on the fly without restarting MySQL server'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**动态**，可以在不重新启动MySQL服务器的情况下进行更改'
- en: 'Variables can be set through the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 变量可以通过以下方式设置：
- en: '**Config file**: MySQL has a configuration file in which we can specify the
    location of data, the memory that MySQL can use, and various other parameters.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置文件**：MySQL有一个配置文件，我们可以在其中指定数据的位置，MySQL可以使用的内存，以及各种其他参数。'
- en: '**Startup script**: You can directly pass the parameters to the `mysqld` process.
    It remains in effect only for that invocation of the server.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启动脚本**：您可以直接将参数传递给`mysqld`进程。它仅在服务器的该调用中生效。'
- en: '**Using SET command** (only dynamic variables): This will last until the server
    restarts. You also need to set the variable in the config file to make the change
    persistent across restarts. Another way to make changes persistent is by preceding
    the variable name by the `PERSIST` keyword or `@@persist`.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用SET命令**（仅动态变量）：这将持续到服务器重新启动。您还需要在配置文件中设置变量，以使更改在重新启动时持久。使更改持久的另一种方法是在变量名称之前加上`PERSIST`关键字或`@@persist`。'
- en: Using config file
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用配置文件
- en: The default config file is `/etc/my.cnf` (on Red Hat and CentOS systems) and
    `/etc/mysql/my.cnf` (Debian systems). Open the file in your favorite editor and
    modify the parameters as needed. The main parameters are discussed in this chapter.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 默认配置文件为`/etc/my.cnf`（在Red Hat和CentOS系统上）和`/etc/mysql/my.cnf`（Debian系统）。在您喜欢的编辑器中打开文件并根据需要修改参数。本章讨论了主要参数。
- en: How to do it...
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'The config file has sections specified by `section_name`. All the parameters
    related to a section can be put under them, for example:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件由`section_name`指定的部分。所有与部分相关的参数都可以放在它们下面，例如：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`[mysql]`: Section is read by the `mysql` command-line client'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[mysql]`：该部分由`mysql`命令行客户端读取'
- en: '`[client]`: Section is read by all connecting clients (including `mysql cli`)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[client]`：该部分由所有连接的客户端（包括`mysql cli`）读取'
- en: '`[mysqld]`: Section is read by the `mysql` server'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[mysqld]`：该部分由`mysql`服务器读取'
- en: '`[mysqldump]`: The section is read by the backup utility called `mysqldump`'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[mysqldump]`：该部分由名为`mysqldump`的备份实用程序读取'
- en: '`[mysqld_safe]`: Read by the `mysqld_safe` process (MySQL Server Startup Script)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[mysqld_safe]`：由`mysqld_safe`进程（MySQL服务器启动脚本）读取'
- en: Apart from that the `mysqld_safe` process reads all options from the `[mysqld]`
    and `[server]` sections in option files.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，`mysqld_safe`进程从选项文件中的`[mysqld]`和`[server]`部分读取所有选项。
- en: For example, `mysqld_safe` process reads the `pid-file` option from `mysqld`
    section.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`mysqld_safe`进程从`mysqld`部分读取`pid-file`选项。
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In systems that use `systemd`, `mysqld_safe` will not be installed. To configure
    the startup script, you need to set the values in `/etc/systemd/system/mysqld.service.d/override.conf`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用`systemd`的系统中，`mysqld_safe`将不会安装。要配置启动脚本，您需要在`/etc/systemd/system/mysqld.service.d/override.conf`中设置值。
- en: 'For example:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Using global and session variables
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用全局和会话变量
- en: As you have seen in the previous chapters, you can set the parameters by connecting
    to MySQL and executing the `SET` command.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在前几章中所看到的，您可以通过连接到MySQL并执行`SET`命令来设置参数。
- en: 'There are two types of variables based on the scope of the variable:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 根据变量的范围，有两种类型的变量：
- en: '**Global**: Applies to all the new connections'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**全局**：适用于所有新连接'
- en: '**Session**: Applies only to the current connection (session)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**会话**：仅适用于当前连接（会话）'
- en: How to do it...
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'For example, if you want to log all queries that are slower than one second,
    you can execute:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您想记录所有慢于一秒的查询，可以执行：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To make the changes persistent across restarts use:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要使更改在重新启动时持久，请使用：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Or:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 或：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The persisted global system variable settings are stored in mysqld-auto.cnf
    which is located in data directory.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 持久的全局系统变量设置存储在位于数据目录中的mysqld-auto.cnf中。
- en: 'Suppose you want to log queries only for this session and not for all the connections.
    You can use the following command:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您只想记录此会话的查询，而不是所有连接的查询。您可以使用以下命令：
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Using parameters with startup script
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用启动脚本的参数
- en: Suppose you wish to start MySQL using a startup script and not through `systemd`,
    especially for testing or for some temporary change. You can pass the variables
    to the script rather than changing it in the config file.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您希望使用启动脚本启动MySQL，而不是通过`systemd`，特别是用于测试或进行一些临时更改。您可以将变量传递给脚本，而不是在配置文件中更改它。
- en: How to do it...
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: You can see that the `--init-file` parameter is passed to the server. The server
    executes the SQL statements in that file before starting.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到`--init-file`参数被传递给服务器。服务器在启动之前执行该文件中的SQL语句。
- en: Configuring the parameters
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置参数
- en: After installation, the basic things you need to configure are covered in this
    section. The rest all can be left as default or tuned later according to the load.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后，您需要配置的基本事项在本节中都有所涵盖。其余的都可以保持默认或根据负载稍后进行调整。
- en: How to do it...
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: Let's get into the details.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解。
- en: data directory
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据目录
- en: Data managed by the MySQL server is stored under a directory known as the `data
    directory`. Each sub-directory of the `data directory` is a database directory
    and corresponds to a database managed by the server. By default, the
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 由MySQL服务器管理的数据存储在一个名为`数据目录`的目录下。`数据目录`的每个子目录都是一个数据库目录，对应于服务器管理的数据库。默认情况下，
- en: '`data directory` has three sub directories:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`数据目录`有三个子目录：'
- en: '`mysql`: MySQL system database'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mysql`：MySQL系统数据库'
- en: '`performance_schema`: Provides information used to inspect the internal execution
    of the server at runtime'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`performance_schema`：提供了用于在运行时检查服务器内部执行的信息'
- en: '`sys`: Provides a set of objects to help interpret performance schema information
    more easily'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sys`：提供了一组对象，以帮助更轻松地解释性能模式信息'
- en: Apart from these, the `data directory` contains the log files, `InnoDB` tablespace
    and `InnoDB` log files, SSL and RSA key files, `pid` of `mysqld`, and `mysqld-auto.cnf`,
    which stores persisted global system variable settings.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，`data directory`还包含日志文件、`InnoDB`表空间和`InnoDB`日志文件、SSL和RSA密钥文件、`mysqld`的`pid`以及`mysqld-auto.cnf`，其中存储了持久化的全局系统变量设置。
- en: 'To set the `data directory` change/add the value of `datadir` to the config
    file. The default is `/var/lib/mysql`:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置`data directory`的更改/添加`datadir`的值到配置文件。默认值为`/var/lib/mysql`：
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: You can set it to wherever you want to store the data, but you should change
    the ownership of the `data directory` to `mysql`.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将其设置为任何你想要存储数据的地方，但你应该将`data directory`的所有权更改为`mysql`。
- en: Make sure that the disk volume bearing the `data directory` has sufficient space
    to hold all your data.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 确保承载`data directory`的磁盘卷有足够的空间来容纳所有的数据。
- en: innodb_buffer_pool_size
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: innodb_buffer_pool_size
- en: This is the most important tuning parameter that decides how much memory the `InnoDB`
    storage engine can use to cache data and indexes in memory. Setting it too low
    can degrade the performance of the MySQL server, and setting it too high can increase
    the memory consumption of MySQL process. The best thing about MySQL 8 is that `innodb_buffer_pool_size`
    is dynamic, meaning you can vary `innodb_buffer_pool_size` without restarting
    the server.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这是决定`InnoDB`存储引擎可以使用多少内存来缓存数据和索引的最重要的调整参数。设置得太低会降低MySQL服务器的性能，设置得太高会增加MySQL进程的内存消耗。MySQL
    8最好的地方在于`innodb_buffer_pool_size`是动态的，这意味着你可以在不重新启动服务器的情况下改变`innodb_buffer_pool_size`。
- en: 'Here is a simple guide on how to tune it:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是如何调整它的简单指南：
- en: Find out the size of your dataset. Do not set the value of `innodb_buffer_pool_size`
    higher than that of your dataset. Suppose you have a 12 GB RAM machine and your
    dataset is 3 GB; then you can set `innodb_buffer_pool_size` to 3 GB. If you expect
    growth in your data, you can increase it as and when needed without restarting
    MySQL.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找数据集的大小。不要将`innodb_buffer_pool_size`的值设置得高于数据集的大小。假设你有12GB的RAM机器，你的数据集大小为3GB；那么你可以将`innodb_buffer_pool_size`设置为3GB。如果你预计数据会增长，你可以根据需要随时增加它，而无需重新启动MySQL。
- en: Usually, the size of the dataset is much bigger than the available RAM. Out
    of the total RAM, you can set some for the operating system, some for other processes,
    some for per-thread buffers inside MySQL, and some for the MySQL server apart
    from `InnoDB`. The rest can be assigned to the `InnoDB` buffer pool size.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通常，数据集的大小要比可用的RAM大得多。在总RAM中，你可以为操作系统、其他进程、MySQL内部的每个线程缓冲区和`InnoDB`之外的MySQL服务器分配一些内存。剩下的可以分配给`InnoDB`缓冲池大小。
- en: This is a very generic table and gives you a good value to start with, assuming
    that it is a dedicated MySQL server, all the tables are `InnoDB`, and per-thread
    buffers are left as default. If the system is running out of memory, you can decrease
    the buffer pool dynamically.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常通用的表，为你提供了一个很好的起点，假设它是一个专用的MySQL服务器，所有的表都是`InnoDB`，每个线程的缓冲区都保持默认值。如果系统内存不足，你可以动态减少缓冲池。
- en: '| **RAM** | **Buffer Pool Size (Range)** |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| **RAM** | **缓冲池大小（范围）** |'
- en: '| 4 GB | 1 GB-2 GB |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| 4 GB | 1 GB-2 GB |'
- en: '| 8 GB | 4 GB-6 GB |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 8 GB | 4 GB-6 GB |'
- en: '| 12 GB | 6 GB-10 GB |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 12 GB | 6 GB-10 GB |'
- en: '| 16 GB | 10 GB-12 GB |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| 16 GB | 10 GB-12 GB |'
- en: '| 32 GB | 24 GB-28 GB |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 32 GB | 24 GB-28 GB |'
- en: '| 64 GB | 45 GB-56 GB |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| 64 GB | 45 GB-56 GB |'
- en: '| 128 GB | 108 GB-116 GB |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 128 GB | 108 GB-116 GB |'
- en: '| 256 GB | 220 GB-245 GB |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| 256 GB | 220 GB-245 GB |'
- en: innodb_buffer_pool_instances
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: innodb_buffer_pool_instances
- en: You can divided the `InnoDB` buffer pool into separate regions to improve concurrency,
    by reducing contention as different threads read and write to cached pages. For
    example, if the buffer pool size is 64 GB and `innodb_buffer_pool_instances` are
    32, the buffer is split into 32 regions with 2 GB each.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将`InnoDB`缓冲池划分为单独的区域，以提高并发性，通过减少不同线程对缓存页面的读写而产生的争用。例如，如果缓冲池大小为64GB，`innodb_buffer_pool_instances`为32，那么缓冲池将被分割成32个每个2GB的区域。
- en: If the buffer pool size is more than 16 GB, you can set the instances so that
    each region gets at least 1 GB of space.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果缓冲池大小超过16GB，你可以设置实例，以便每个区域至少获得1GB的空间。
- en: innodb_log_file_size
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: innodb_log_file_size
- en: This is the size of the redo log space used to replay committed transactions
    in case of a database crash. The default is 48 MB, which may not be sufficient
    for production workloads. To start with, you can set 1 GB or 2 GB. This change
    requires a restart. Stop the MySQL server and make sure that it shuts down without
    errors. Make the changes in `my.cnf` and start the server. In earlier versions,
    you need to stop the server, remove the log files, and then start the server.
    In MySQL 8, it is automatic. Modifying the redo log files is explained in [Chapter
    11](part0388.html#BI0Q80-faa69fe6f4c04957afca3568dcd9cd83), *Managing Tablespace*,
    in the *Changing the number or size of InnoDB redo log files* section.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这是用于在数据库崩溃时重放已提交事务的重做日志空间的大小。默认值为48MB，这对于生产工作负载可能不够。你可以先设置为1GB或2GB。这个更改需要重新启动。停止MySQL服务器，并确保它在没有错误的情况下关闭。在`my.cnf`中进行更改并启动服务器。在早期版本中，你需要停止服务器，删除日志文件，然后启动服务器。在MySQL
    8中，这是自动的。修改重做日志文件在[第11章](part0388.html#BI0Q80-faa69fe6f4c04957afca3568dcd9cd83)中有解释，*管理表空间*，在*更改InnoDB重做日志文件的数量或大小*部分。
- en: Changing the data directory
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改数据目录
- en: Your data can grow over time, and when it outgrows the filesystem, you need
    to add a disk or move the `data directory` to a bigger volume.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 你的数据可能会随着时间的推移而增长，当它超出文件系统时，你需要添加一个磁盘或将`data directory`移动到一个更大的卷中。
- en: How to do it...
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Check the current `data directory`. By default, the `data directory` is `/var/lib/mysql`:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查当前的`data directory`。默认情况下，`data directory`是`/var/lib/mysql`：
- en: '[PRE9]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Stop `mysql` and make sure it has stopped successfully:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停止`mysql`并确保它已成功停止：
- en: '[PRE10]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Check the status:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查状态：
- en: '[PRE11]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: It should show `Stopped MySQL Community Server`.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 应该显示`已停止MySQL Community Server`。
- en: 'Create the directory at the new location and change the ownership to `mysql`:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新位置创建目录并将所有权更改为`mysql`：
- en: '[PRE12]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Move the files to the new `data directory`:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件移动到新的`data目录`：
- en: '[PRE13]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'In Ubuntu, if you''ve enabled AppArmor, you need to configure the Access Control:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Ubuntu中，如果已启用AppArmor，您需要配置访问控制：
- en: '[PRE14]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Start MySQL server and verify that the `data` directory has changed:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动MySQL服务器并验证`data`目录已更改：
- en: '[PRE15]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Verify that the data is intact and remove the old `data directory`:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证数据是否完好并删除旧的`data目录`：
- en: '[PRE16]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'If MySQL fails to starts with the error—`MySQL data dir not found at /var/lib/mysql,
    please create one`:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果MySQL启动失败并显示错误—`MySQL数据目录在/var/lib/mysql未找到，请创建一个`：
- en: Execute, `sudo mkdir /var/lib/mysql/mysql -p`
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 执行`sudo mkdir /var/lib/mysql/mysql -p`
- en: If it says `MySQL system database not found`, run the ;`mysql_install_db` tool,
    which creates the required directories.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果显示`MySQL系统数据库未找到`，运行`mysql_install_db`工具，该工具将创建所需的目录。
