- en: Backups
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 备份
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下内容：
- en: Taking backups using mysqldump
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用mysqldump进行备份
- en: Taking backups using mysqlpump
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用mysqlpump进行备份
- en: Taking backups using mydumper
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用mydumper进行备份
- en: Taking backups using flat files
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用平面文件进行备份
- en: Taking backups using XtraBackup
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用XtraBackup进行备份
- en: Locking instances for backup
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 备份实例
- en: Binary log backup
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 二进制日志备份
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'After setting up the database, the next important thing is to set up backups.
    In this chapter, you will learn how to set up various types of backups. There
    are two main ways to perform a backup. One is logical backup, which exports all
    the databases, table structures, data, and stored routines into a set of SQL statements
    that can be executed again to recreate the state of the database. The other type
    is physical backup, which contains all the files on the system that the databases
    used to store all the database entities:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 设置数据库后，下一个重要的事情是设置备份。在本章中，您将学习如何设置各种类型的备份。执行备份有两种主要方式。一种是逻辑备份，它将所有数据库、表结构、数据和存储例程导出为一组SQL语句，可以再次执行以重新创建数据库的状态。另一种类型是物理备份，它包含系统上数据库用于存储所有数据库实体的所有文件：
- en: '**Logical backup utilities**: `mysqldump`, `mysqlpump`, and `mydumper` (not
    shipped with MySQL)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**逻辑备份工具**：`mysqldump`、`mysqlpump`和`mydumper`（未随MySQL一起提供）'
- en: '**Physical backup utilities**: XtraBackup (not shipped with MySQL) and flat
    file backup'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**物理备份工具**：XtraBackup（未随MySQL一起提供）和平面文件备份'
- en: For point-in-time recovery, the backup should be able to provide the binary
    log positions up to which the backups are taken. This is called a **consistent
    backup**.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 对于时间点恢复，备份应能够提供备份所涉及的二进制日志位置。这称为**一致备份**。
- en: It is highly recommended to take backups from a slave onto a filer mounted on
    it.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议从从属机器上的filer进行备份。
- en: Taking backups using mysqldump
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用mysqldump进行备份
- en: '`mysqldump` is a widely used logical backup tool. It gives a variety of options
    to include or exclude databases, select specific data to be backed up, back up
    only the schema without data, or just take a backup of stored routines without
    anything else, and more.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`mysqldump`是一个广泛使用的逻辑备份工具。它提供了各种选项，可以包括或排除数据库，选择要备份的特定数据，仅备份架构而不包括数据，或者仅备份存储例程而不包括其他内容等。'
- en: How to do it...
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: The `mysqldump` utility comes along with the `mysql` binary, so you do need
    to install it separately. Most production scenarios are covered in this section.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`mysqldump`实用程序随`mysql`二进制文件一起提供，因此您无需单独安装它。本节涵盖了大多数生产场景。'
- en: 'The syntax is as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 语法如下：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In the options, you can specify the username, password, and hostname to connect
    to the database, like this:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在选项中，您可以指定用户名、密码和主机名以连接到数据库，如下所示：
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In this chapter, `--user` and `--password` are not mentioned in every example,
    to keep the reader focused on other important options.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，每个示例中都没有提到`--user`和`--password`，以便读者专注于其他重要选项。
- en: Full backup of all databases
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 所有数据库的完整备份
- en: 'This can be done with the following:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过以下方式完成：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `--all-databases` option takes a backup of all databases and all tables.
    The `>` operator redirects the output to the `dump.sql` file. Prior to MySQL 8,
    stored procedures and events were stored in the `mysql.proc` and `mysql.event`
    tables. From MySQL 8 onward, definitions for corresponding objects are stored
    in `data dictionary` tables, but those tables are not dumped. To include stored
    routines and events in a dump made using `--all-databases`, use the `--routines`
    and `--events` options.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`--all-databases`选项备份所有数据库和所有表。`>`运算符将输出重定向到`dump.sql`文件。在MySQL 8之前，存储过程和事件存储在`mysql.proc`和`mysql.event`表中。从MySQL
    8开始，相应对象的定义存储在`数据字典`表中，但这些表不会被转储。要在使用`--all-databases`进行转储时包括存储例程和事件，请使用`--routines`和`--events`选项。'
- en: 'To include the routines and events:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 包括例程和事件：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You can open the `dump.sql` file to see how it is structured. The first few
    lines are the session variables at the time of dumping. Next is the `CREATE DATABASE`
    statement, followed by the `USE DATABASE` command. Next is the `DROP TABLE IF
    EXISTS` statement, followed by `CREATE TABLE`; and then we have the actual `INSERT`
    statements that insert the data. Since the data is stored as SQL statements, this
    is called **logical backup**.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以打开`dump.sql`文件查看其结构。前几行是转储时的会话变量。接下来是`CREATE DATABASE`语句，然后是`USE DATABASE`命令。接下来是`DROP
    TABLE IF EXISTS`语句，然后是`CREATE TABLE`；然后我们有实际的`INSERT`语句插入数据。由于数据存储为SQL语句，因此称为**逻辑备份**。
- en: You will notice that when you restore the dump, the `DROP TABLE` statement will
    wipe off all the tables before creating the tables.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到，当您恢复转储时，`DROP TABLE`语句将在创建表之前清除所有表。
- en: Point-in-time recovery
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 时间点恢复
- en: To get point-in-time recovery, you should specify `--single-transaction` and
    `--master-data`.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得时间点恢复，您应该指定`--single-transaction`和`--master-data`。
- en: The `--single-transaction` option provides consistent backup by changing the
    transaction isolation mode to `REPEATABLE READ` and executing `START TRANSACTION`
    before taking a backup. It is useful only with transactional tables, such as `InnoDB`,
    because then it dumps the consistent state of the database at the time `START
    TRANSACTION` was issued without blocking any applications.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`--single-transaction`选项通过将事务隔离模式更改为`REPEATABLE READ`并在进行备份之前执行`START TRANSACTION`来提供一致的备份。仅在使用事务表（如`InnoDB`）时才有用，因为它会在不阻止任何应用程序的情况下转储发出`START
    TRANSACTION`时数据库的一致状态。'
- en: 'The `--master-data` option prints the binary log coordinates of the server
    to the `dump` file. If `--master-data=2`, it prints as a comment. This also uses
    the `FLUSH TABLES WITH READ LOCK` statement to get a snapshot for the binary logs.
    As explained in Chapter 5, *Transactions*, this can be very dangerous when there
    is any long-running transaction:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`--master-data`选项将服务器的二进制日志坐标打印到`dump`文件中。如果`--master-data=2`，它将作为注释打印。这还使用`FLUSH
    TABLES WITH READ LOCK`语句来获取二进制日志的快照。正如在第5章“事务”中所解释的那样，在存在任何长时间运行的事务时，这可能非常危险：'
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Dumping master binary coordinates
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转储主二进制坐标
- en: 'Backups are always taken on slaves. To get the binary log coordinates of the
    master when the backup was taken, you can use the `--dump-slave` option. If you
    are taking the binary log backup from the master, use this option. Otherwise,
    use the `--master-data` option:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 备份始终在从服务器上进行。要获取备份时主服务器的二进制日志坐标，可以使用`--dump-slave`选项。如果要从主服务器获取二进制日志备份，请使用此选项。否则，请使用`--master-data`选项：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The output will be like this:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 输出将如下所示：
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Specific databases and tables
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 特定数据库和表
- en: 'To back up only a specific database, execute this:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 要仅备份特定数据库，请执行以下操作：
- en: '[PRE7]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To back up only a specific table, execute this:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要仅备份特定表，请执行以下操作：
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Ignore tables
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 忽略表
- en: 'To ignore certain tables, you can use the `--ignore-table=database.table` option.
    To specify more than one table to ignore, use the directive multiple times:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要忽略某些表，可以使用`--ignore-table=database.table`选项。要指定要忽略的多个表，请多次使用该指令：
- en: '[PRE9]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Specific rows
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 特定行
- en: '`mysqldump` helps you filter the data you back up. Suppose you want to take
    a backup of employees who joined after 2000:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`mysqldump`可帮助您过滤备份的数据。假设您要备份2000年后加入的员工的备份：'
- en: '[PRE10]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You can use the `LIMIT` clause to limit the results:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`LIMIT`子句来限制结果：
- en: '[PRE11]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Backup from a remote server
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从远程服务器备份
- en: 'Sometimes, you may not have SSH access to the database server (as in the case
    of cloud instances such as Amazon RDS). In those cases, you can use `mysqldump`
    to take a backup from a remote server to the local server. For this, you need
    to mention `hostname` using the `--hostname` option. Make sure that the user has
    appropriate privileges to connect and perform a backup:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，您可能无法访问数据库服务器的SSH（例如云实例，如Amazon RDS）。在这种情况下，您可以使用`mysqldump`从远程服务器备份到本地服务器。为此，您需要使用`--hostname`选项提到`hostname`。确保用户具有适当的权限以连接和执行备份：
- en: '[PRE12]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Backup to rebuild another server with a different schema
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 备份以重建具有不同模式的另一个服务器
- en: There can be a situation where you want to have a different schema on another
    server. In that case, you have to dump and restore the schema, alter the schema
    as you need, and then dump and restore the data. Altering the schema with data
    can take a long time, depending on the amount of data you have. Note that this
    method will work only when the modified schema is compatible with inserts. The
    modified table can have extra columns but it should have all the columns present
    in the original table.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会出现这样的情况，您希望在另一台服务器上具有不同的模式。在这种情况下，您必须转储和还原模式，根据需要更改模式，然后转储和还原数据。根据您拥有的数据量，更改带有数据的模式可能需要很长时间。请注意，此方法仅在修改后的模式与插入兼容时才有效。修改后的表可以有额外的列，但应该具有原始表中的所有列。
- en: Only schema and no data
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 仅模式，无数据
- en: 'You can use `--no-data` to dump only the schema:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`--no-data`仅转储模式：
- en: '[PRE13]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Only data and no schema
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 仅数据，无模式
- en: You can use the following options to take only a data dump, excluding the schema.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下选项仅获取数据转储，而不包括模式。
- en: '`--complete-insert` will print the column names in the `INSERT` statement,
    which will help when you have extra columns in the modified table:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '`--complete-insert`将在`INSERT`语句中打印列名，这将在修改后的表中有额外列时有所帮助：'
- en: '[PRE14]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Backup for merging data with other server
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 备份以与其他服务器合并数据
- en: You can take backup either way to replace the old data or keep the old data
    incase of conflict.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以以任何一种方式备份以替换旧数据或在冲突发生时保留旧数据。
- en: REPLACE with new data
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用新数据替换
- en: 'Suppose you want to restore data from the production database to a development
    machine that already has some data. If you want to merge the data from production
    with development, you can use the `--replace` option, which will use the `REPLACE
    INTO` statement instead of the `INSERT` statement. You should also include the `--skip-add-drop-table`
    option, which will not write a `DROP TABLE` statement to the `dump` file. If you
    have the same number of tables and structure, you can also include the `--no-create-info`
    option, which will skip the `CREATE TABLE` statement in the `dump` file:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您希望将生产数据库中的数据还原到已经存在一些数据的开发机器。如果要将生产中的数据与开发中的数据合并，可以使用`--replace`选项，该选项将使用`REPLACE
    INTO`语句而不是`INSERT`语句。您还应该包括`--skip-add-drop-table`选项，该选项不会将`DROP TABLE`语句写入`dump`文件。如果表的数量和结构相同，还可以包括`--no-create-info`选项，该选项将跳过`dump`文件中的`CREATE
    TABLE`语句：
- en: '[PRE15]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: If you have some extra tables in production, the preceding dump will fail while
    restoring because the table does not exist on development server. In that case,
    you should not add the `--no-create-info` option and use the `force` option while
    restoring. Otherwise, the restore will fail at `CREATE TABLE` saying that the
    table already exists. Unfortunately, `mysqldump` has not provided the option of
    `CREATE TABLE IF NOT EXISTS`.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果生产环境中有一些额外的表，那么在还原时上述转储将失败，因为开发服务器上不存在该表。在这种情况下，您不应添加`--no-create-info`选项，并在还原时使用`force`选项。否则，还原将在`CREATE
    TABLE`时失败，说表已经存在。不幸的是，`mysqldump`没有提供`CREATE TABLE IF NOT EXISTS`选项。
- en: IGNORE data
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 忽略数据
- en: Instead of `REPLACE`, you can use the `INSERT IGNORE` statement when writing
    to the `dump` file. This will keep the existing data on the server and insert
    new data.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在写入`dump`文件时使用`INSERT IGNORE`语句代替`REPLACE`。这将保留服务器上的现有数据并插入新数据。
- en: Taking backups using mysqlpump
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用mysqlpump进行备份
- en: '`mysqlpump` is a very similar program to `mysqldump` with some extra features.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`mysqlpump`是一个与`mysqldump`非常相似的程序，具有一些额外的功能。'
- en: How to do it...
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: There are numerous ways to do it. Let's have a look at each one in detail.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多方法可以做到这一点。让我们详细看看每种方法。
- en: Parallel processing
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 并行处理
- en: 'You can speed up the process of dumping by specifying the number of threads
    (based on the number of CPUs). For example, use eight threads to take a full backup:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 通过指定线程数（基于CPU数量）可以加快转储过程。例如，使用八个线程进行完整备份：
- en: '[PRE16]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'You can even specify the number of threads for each database. In our case,
    the `employees` database is very big compared to the `company` database. So you
    can spawn four threads to `employees` and two threads to the `company` database:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 您甚至可以为每个数据库指定线程数。在我们的情况下，`employees`数据库与`company`数据库相比非常大。因此，您可以为`employees`生成四个线程，并为`company`数据库生成两个线程：
- en: '[PRE17]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Another example to distribute the threads has three threads for `db1` and `db2`,
    two threads for `db3` and `db4`, and four threads for the rest of the databases:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子是将线程分配给`db1`和`db2`的三个线程，`db3`和`db4`的两个线程，以及其余数据库的四个线程：
- en: '[PRE18]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: You will notice that there is a progress bar that will help you estimate the
    time.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到有一个进度条，可以帮助您估计时间。
- en: Exclude/include database objects using regex
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用正则表达式排除/包含数据库对象
- en: 'Take a backup of all databases ending with `prod`:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 备份以`prod`结尾的所有数据库：
- en: '[PRE19]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Suppose there are some test tables in some databases and you want to exclude
    them from the backup; you can specify using the `--exclude-tables` option, which
    will exclude tables with the name `test` across all databases:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 假设某些数据库中有一些测试表，您希望将它们从备份中排除；您可以使用`--exclude-tables`选项指定，该选项将在所有数据库中排除名称为`test`的表：
- en: '[PRE20]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The value of each inclusion and exclusion option is a comma-separated list
    of names of the appropriate object type. Wildcard characters are permitted in
    object names:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 每个包含和排除选项的值都是适当对象类型的名称的逗号分隔列表。通配符字符允许在对象名称中使用：
- en: '`%` matches any sequence of zero or more characters'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`%`匹配零个或多个字符的任何序列'
- en: '`_` matches any single character'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`_`匹配任何单个字符'
- en: Apart from databases and tables, you can also include or exclude triggers, routines,
    events, and users, for example, `--include-routines`, `--include-events`, and
    `--exclude-triggers`.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 除了数据库和表之外，您还可以包括或排除触发器、例程、事件和用户，例如，`--include-routines`、`--include-events`和`--exclude-triggers`。
- en: To know more about the include and exclude options, refer to [https://dev.mysql.com/doc/refman/8.0/en/mysqlpump.html#mysqlpump-filtering](https://dev.mysql.com/doc/refman/8.0/en/mysqlpump.html#mysqlpump-filtering).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于包含和排除选项的信息，请参阅[https://dev.mysql.com/doc/refman/8.0/en/mysqlpump.html#mysqlpump-filtering](https://dev.mysql.com/doc/refman/8.0/en/mysqlpump.html#mysqlpump-filtering)。
- en: Backup users
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 备份用户
- en: 'In `mysqldump`, you will not get a backup of the users in `CREATE USER` or
    `GRANT` statements; instead you have to take a backup of the `mysql.user` table.
    Using `mysqlpump`, you can dump user accounts as account management statements
    (`CREATE USER` and `GRANT`) rather than as inserts into the `mysql` system database:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在`mysqldump`中，您将不会在`CREATE USER`或`GRANT`语句中获得用户的备份；相反，您必须备份`mysql.user`表。使用`mysqlpump`，您可以将用户帐户作为帐户管理语句（`CREATE
    USER`和`GRANT`）而不是插入到`mysql`系统数据库中：
- en: '[PRE21]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'You can also exclude some users by specifying the `--exclude-users` option:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过指定`--exclude-users`选项来排除一些用户：
- en: '[PRE22]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Compressed backups
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 压缩备份
- en: You can compress the backup to minimize disk space and network bandwidth. You
    can use `--compress-output=lz4` or `--compress-output=zlib`.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以压缩备份以减少磁盘空间和网络带宽。您可以使用`--compress-output=lz4`或`--compress-output=zlib`。
- en: 'Note that you should have the appropriate decompress utilities:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您应该具有适当的解压缩实用程序：
- en: '[PRE23]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'To decompress execute this:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 要解压缩，请执行此操作：
- en: '[PRE24]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Using `zlib` execute this:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`zlib`执行此操作：
- en: '[PRE25]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'To decompress execute this:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 要解压缩，请执行此操作：
- en: '[PRE26]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Faster reload
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更快的重新加载
- en: You will notice that in the output, the secondary indexes are omitted from the
    `CREATE TABLE` statement. This will speed up the restoration process. The indexes
    are added at the end of the `INSERT` using the `ALTER TABLE` statement.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到在输出中，从`CREATE TABLE`语句中省略了次要索引。这将加快恢复过程。索引将使用`ALTER TABLE`语句在`INSERT`的末尾添加。
- en: Indexes will be covered in [Chapter 13](part0432.html#CRVJ00-faa69fe6f4c04957afca3568dcd9cd83),
    *Performance Tuning*.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 索引将在[第13章](part0432.html#CRVJ00-faa69fe6f4c04957afca3568dcd9cd83)，*性能调整*中进行讨论。
- en: Previously, it was possible to dump all tables in the `mysql` system database.
    As of MySQL 8, `mysqldump` and `mysqlpump` dump only non-`data dictionary` tables
    in that database.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 以前，可以在`mysql`系统数据库中转储所有表。从MySQL 8开始，`mysqldump`和`mysqlpump`仅转储该数据库中的非“数据字典”表。
- en: Taking backups using mydumper
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用mydumper进行备份
- en: '`mydumper` is a logical backup tool that''s similar to `mysqlpump`.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`mydumper`是一个类似于`mysqlpump`的逻辑备份工具。'
- en: '`mydumper` has these advantages over `mysqldump`:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`mydumper`相对于`mysqldump`具有以下优点：'
- en: Parallelism (hence, speed) and performance (avoids expensive character set conversion
    routines and has efficient code overall).
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并行性（因此，速度）和性能（避免昂贵的字符集转换例程，并且整体代码效率高）。
- en: Consistency. It maintains snapshots across all threads, provides accurate master
    and slave log positions, and so on. `mysqlpump` does not guarantee consistency.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一致性。它在所有线程中保持快照，提供准确的主从日志位置等。 `mysqlpump`不能保证一致性。
- en: Easier to manage output (separate files for tables and dumped metadata, and
    it is easy to view/parse data). `mysqlpump` writes everything to one file, which
    limits the option of loading selective database objects.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更容易管理输出（为表和转储的元数据分别创建文件，并且很容易查看/解析数据）。 `mysqlpump`将所有内容写入一个文件，这限制了加载选择性数据库对象的选项。
- en: Inclusion and exclusion of database objects using regex.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用正则表达式包含和排除数据库对象。
- en: The option to kill long-running transactions that block the backup and all subsequent
    queries.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 终止长时间运行的事务以阻止备份和所有后续查询的选项。
- en: '`mydumper` is an open source backup tool, which you need to install separately.
    In this section, installation steps on Debian and Red Hat systems and the usage
    of `mydumper` will be covered.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '`mydumper`是一个开源备份工具，您需要单独安装。本节将介绍Debian和Red Hat系统上的安装步骤以及`mydumper`的使用。'
- en: How to do it...
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: Let's start with the installation and then we will learn a lot of things related
    to backup in every subsection that is listed within this recipe.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从安装开始，然后我们将学习与备份相关的许多事项，这些事项在本食谱中列出的每个子部分中都有。
- en: Installation
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装
- en: 'Install the prerequisites:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 安装先决条件：
- en: 'On Ubuntu/Debain:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu/Debain上：
- en: '[PRE27]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'On Red Hat/CentOS/Fedora:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在Red Hat/CentOS/Fedora上：
- en: '[PRE28]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Alternatively, using YUM or APT, you can find the releases here at [https://github.com/maxbube/mydumper/releases](https://github.com/maxbube/mydumper/releases):'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以使用YUM或APT，在此处找到发布版本：[https://github.com/maxbube/mydumper/releases](https://github.com/maxbube/mydumper/releases)
- en: '[PRE29]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Full backup
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 完整备份
- en: 'The following command takes a backup of all databases into the `/backups` folder:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将所有数据库备份到`/backups`文件夹中：
- en: '[PRE30]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Several files are created in the `/backups` folder. Each database has its `CREATE
    DATABASE` statement as `<database_name>-schema-create.sql` and each table will
    have its own schema and data files. Schema files are stored as `<database_name>.<table>-schema.sql`
    and data files are stored as `<database_name>.<table>.sql`.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在`/backups`文件夹中创建了多个文件。每个数据库都有其`CREATE DATABASE`语句，格式为`<database_name>-schema-create.sql`，每个表都有自己的模式和数据文件。模式文件存储为`<database_name>.<table>-schema.sql`，数据文件存储为`<database_name>.<table>.sql`。
- en: 'The views are stored as `<database_name>.<table>-schema-view.sql`. Stored routines,
    triggers, and events are stored as `<database_name>-schema-post.sql` (use `sudo
    mkdir –pv /backups` if directory is not created):'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 视图存储为`<database_name>.<table>-schema-view.sql`。存储的例程，触发器和事件存储为`<database_name>-schema-post.sql`（如果目录未创建，请使用`sudo
    mkdir –pv /backups`）：
- en: '[PRE31]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'If there are any queries longer than 60 seconds, `mydumper` will fail with
    the following error:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有任何超过60秒的查询，`mydumper`将以以下错误失败：
- en: '[PRE32]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: To avoid this, you can pass the `--kill-long-queries` option or set `--long-query-guard`
    to a higher value.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免这种情况，您可以传递`--kill-long-queries`选项或将`--long-query-guard`设置为更高的值。
- en: 'The `--kill-long-queries` option kills all the queries that are greater than
    60 seconds or a value set by `--long-query-guard`.  Please note that `--kill-long-queries`
    also kills the replication thread due to a bug ([https://bugs.launchpad.net/mydumper/+bug/1713201](https://bugs.launchpad.net/mydumper/+bug/1713201)):'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '`--kill-long-queries`选项会杀死所有大于60秒或由`--long-query-guard`设置的值的查询。请注意，由于错误（[https://bugs.launchpad.net/mydumper/+bug/1713201](https://bugs.launchpad.net/mydumper/+bug/1713201)），`--kill-long-queries`也会杀死复制线程：'
- en: '[PRE33]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Consistent backup
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一致备份
- en: The metadata file in the `backup` directory contains the binary log coordinates
    for consistent backup.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 备份目录中的元数据文件包含一致备份的二进制日志坐标。
- en: 'On a master, it captures the binary log positions:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在主服务器上，它捕获二进制日志位置：
- en: '[PRE34]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'On a slave, it captures the binary log positions of both master and slave:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在从服务器上，它捕获主服务器和从服务器的二进制日志位置：
- en: '[PRE35]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Backup of a single table
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单表备份
- en: 'The following command takes the backup of the `employees` table of the `employees`
    database into the `/backups` directory:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将`employees`数据库的`employees`表备份到`/backups`目录中：
- en: '[PRE37]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'The convention of the files are as follows:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 文件的约定如下：
- en: '`employees-schema-create.sql` contains the `CREATE DATABASE` statement'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`employees-schema-create.sql`包含`CREATE DATABASE`语句'
- en: '`employees.employees-schema.sql` contains the `CREATE TABLE` statement'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`employees.employees-schema.sql`包含`CREATE TABLE`语句'
- en: '`employees-schema-post.sql` contains the `ROUTINES`, `TRIGGERS`, and `EVENTS`'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`employees-schema-post.sql`包含`ROUTINES`，`TRIGGERS`和`EVENTS`'
- en: '`employees.employees.sql` contains the actual data in the form of `INSERT`
    statements'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`employees.employees.sql`包含`INSERT`语句形式的实际数据'
- en: Backup of specific databases using regex
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用正则表达式备份特定数据库
- en: 'You can include/exclude specific databases using the `regex` option. The following
    command will exclude `mysql` and `test` databases from the backup:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`regex`选项包括/排除特定数据库。以下命令将从备份中排除`mysql`和`test`数据库：
- en: '[PRE39]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Taking backup of a big table using mydumper
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用mydumper备份大表
- en: 'To speed up the dump and restore of a big table, you can split it into small
    chunks. The chunk size can be specified by the number of rows it contains and
    each chunk will be written into a separate file:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 为了加快大表的转储和恢复速度，您可以将其分成小块。块大小可以通过它包含的行数来指定，每个块将被写入单独的文件中：
- en: '[PRE40]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '`-t`: Specifies the number of threads'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-t`：指定线程数'
- en: '`--trx-consistency-only`: If you are using only transnational tables, such
    as `InnoDB`, using this option will minimize the locking'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--trx-consistency-only`：如果只使用事务表，例如`InnoDB`，使用此选项将最小化锁定'
- en: '`--rows`: Split the table into chunks of this number of rows'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--rows`：将表拆分为此行数的块'
- en: 'For each chunk, a file is created as `<database_name>.<table_name>.<number>.sql`;
    the number is padded with five zeros:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个块，将创建一个文件，格式为`<database_name>.<table_name>.<number>.sql`；数字用五个零填充：
- en: '[PRE41]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Non-blocking backup
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 非阻塞备份
- en: To provide consistent backup, `mydumper` acquires `GLOBAL LOCK` by executing
    `FLUSH TABLES WITH READ LOCK`.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提供一致的备份，`mydumper`通过执行`FLUSH TABLES WITH READ LOCK`获取`GLOBAL LOCK`。
- en: You have already seen how dangerous it is to use `FLUSH TABLES WITH READ LOCK`
    if there are any long-running transactions (explained in Chapter 5, *Transactions*).
    To avoid that, you can pass the `--kill-long-queries` option to kill blocking
    queries rather than aborting `mydumper`.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有任何长时间运行的事务（在第5章“事务”中解释）使用`FLUSH TABLES WITH READ LOCK`是多么危险。为了避免这种情况，您可以传递`--kill-long-queries`选项来杀死阻塞查询，而不是中止`mydumper`。
- en: '`--trx-consistency-only`: This is equivalent to `--single-transaction` for
    `mysqldump` but with a `binlog` position. Obviously, this position only applies
    to transactional tables. One of the advantages of using this option is that the
    global read lock is only held for the threads'' coordination, so it''s released
    as soon as the transactions are started.'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`--trx-consistency-only`：这相当于`mysqldump`的`--single-transaction`，但带有`binlog`位置。显然，此位置仅适用于事务表。使用此选项的优点之一是全局读锁仅用于线程协调，因此一旦事务开始，它就会被释放。'
- en: '`--use-savepoints` reduces metadata locking issues (needs the `SUPER` privilege).'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: --use-savepoints减少元数据锁定问题（需要`SUPER`权限）。
- en: Compressed backups
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 压缩备份
- en: 'You can specify the `--compress` option to compress the backup:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以指定`--compress`选项来压缩备份：
- en: '[PRE42]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Backing up only data
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 仅备份数据
- en: 'You can use the `--no-schemas` option to skip the schema and take a data-only
    backup:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`--no-schemas`选项跳过模式并进行仅数据备份：
- en: '[PRE44]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Taking backups using flat files
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用平面文件进行备份
- en: This is a physical backup method whereby you take a backup by directly copying
    the files inside `data directory`. Since new data is written while you copy the
    files, the backup will be inconsistent and cannot be used. To avoid that, you
    have to shut down MySQL, copy the files, and then start MySQL. This method is
    not used for daily backups but is well suited during maintenance windows for upgrades
    or downgrades or while doing a host swap.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种物理备份方法，通过直接复制`data directory`中的文件来进行备份。由于在复制文件时会写入新数据，因此备份将是不一致的，无法使用。为了避免这种情况，您必须关闭MySQL，复制文件，然后启动MySQL。这种方法不适用于日常备份，但在维护窗口期间进行升级、降级或进行主机交换时非常合适。
- en: How to do it...
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Shut down the MySQL server:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭MySQL服务器：
- en: '[PRE45]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Copy the files into the `data directory` (your directory may be different):'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件复制到`data directory`（您的目录可能不同）：
- en: '[PRE46]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Start the MySQL server:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动MySQL服务器：
- en: '[PRE47]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Taking backups using XtraBackup
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用XtraBackup进行备份
- en: XtraBackup is an open source backup software provided by Percona. It copies
    flat files without shutting down the server, but to avoid inconsistencies, it
    uses a redo log file. It is widely used by many companies as a standard backup
    tool. The advantages are that it is very fast compared to logical backup tools
    and recovery is also very fast.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: XtraBackup是由Percona提供的开源备份软件。它在不关闭服务器的情况下复制平面文件，但为了避免不一致性，它使用重做日志文件。许多公司将其作为标准备份工具广泛使用。其优点是与逻辑备份工具相比非常快，恢复速度也非常快。
- en: 'This is how Percona XtraBackup works (taken from the Percona XtraBackup documentation):'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Percona XtraBackup的工作原理（摘自Percona XtraBackup文档）：
- en: It copies your `InnoDB` data files, which results in data that is internally
    inconsistent; but then it performs crash recovery on the files to make them a
    consistent, usable database again.
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它会复制您的`InnoDB`数据文件，这将导致数据在内部不一致；然后它会对文件执行崩溃恢复，使它们成为一致的可用数据库。
- en: This works because `InnoDB` maintains a redo log, also called the transaction
    log. This contains a record of every change to the `InnoDB` data. When `InnoDB`
    starts, it inspects the data files and the transaction log, and performs two steps.
    It applies committed transaction log entries to the data files, and it performs
    an undo operation on any transactions that modified data but did not commit.
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是因为`InnoDB`维护着一个重做日志，也称为事务日志。这包含了对`InnoDB`数据的每一次更改的记录。当`InnoDB`启动时，它会检查数据文件和事务日志，并执行两个步骤。它将已提交的事务日志条目应用于数据文件，并对修改数据但未提交的任何事务执行撤消操作。
- en: Percona XtraBackup works by remembering the **log sequence number** (**LSN**)
    when it starts, and then copying away the data files. It takes some time to do
    this, so if the files are changing, then they reflect the state of the database
    at different points in time. At the same time, Percona XtraBackup runs a background
    process that watches the transaction log files, and copies changes from it. Percona
    XtraBackup needs to do this continually because the transaction logs are written
    in a round-robin fashion, and can be reused after a while. Percona XtraBackup
    needs the transaction log records for every change to the data files since it
    began execution.
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Percona XtraBackup在启动时通过记住**日志序列号**（**LSN**）来工作，然后复制数据文件。这需要一些时间，因此如果文件在更改，则它们反映了数据库在不同时间点的状态。同时，Percona
    XtraBackup运行一个后台进程，监视事务日志文件，并从中复制更改。Percona XtraBackup需要不断执行此操作，因为事务日志是以循环方式写入的，并且一段时间后可以被重用。自执行以来，Percona
    XtraBackup需要事务日志记录，以获取自开始执行以来对数据文件的每次更改。
- en: How to do it...
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: At the time of writing, Percona XtraBackup is not supported for MySQL 8\. Eventually,
    Percona will release a new version of XtraBackup supporting MySQL 8; hence only
    the installation is covered.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，Percona XtraBackup不支持MySQL 8。最终，Percona将发布支持MySQL 8的新版本XtraBackup；因此只涵盖了安装部分。
- en: Installation
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装
- en: The installation steps are in the following sections.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '安装步骤在以下部分中。 '
- en: On CentOS/Red Hat/Fedora
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CentOS/Red Hat/Fedora上
- en: 'Install `mysql-community-libs-compat`:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`mysql-community-libs-compat`：
- en: '[PRE48]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Install the Percona repository:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装Percona存储库：
- en: '[PRE49]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'You should see some output such as the following:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下输出：
- en: '[PRE50]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Test the repository:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试存储库：
- en: '[PRE51]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Install XtraBackup:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装XtraBackup：
- en: '[PRE52]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: On Debian/Ubuntu
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Debian/Ubuntu上
- en: 'Fetch the repository packages from Percona:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Percona获取存储库软件包：
- en: '[PRE53]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Install the downloaded package with `dpkg`. To do that, run the following commands
    as `root` or with `sudo`:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`dpkg`安装下载的软件包。为此，请以`root`或`sudo`身份运行以下命令：
- en: '[PRE54]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Once you install this package, the Percona repositories should be added. You
    can check the repository setup in the `/etc/apt/sources.list.d/percona-release.list`
    file.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 安装此软件包后，应该添加Percona存储库。您可以在`/etc/apt/sources.list.d/percona-release.list`文件中检查存储库设置。
- en: 'Remember to update the local cache:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记得更新本地缓存：
- en: '[PRE55]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'After that, you can install the package:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，您可以安装软件包：
- en: '[PRE56]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Locking instances for backup
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 锁定备份实例
- en: As of MySQL 8, you can lock the instance for backup, which will allow the DML
    during online backup and block all the operations that could result in an inconsistent
    snapshot.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 从MySQL 8开始，您可以锁定实例以进行备份，这将允许在线备份期间进行DML，并阻止可能导致不一致快照的所有操作。
- en: How to do it...
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Before you begin your backup, lock the instance for backup:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始备份之前，请锁定实例以进行备份：
- en: '[PRE57]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Perform the backup, and after completion, unlock the instance:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 执行备份，完成后解锁实例：
- en: '[PRE58]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Binary log backup
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 二进制日志备份
- en: You know that binary logs are needed for point-in-time recovery. In this section,
    you will understand how to take a backup of binary logs. The process streams the
    binary logs from the database server to a remote backup server. You can take the
    binary log backup from either the slave or the master. If you are taking the binary
    log backup from the master and the actual backup from the slave, you should use
    `--dump-slave` to get the corresponding master log position. If you are using
    `mydumper` or XtraBackup, it gives both the master and slave binary log positions.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 您知道二进制日志对于时点恢复是必需的。在本节中，您将了解如何备份二进制日志。该过程将二进制日志从数据库服务器流式传输到远程备份服务器。您可以从从服务器或主服务器中获取二进制日志备份。如果您从主服务器获取二进制日志备份，并且从从服务器获取实际备份，您应该使用`--dump-slave`来获取相应的主日志位置。如果您使用`mydumper`或XtraBackup，它会提供主服务器和从服务器的二进制日志位置。
- en: How to do it...
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Create a replication user on the server. Create a strong password:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在服务器上创建一个复制用户。创建一个强密码：
- en: '[PRE59]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Check the binary logs on the server:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查服务器上的二进制日志：
- en: '[PRE60]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: You can find the first binary log available on the server; from this, you can
    start the backup. In this case, it is `server1.000008`.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在服务器上找到第一个可用的二进制日志；从这里，您可以开始备份。在这种情况下，它是`server1.000008`。
- en: 'Log in to the backup server and execute the following command. This will copy
    the binary logs from the MySQL server to the backup server. You can start using
    `nohup` or `disown`:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到备份服务器并执行以下命令。这将从MySQL服务器复制二进制日志到备份服务器。您可以开始使用`nohup`或`disown`：
- en: '[PRE61]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Verify that the binary logs are being backed up:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证二进制日志是否已备份：
- en: '[PRE62]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
